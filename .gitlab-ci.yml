stages:
  - unittest
  - build
  - integrationtest
  - deploy

services:
  - name: postgres:9-alpine
    alias: postgres9
  - name: postgres:10-alpine
    alias: postgres10
  - name: docker:dind

variables:
  GITLAB_REGISTRY: "registry.gitlab.com/${CI_PROJECT_PATH}"
  UBUNTU_BASE_IMAGE: "registry.gitlab.com/${CI_PROJECT_PATH}/base/ubuntu"
  DEBIAN_BASE_IMAGE: "registry.gitlab.com/${CI_PROJECT_PATH}/base/debian"
  UBUNTU_FLECTRA_IMAGE: "registry.gitlab.com/${CI_PROJECT_PATH}/ubuntu"
  DEBIAN_FLECTRA_IMAGE: "registry.gitlab.com/${CI_PROJECT_PATH}/debian"
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2

  # Configure postgres service (https://hub.docker.com/_/postgres/)
  POSTGRES_DB: postgres
  POSTGRES_USER: flectra
  POSTGRES_PASSWORD: flectra
  POSTGRES_HOST: postgres
  POSTGRES_PORT: "5432"

test_test:
  image: ${UBUNTU_BASE_IMAGE}:latest
  stage: unittest
  script:
    - su - flectra -c 'python -c "import locale; print(locale.getlocale())"'

test:pg9_base:
  image: ${UBUNTU_BASE_IMAGE}:latest
  stage: unittest
  except:
    - schedules
  script:
    - su - flectra -c "cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=base --host=postgres9"
  coverage: '/^TOTAL.*\s+(\d+\%)$/'

test:pg9_all:
  image: ${UBUNTU_BASE_IMAGE}:latest
  stage: unittest
  except:
    - schedules
  script:
    - su - flectra -c "cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=all --host=postgres9"
  coverage: '/^TOTAL.*\s+(\d+\%)$/'

test:pg10_base:
  image: ${UBUNTU_BASE_IMAGE}:latest
  stage: unittest
  except:
    - schedules
  script:
    - su - flectra -c "cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=base --host=postgres10"
  coverage: '/^TOTAL.*\s+(\d+\%)$/'

test:pg10_all:
  image: ${UBUNTU_BASE_IMAGE}:latest
  stage: unittest
  except:
    - schedules
  script:
    - su - flectra -c "cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=all --host=postgres10"
  coverage: '/^TOTAL.*\s+(\d+\%)$/'

build:base_ubuntu:
  stage: build
  only:
    - schedules
  image: docker:stable
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull ${UBUNTU_BASE_IMAGE}:latest || true
    - docker build --cache-from ${UBUNTU_BASE_IMAGE}:latest -f ./setup/docker/base/ubuntu/Dockerfile ./setup/docker/ --tag ${UBUNTU_BASE_IMAGE}:latest
    - docker push ${UBUNTU_BASE_IMAGE}:latest

build:base_debian:
  stage: build
  only:
    - schedules
  image: docker:stable
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull ${DEBIAN_BASE_IMAGE}:latest || true
    - docker build --cache-from ${DEBIAN_BASE_IMAGE}:latest -f ./setup/docker/base/debian/Dockerfile ./setup/docker/ --tag ${DEBIAN_BASE_IMAGE}:latest
    - docker push ${DEBIAN_BASE_IMAGE}:latest

build:flectra_ubuntu:
  variables:
    GIT_STRATEGY: none
  stage: build
  except:
    - schedules
  image: docker:stable
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -f ./setup/docker/flectra/ubuntu/Dockerfile ./setup/docker/ --tag ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA
    - docker push ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA

build:flectra_debian:
  stage: build
  except:
    - schedules
  image: docker:stable
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -f ./setup/docker/flectra/debian/Dockerfile ./setup/docker/ --tag ${DEBIAN_FLECTRA_IMAGE}:$CI_COMMIT_SHA
    - docker push ${DEBIAN_FLECTRA_IMAGE}:$CI_COMMIT_SHA

itest:ubuntu_pg9_all:
  stage: integrationtest
  except:
    - schedules
  image: ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA
  script:
    - cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=all --server-path=/opt/flectra/flectra --host=postgres9

itest:ubuntu_pg10_all:
  stage: integrationtest
  except:
    - schedules
  image: ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA
  script:
    - cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=all --server-path=/opt/flectra/flectra --host=postgres10

itest:debian_pg9_all:
  stage: integrationtest
  except:
    - schedules
  image: ${DEBIAN_FLECTRA_IMAGE}:$CI_COMMIT_SHA
  script:
    - cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=all --server-path=/opt/flectra/flectra --host=postgres9

itest:debian_pg10_all:
  stage: integrationtest
  except:
    - schedules
  image: ${DEBIAN_FLECTRA_IMAGE}:$CI_COMMIT_SHA
  script:
    - cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=all --server-path=/opt/flectra/flectra --host=postgres10

deploy:flectra_ubuntu:
  variables:
    GIT_STRATEGY: none
  stage: deploy
  only:
    - tag
  image: docker:stable
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -f ./setup/docker/flectra/ubuntu/Dockerfile ./setup/docker/ --tag ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_TAG --tag ${UBUNTU_FLECTRA_IMAGE}:latest
    - docker push ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_TAG
    - docker push ${UBUNTU_FLECTRA_IMAGE}:latest

deploy:flectra_debian:
  variables:
    GIT_STRATEGY: none
  stage: deploy
  only:
    - tag
  image: docker:stable
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -f ./setup/docker/flectra/ubuntu/Dockerfile ./setup/docker/ --tag ${DEBIAN_FLECTRA_IMAGE}:$CI_COMMIT_TAG --tag ${DEBIAN_FLECTRA_IMAGE}:latest
    - docker push ${DEBIAN_FLECTRA_IMAGE}:$CI_COMMIT_TAG
    - docker push ${DEBIAN_FLECTRA_IMAGE}:latest
