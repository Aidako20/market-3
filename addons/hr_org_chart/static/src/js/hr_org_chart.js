flectra.define('web.OrgChart',function(require){
"usestrict";

varAbstractField=require('web.AbstractField');
varconcurrency=require('web.concurrency');
varcore=require('web.core');
varfield_registry=require('web.field_registry');
varsession=require('web.session');

varQWeb=core.qweb;
var_t=core._t;

varFieldOrgChart=AbstractField.extend({

    events:{
        "click.o_employee_redirect":"_onEmployeeRedirect",
        "click.o_employee_sub_redirect":"_onEmployeeSubRedirect",
        "click.o_employee_more_managers":"_onEmployeeMoreManager"
    },
    /**
     *@constructor
     *@override
     */
    init:function(parent,options){
        this._super.apply(this,arguments);
        this.dm=newconcurrency.DropMisordered();
        this.employee=null;
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------
    /**
     *Getthechartdatathrougharpccall.
     *
     *@private
     *@param{integer}employee_id
     *@returns{Promise}
     */
    _getOrgData:function(){
        varself=this;
        returnthis.dm.add(this._rpc({
            route:'/hr/get_org_chart',
            params:{
                employee_id:this.employee,
                context:session.user_context,
            },
        })).then(function(data){
            returndata;
        });
    },
    /**
     *Getsubordonatesofanemployeethrougharpccall.
     *
     *@private
     *@param{integer}employee_id
     *@returns{Promise}
     */
    _getSubordinatesData:function(employee_id,type){
        returnthis.dm.add(this._rpc({
            route:'/hr/get_subordinates',
            params:{
                employee_id:employee_id,
                subordinates_type:type,
                context:session.user_context,
            },
        }));
    },
    /**
     *@override
     *@private
     */
    _render:function(){
        if(!this.recordData.id){
            returnthis.$el.html(QWeb.render("hr_org_chart",{
                managers:[],
                children:[],
            }));
        }
        elseif(!this.employee){
            //thewidgetiseitherdispayedinthecontextofahr.employeeformorares.usersform
            this.employee=this.recordData.employee_ids!==undefined?this.recordData.employee_ids.res_ids[0]:this.recordData.id;
        }

        varself=this;
        returnthis._getOrgData().then(function(orgData){
            if(_.isEmpty(orgData)){
                orgData={
                    managers:[],
                    children:[],
                }
            }
            orgData.view_employee_id=self.recordData.id;
            self.$el.html(QWeb.render("hr_org_chart",orgData));
            self.$('[data-toggle="popover"]').each(function(){
                $(this).popover({
                    html:true,
                    title:function(){
                        var$title=$(QWeb.render('hr_orgchart_emp_popover_title',{
                            employee:{
                                name:$(this).data('emp-name'),
                                id:$(this).data('emp-id'),
                            },
                        }));
                        $title.on('click',
                            '.o_employee_redirect',_.bind(self._onEmployeeRedirect,self));
                        return$title;
                    },
                    container:this,
                    placement:'left',
                    trigger:'focus',
                    content:function(){
                        var$content=$(QWeb.render('hr_orgchart_emp_popover_content',{
                            employee:{
                                id:$(this).data('emp-id'),
                                name:$(this).data('emp-name'),
                                direct_sub_count:parseInt($(this).data('emp-dir-subs')),
                                indirect_sub_count:parseInt($(this).data('emp-ind-subs')),
                            },
                        }));
                        $content.on('click',
                            '.o_employee_sub_redirect',_.bind(self._onEmployeeSubRedirect,self));
                        return$content;
                    },
                    template:QWeb.render('hr_orgchart_emp_popover',{}),
                });
            });
        });
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    _onEmployeeMoreManager:function(event){
        event.preventDefault();
        this.employee=parseInt($(event.currentTarget).data('employee-id'));
        this._render();
    },
    /**
     *Redirecttotheemployeeformview.
     *
     *@private
     *@param{MouseEvent}event
     *@returns{Promise}actionloaded
     */
    _onEmployeeRedirect:function(event){
        varself=this;
        event.preventDefault();
        varemployee_id=parseInt($(event.currentTarget).data('employee-id'));
        returnthis._rpc({
            model:'hr.employee',
            method:'get_formview_action',
            args:[employee_id],
        }).then(function(action){
            returnself.do_action(action);
        });
    },
    /**
     *Redirecttothesubemployeeformview.
     *
     *@private
     *@param{MouseEvent}event
     *@returns{Promise}actionloaded
     */
    _onEmployeeSubRedirect:function(event){
        event.preventDefault();
        varemployee_id=parseInt($(event.currentTarget).data('employee-id'));
        varemployee_name=$(event.currentTarget).data('employee-name');
        vartype=$(event.currentTarget).data('type')||'direct';
        varself=this;
        if(employee_id){
            this._getSubordinatesData(employee_id,type).then(function(data){
                vardomain=[['id','in',data]];
                returnself._rpc({
                    model:'hr.employee',
                    method:'get_formview_action',
                    args:[employee_id],
                }).then(function(action){
                    action=_.extend(action,{
                        'name':_t('Team'),
                        'view_mode':'kanban,list,form',
                        'views': [[false,'kanban'],[false,'list'],[false,'form']],
                        'domain':domain,
                        'context':{
                            'default_parent_id':employee_id,
                        }
                    });
                    deleteaction['res_id'];
                    returnself.do_action(action);
                });
            });
        }
    },
});

field_registry.add('hr_org_chart',FieldOrgChart);

returnFieldOrgChart;

});
