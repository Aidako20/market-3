flectra.define('bus.BusService',function(require){
"usestrict";

varCrossTab=require('bus.CrossTab');
varcore=require('web.core');
varServicesMixin=require('web.ServicesMixin');
constsession=require('web.session');

varBusService= CrossTab.extend(ServicesMixin,{
    dependencies:['local_storage'],

    //properties
    _audio:null,

    /**
     *AstheBusServicedoesn'textendAbstractService,wehavetoreplicate
     *herewhatisdoneinAbstractService
     *
     *@param{Object}env
     */
    init:function(env){
        this.env=env;
        this._super();
    },

    /**
     *ReplicatethebehaviorofAbstractService:
     *
     *Directlycallstherequestedservice,insteadoftriggeringa
     *'call_service'eventup,whichwouldn'tworkasserviceshavenoparent.
     *
     *@param{FlectraEvent}ev
     */
    _trigger_up:function(ev){
        if(ev.name==='call_service'){
            constpayload=ev.data;
            letargs=payload.args||[];
            if(payload.service==='ajax'&&payload.method==='rpc'){
                //ajaxserviceusesanextra'target'argumentforrpc
                args=args.concat(ev.target);
            }
            constservice=this.env.services[payload.service];
            constresult=service[payload.method].apply(service,args);
            payload.callback(result);
        }
    },
    /**
     *ThismethodisnecessaryinorderforthisClasstobeusedtoinstantiateservices
     *
     *@abstract
     */
    start:function(){},

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *Sendanotification,andnotifyonceperbrowser'stab
     *
     *@param{string}title
     *@param{string}content
     *@param{function}[callback]ifgivencallbackwillbecalledwhenuserclicksonnotification
     */
    sendNotification:function(title,content,callback){
        if(window.Notification&&Notification.permission==="granted"){
            if(this.isMasterTab()){
                try{
                    this._sendNativeNotification(title,content,callback);
                }catch(error){
                    //NotificationwithoutServiceworkerinChromeAndroiddoesn'tworksanymore
                    //Sowefallbacktodo_notify()inthiscase
                    //https://bugs.chromium.org/p/chromium/issues/detail?id=481856
                    if(error.message.indexOf('ServiceWorkerRegistration')>-1){
                        this.do_notify(title,content);
                        this._beep();
                    }else{
                        throwerror;
                    }
                }
            }
        }else{
            this.do_notify(title,content);
            if(this.isMasterTab()){
                this._beep();
            }
        }
    },
    /**
     *Registerlistenersonnotificationsreceivedonthisbusservice
     *
     *@param{Object}receiver
     *@param{function}func
     */
    onNotification:function(){
        this.on.apply(this,["notification"].concat(Array.prototype.slice.call(arguments)));
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *Lazilyplaythe'beep'audioonsentnotification
     *
     *@private
     */
    _beep:function(){
        if(typeof(Audio)!=="undefined"){
            if(!this._audio){
                this._audio=newAudio();
                varext=this._audio.canPlayType("audio/ogg;codecs=vorbis")?".ogg":".mp3";
                this._audio.src=session.url("/mail/static/src/audio/ting"+ext);
            }
            Promise.resolve(this._audio.play()).catch(_.noop);
        }
    },
    /**
     *Showabrowsernotification
     *
     *@private
     *@param{string}title
     *@param{string}content
     *@param{function}[callback]ifgivencallbackwillbecalledwhenuserclicksonnotification
     */
    _sendNativeNotification:function(title,content,callback){
        varnotification=newNotification(
            //ThenativeNotificationAPIworkswithplaintextandnotHTML
            //unescapingissafebecausedoneonlyatthe**last**step
            _.unescape(title),
            {
                body:_.unescape(content),
                icon:"/mail/static/src/img/flectrabot_transparent.png"
            });
        notification.onclick=function(){
            window.focus();
            if(this.cancel){
                this.cancel();
            }elseif(this.close){
                this.close();
            }
            if(callback){
                callback();
            }
        };
    },

});

core.serviceRegistry.add('bus_service',BusService);

returnBusService;

});
