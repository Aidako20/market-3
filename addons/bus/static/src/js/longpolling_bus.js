flectra.define('bus.Longpolling',function(require){
"usestrict";

varBus=require('web.Bus');
varServicesMixin=require('web.ServicesMixin');


/**
 *EventLongpollingbususedtobindeventsontheserverlongpollingreturn
 *
 *trigger:
 *-window_focus:whenthewindowfocuschange(trueforfocused,falseforblur)
 *-notification:whenanotificationisreceivefromthelongpolling
 *
 *@classLongpolling
 */
varLongpollingBus=Bus.extend(ServicesMixin,{
    //constants
    PARTNERS_PRESENCE_CHECK_PERIOD:30000, //don'tcheckpresencemorethanonceevery30s
    ERROR_RETRY_DELAY:10000,//10seconds
    POLL_ROUTE:'/longpolling/poll',

    //properties
    _isActive:null,
    _lastNotificationID:0,
    _isFlectraFocused:true,
    _pollRetryTimeout:null,

    /**
     *@override
     */
    init:function(parent,params){
        this._super.apply(this,arguments);
        this._id=_.uniqueId('bus');

        //the_idismodifiedbycrosstab_bus,sowecan'tuseittounbindtheeventsinthedestroy.
        this._longPollingBusId=this._id;
        this._options={};
        this._channels=[];

        //buspresence
        this._lastPresenceTime=newDate().getTime();
        $(window).on("focus."+this._longPollingBusId,this._onFocusChange.bind(this,{focus:true}));
        $(window).on("blur."+this._longPollingBusId,this._onFocusChange.bind(this,{focus:false}));
        $(window).on("unload."+this._longPollingBusId,this._onFocusChange.bind(this,{focus:false}));

        $(window).on("click."+this._longPollingBusId,this._onPresence.bind(this));
        $(window).on("keydown."+this._longPollingBusId,this._onPresence.bind(this));
        $(window).on("keyup."+this._longPollingBusId,this._onPresence.bind(this));
    },
    /**
     *@override
     */
    destroy:function(){
        this.stopPolling();
        $(window).off("focus."+this._longPollingBusId);
        $(window).off("blur."+this._longPollingBusId);
        $(window).off("unload."+this._longPollingBusId);
        $(window).off("click."+this._longPollingBusId);
        $(window).off("keydown."+this._longPollingBusId);
        $(window).off("keyup."+this._longPollingBusId);
        this._super();
    },
    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------
    /**
     *Registeranewchanneltolistenonthelongpoll(ignoreifalready
     *listeningonthischannel).
     *Abortsapendinglongpoll,inordertore-startanotherlongpoll,so
     *thatwecanimmediatelygetnotificationsonnewlyregisteredchannel.
     *
     *@param{string}channel
     */
    addChannel:function(channel){
        if(this._channels.indexOf(channel)===-1){
            this._channels.push(channel);
            if(this._pollRpc){
                this._pollRpc.abort();
            }else{
                this.startPolling();
            }
        }
    },
    /**
     *Unregisterachannelfromlisteningonthelongpoll.
     *
     *Abortsapendinglongpoll,inordertore-startanotherlongpoll,so
     *thatweimmediatelyremoveourselvesfromlisteningonnotifications
     *onthischannel.
     *
     *@param{string}channel
     */
    deleteChannel:function(channel){
        varindex=this._channels.indexOf(channel);
        if(index!==-1){
            this._channels.splice(index,1);
            if(this._pollRpc){
                this._pollRpc.abort();
            }
        }
    },
    /**
     *Tellwhetherflectraisfocusedornot
     *
     *@returns{boolean}
     */
    isFlectraFocused:function(){
        returnthis._isFlectraFocused;
    },
    /**
     *Startalongpolling,i.e.itcontinuallyopensalongpoll
     *connectionaslongasitisnotstopped(@see`stopPolling`)
     */
    startPolling:function(){
        if(this._isActive===null){
            this._poll=this._poll.bind(this);
        }
        if(!this._isActive){
            this._isActive=true;
            this._poll();
        }
    },
    /**
     *Stopsanystartedlongpolling
     *
     *Abortsapendinglongpollsothatweimmediatelyremoveourselves
     *fromlisteningonnotificationsonthischannel.
     */
    stopPolling:function(){
        this._isActive=false;
        this._channels=[];
        clearTimeout(this._pollRetryTimeout);
        if(this._pollRpc){
            this._pollRpc.abort();
        }
    },
    /**
     *Addorupdateanoptiononthelongpollbus.
     *Storedoptionsaresenttotheserverwheneverapollisstarted.
     *
     *@param{string}key
     *@param{any}value
     */
    updateOption:function(key,value){
        this._options[key]=value;
    },
    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------
    /**
     *returnsthelastrecordedpresence
     *
     *@private
     *@returns{integer}numberofmillisecondssince1January197000:00:00
     */
    _getLastPresence:function(){
        returnthis._lastPresenceTime;
    },
    /**
     *Continuallystartapoll:
     *
     *Apollisaconnectionthatiskeptopenforarelativelylongperiod
     *(upto1minute).Localbusdataaresenttotheservereachtimeapoll
     *isinitiated,andtheservermayreturnsome"real-time"notifications
     *aboutregisteredchannels.
     *
     *Apollendsontimeout,onabort,onreceivingsomenotifications,oron
     *receivinganerror.Anotherpollusuallystartsafterward,exceptifthe
     *pollisabortedorstopped(@seestopPolling).
     *
     *@private
     */
    _poll:function(){
        varself=this;
        if(!this._isActive){
            return;
        }
        varnow=newDate().getTime();
        varoptions=_.extend({},this._options,{
            bus_inactivity:now-this._getLastPresence(),
        });
        vardata={channels:this._channels,last:this._lastNotificationID,options:options};
        //Thebackendhasamaximumcycletimeof50secondssogive+10seconds
        this._pollRpc=this._makePoll(data);
        this._pollRpc.then(function(result){
            self._pollRpc=false;
            self._onPoll(result);
            self._poll();
        }).guardedCatch(function(result){
            self._pollRpc=false;
            //noerrorpopupifrequestisinterruptedorfailsforanyreason
            result.event.preventDefault();
            if(result.message==="XmlHttpRequestErrorabort"){
                self._poll();
            }else{
                //randomdelaytoavoidmassivelongpolling
                self._pollRetryTimeout=setTimeout(self._poll,self.ERROR_RETRY_DELAY+(Math.floor((Math.random()*20)+1)*1000));
            }
        });
    },

    /**
     *@private
     *@paramdata:objectwithpollparameters
     */
    _makePoll:function(data){
        returnthis._rpc({route:this.POLL_ROUTE,params:data},{shadow:true,timeout:60000});
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------
    /**
     *Handlerwhenthefocusofthewindowchange.
     *Triggerthe'window_focus'event.
     *
     *@private
     *@param{Object}params
     *@param{Boolean}params.focus
     */
    _onFocusChange:function(params){
        this._isFlectraFocused=params.focus;
        if(params.focus){
            this._lastPresenceTime=newDate().getTime();
            this.trigger('window_focus',this._isFlectraFocused);
        }
    },
    /**
     *Handlerwhenthelongpollingreceivethenewnotifications
     *Updatethelastnotificationidreceived.
     *Triggeredthe'notification'eventwithalist[channel,message]fromnotifications.
     *
     *@private
     *@param{Object[]}notifications,Inputnotificationshaveanid,channel,message
     *@returns{Array[]}Outputarrayshavenotification'schannelandmessage
     */
    _onPoll:function(notifications){
        varself=this;
        varnotifs=_.map(notifications,function(notif){
            if(notif.id>self._lastNotificationID){
                self._lastNotificationID=notif.id;
            }
            return[notif.channel,notif.message];
        });
        this.trigger("notification",notifs);
        returnnotifs;
    },
    /**
     *Handlerwhentheyareanactivityonthewindow(click,keydown,keyup)
     *Updatethelastpresencedate.
     *
     *@private
     */
    _onPresence:function(){
        this._lastPresenceTime=newDate().getTime();
    },
});

returnLongpollingBus;

});
