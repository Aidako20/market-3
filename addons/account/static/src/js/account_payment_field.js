flectra.define('account.payment',function(require){
"usestrict";

varAbstractField=require('web.AbstractField');
varcore=require('web.core');
varfield_registry=require('web.field_registry');
varfield_utils=require('web.field_utils');

varQWeb=core.qweb;
var_t=core._t;

varShowPaymentLineWidget=AbstractField.extend({
    events:_.extend({
        'click.outstanding_credit_assign':'_onOutstandingCreditAssign',
    },AbstractField.prototype.events),
    supportedFieldTypes:['char'],

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *@override
     *@returns{boolean}
     */
    isSet:function(){
        returntrue;
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@private
     *@override
     */
    _render:function(){
        varself=this;
        varinfo=JSON.parse(this.value);
        if(!info){
            this.$el.html('');
            return;
        }
        _.each(info.content,function(k,v){
            k.index=v;
            k.amount=field_utils.format.float(k.amount,{digits:k.digits});
            if(k.date){
                k.date=field_utils.format.date(field_utils.parse.date(k.date,{},{isUTC:true}));
            }
        });
        this.$el.html(QWeb.render('ShowPaymentInfo',{
            lines:info.content,
            outstanding:info.outstanding,
            title:info.title
        }));
        _.each(this.$('.js_payment_info'),function(k,v){
            varisRTL=_t.database.parameters.direction==="rtl";
            varcontent=info.content[v];
            varoptions={
                content:function(){
                    var$content=$(QWeb.render('PaymentPopOver',content));
                    varunreconcile_button=$content.filter('.js_unreconcile_payment').on('click',self._onRemoveMoveReconcile.bind(self));

                    $content.filter('.js_open_payment').on('click',self._onOpenPayment.bind(self));
                    return$content;
                },
                html:true,
                placement:isRTL?'bottom':'left',
                title:'PaymentInformation',
                trigger:'focus',
                delay:{"show":0,"hide":100},
                container:$(k).parent(),//FIXMEUgly,shouldusethedefaultbodycontainerbutsystem&teststoadapttoproperlydestroythepopover
            };
            $(k).popover(options);
        });
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *@private
     *@override
     *@param{MouseEvent}event
     */
    _onOpenPayment:function(event){
        varpaymentId=parseInt($(event.target).attr('payment-id'));
        varmoveId=parseInt($(event.target).attr('move-id'));
        varres_model;
        varid;
        if(paymentId!==undefined&&!isNaN(paymentId)){
            res_model="account.payment";
            id=paymentId;
        }elseif(moveId!==undefined&&!isNaN(moveId)){
            res_model="account.move";
            id=moveId;
        }
        //Openformviewofaccount.movewithid=move_id
        if(res_model&&id){
            this.do_action({
                type:'ir.actions.act_window',
                res_model:res_model,
                res_id:id,
                views:[[false,'form']],
                target:'current'
            });
        }
    },
    /**
     *@private
     *@override
     *@param{MouseEvent}event
     */
    _onOutstandingCreditAssign:function(event){
        event.stopPropagation();
        event.preventDefault();
        varself=this;
        varid=$(event.target).data('id')||false;
        this._rpc({
                model:'account.move',
                method:'js_assign_outstanding_line',
                args:[JSON.parse(this.value).move_id,id],
            }).then(function(){
                self.trigger_up('reload');
            });
    },
    /**
     *@private
     *@override
     *@param{MouseEvent}event
     */
    _onRemoveMoveReconcile:function(event){
        varself=this;
        varmoveId=parseInt($(event.target).attr('move-id'));
        varpartialId=parseInt($(event.target).attr('partial-id'));
        if(partialId!==undefined&&!isNaN(partialId)){
            this._rpc({
                model:'account.move',
                method:'js_remove_outstanding_partial',
                args:[moveId,partialId],
            }).then(function(){
                self.trigger_up('reload');
            });
        }
    },
});

field_registry.add('payment',ShowPaymentLineWidget);

return{
    ShowPaymentLineWidget:ShowPaymentLineWidget
};

});
