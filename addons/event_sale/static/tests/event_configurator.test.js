flectra.define('event.configurator.tests',function(require){
    "usestrict";

    varFormView=require('web.FormView');
    vartestUtils=require('web.test_utils');
    varcreateView=testUtils.createView;

    vargetArch=function(){
        return'<form>'+
        '<sheet>'+
        '<fieldname="sale_order_line"widget="section_and_note_one2many">'+
        '<treeeditable="top"><control>'+
        '<createstring="Addaproduct"/>'+
        '<createstring="Addasection"context="{\'default_display_type\':\'line_section\'}"/>'+
        '<createstring="Addanote"context="{\'default_display_type\':\'line_note\'}"/>'+
        '</control>'+
        '<fieldname="product_id"widget="product_configurator"/>'+
        '</tree>'+
        '</field>'+
        '</sheet>'+
        '</form>';
    };

    QUnit.module('EventConfigurator',{
        beforeEach:function(){
            this.data={
                'product.product':{
                    fields:{
                        id:{type:'integer'},
                        event_ok:{type:'boolean'},
                        rent_ok:{type:'boolean'}//sale_rentalpurposes
                    },
                    records:[{
                        id:1,
                        display_name:"CustomizableEvent",
                        event_ok:true,
                        rent_ok:false//sale_rentalpurposes
                    },{
                        id:2,
                        display_name:"Desk",
                        event_ok:false,
                        rent_ok:false//sale_rentalpurposes
                    }]
                },
                sale_order:{
                    fields:{
                        id:{type:'integer'},
                        sale_order_line:{
                            string:'lines',
                            type:'one2many',
                            relation:'sale_order_line'
                        },
                    }
                },
                sale_order_line:{
                    fields:{
                        product_id:{
                            string:'product',
                            type:'many2one',
                            relation:'product.product'
                        },
                        event_ok:{type:'boolean'},
                        rent_ok:{type:'boolean'},//sale_rentalpurposes
                        event_id:{
                            string:'event',
                            type:'many2one',
                            relation:'event'
                        },
                        event_ticket_id:{
                            string:'event_ticket',
                            type:'many2one',
                            relation:'event_ticket'
                        }
                    }
                }
            };
        }
    },function(){
        QUnit.test('Selectaregularproductandverifythattheeventconfiguratorisnotopened',asyncfunction(assert){
            assert.expect(1);

            varform=awaitcreateView({
                View:FormView,
                model:'sale_order',
                data:this.data,
                arch:getArch(),
                mockRPC:function(route,params){
                    if(params.method==='read'&&params.args[1][0]==='event_ok'){
                        assert.ok(true);
                        returnPromise.resolve([{event_ok:false}]);
                    }
                    returnthis._super.apply(this,arguments);
                },
                intercepts:{
                    do_action:function(ev){
                        if(ev.data.action==='event_sale.event_configurator_action'){
                            assert.ok(false,"Shouldnotexecutetheconfigureaction");
                        }
                    },
                }
            });

            awaittestUtils.dom.click(form.$("a:contains('Addaproduct')"));
            awaittestUtils.fields.many2one.searchAndClickItem("product_id",{item:'Desk'})
            form.destroy();
        });

        QUnit.test('Selectaconfigurableeventandverifythattheeventconfiguratorisopened',asyncfunction(assert){
            assert.expect(2);

            varform=awaitcreateView({
                View:FormView,
                model:'sale_order',
                data:this.data,
                arch:getArch(),
                mockRPC:function(route,params){
                    if(params.method==='read'&&params.args[1][0]==='event_ok'){
                        assert.ok(true);
                        returnPromise.resolve([{event_ok:true}]);
                    }
                    returnthis._super.apply(this,arguments);
                },
                intercepts:{
                    do_action:function(ev){
                        if(ev.data.action==='event_sale.event_configurator_action'){
                            assert.ok(true);
                        }
                    },
                }
            });

            awaittestUtils.dom.click(form.$("a:contains('Addaproduct')"));
            awaittestUtils.fields.many2one.searchAndClickItem("product_id",{item:'CustomizableEvent'});
            form.destroy();
        });
    });
});
