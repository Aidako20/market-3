flectra.define('event_sale.product_configurator',function(require){
varProductConfiguratorWidget=require('sale.product_configurator');

/**
 *ExtensionoftheProductConfiguratorWidgettosupporteventproductconfiguration.
 *Itopenswhenaneventproduct_productisset.
 *
 *Theeventinformationinclude:
 *-event_id
 *-event_ticket_id
 *
 */
ProductConfiguratorWidget.include({
    /**
     *@returns{boolean}
     *
     *@override
     *@private
     */
    _isConfigurableLine:function(){
        returnthis.recordData.event_ok||this._super.apply(this,arguments);
    },

    /**
     *@param{integer}productId
     *@param{String}dataPointID
     *@returns{Promise<Boolean>}stopPropagationtrueifasuitableconfiguratorhasbeenfound.
     *
     *@override
     *@private
     */
    _onProductChange:function(productId,dataPointId){
      varself=this;
      returnthis._super.apply(this,arguments).then(function(stopPropagation){
          if(stopPropagation||productId===undefined){
              returnPromise.resolve(true);
          }else{
              returnself._checkForEvent(productId,dataPointId);
          }
      });
    },

    /**
     *ThismethodwillcheckiftheproductIdneedsconfigurationornot:
     *
     *@param{integer}productId
     *@param{string}dataPointID
     *@returns{Promise<Boolean>}stopPropagationtrueiftheproductisaneventticket.
     *
     *@private
     */
    _checkForEvent:function(productId,dataPointId){
        varself=this;
        returnthis._rpc({
            model:'product.product',
            method:'read',
            args:[productId,['event_ok']],
        }).then(function(result){
            if(Array.isArray(result)&&result.length&&result[0].event_ok){
                self._openEventConfigurator({
                        default_product_id:productId
                    },
                    dataPointId
                );
                returnPromise.resolve(true);
            }
            returnPromise.resolve(false);
        });
    },

    /**
     *Openstheeventconfiguratorin'edit'mode.
     *
     *@override
     *@private
     */
    _onEditLineConfiguration:function(){
        if(this.recordData.event_ok){
            vardefaultValues={
                default_product_id:this.recordData.product_id.data.id
            };

            if(this.recordData.event_id){
                defaultValues.default_event_id=this.recordData.event_id.data.id;
            }

            if(this.recordData.event_ticket_id){
                defaultValues.default_event_ticket_id=this.recordData.event_ticket_id.data.id;
            }

            this._openEventConfigurator(defaultValues,this.dataPointID);
        }else{
            this._super.apply(this,arguments);
        }
    },

    /**
     *OpenstheeventconfiguratortoallowconfiguringtheSOlinewitheventsinformation.
     *
     *Whenthewindowisclosed,configuredvaluesareusedtotriggera'field_changed'
     *eventtomodifythecurrentSOline.
     *
     *Ifthewindowisclosedwithoutprovidingtherequiredvalues'event_id'and
     *'event_ticket_id',theproduct_idfieldiscleaned.
     *
     *@param{Object}datavarious"default_"values
     *@param{string}dataPointId
     *
     *@private
     */
    _openEventConfigurator:function(data,dataPointId){
        varself=this;
        this.do_action('event_sale.event_configurator_action',{
            additional_context:data,
            on_close:function(result){
                if(result&&!result.special){
                    self.trigger_up('field_changed',{
                        dataPointID:dataPointId,
                        changes:result.eventConfiguration,
                        onSuccess:function(){
                            //Callpost-initfunction.
                            self._onLineConfigured();
                        }
                    });
                }else{
                    if(!self.recordData.event_id||!self.recordData.event_ticket_id){
                        self.trigger_up('field_changed',{
                            dataPointID:dataPointId,
                            changes:{
                                product_id:false,
                                name:''
                            },
                        });
                    }
                }
            }
        });
    }
});


returnProductConfiguratorWidget;

});
