flectra.define('pad.pad',function(require){
"usestrict";

varAbstractField=require('web.AbstractField');
varcore=require('web.core');
varfieldRegistry=require('web.field_registry');

var_t=core._t;

varFieldPad=AbstractField.extend({
    template:'FieldPad',
    content:"",
    events:{
        'click.oe_pad_switch':'_onToggleFullScreen',
    },

    /**
     *@override
     */
    willStart:function(){
        if(this.isPadConfigured===undefined){
            returnthis._rpc({
                method:'pad_is_configured',
                model:this.model,
            }).then(function(result){
                //wewriteontheprototypetosharetheinformationbetween
                //allpadwidgetsinstances,acrossallactions
                FieldPad.prototype.isPadConfigured=result;
            });
        }
        returnthis._super.apply(this,arguments);
    },
    /**
     *@override
     */
    start:function(){
        if(!this.isPadConfigured){
            this.$(".oe_unconfigured").removeClass('d-none');
            this.$(".oe_configured").addClass('d-none');
            returnPromise.resolve();
        }
        if(this.mode==='edit'&&typeof(this.value)==='object'){
            this.value=this.value.toJSON();
        }
        if(this.mode==='edit'&&_.str.startsWith(this.value,'http')){
            this.url=this.value;
            //pleasecloseyoureyesandlookelsewhere...
            //Sincethepadvalue(theurl)willnotchangeduringtheedition
            //process,wehaveaproblem:thedescriptionfieldwillnotbe
            //properlyupdated. Weneedtoexplicitelywritethevalueeach
            //timesomeoneedittherecordinordertoforcetheservertoread
            //theupdatedvalueofthepadandputitinthedescriptionfield.
            //
            //However,thebasicmodeloptimizesawaythechangesiftheyare
            //notreallydifferentfromthecurrentvalue.So,weneedto
            //eitheraddspecialconfigurationoptionstothebasicmodel,or
            //totrickhimintoacceptingthesamevalueasbeingdifferent...
            //Guesswhatwedecided...
            varurl={};
            url.toJSON=_.constant(this.url);
            this._setValue(url,{doNotSetDirty:true});
        }

        returnthis._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *Ifwehadtogenerateanurl,wewaitforthegenerationtobecompleted,
     *sothecurrentrecordwillbeassociatedwiththecorrectpadurl.
     *
     *@override
     */
    commitChanges:function(){
        returnthis.urlDef;
    },
    /**
     *@override
     */
    isSet:function(){
        returntrue;
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *Notethatthismethodhassomeserioussideeffects:performingrpcsand
     *settingthevalueofthisfield. Thisisnotconventionalandshouldnot
     *becopiedinothercode,unlessreallynecessary.
     *
     *@override
     *@private
     */
    _renderEdit:function(){
        if(this.url){
            //here,wehaveavalidurl,sowecansimplydisplayaniframe
            //withthecorrectsrcattribute
            varuserName=encodeURIComponent(this.getSession().name);
            varurl=this.url+'?showChat=false&userName='+userName;
            varcontent='<iframewidth="100%"height="100%"frameborder="0"src="'+url+'"></iframe>';
            this.$('.oe_pad_content').html(content);
        }elseif(this.value){
            //itlookslikethefielddoesnotcontainavalidurl,sowejust
            //displayit(itcannotbeeditedinthatcase)
            this.$('.oe_pad_content').text(this.value);
        }else{
            //Itistotallydiscouragedtohavearendermethodthatdoes
            //non-renderingwork,especiallysincetheworkinquestion
            //involvesdoingRPCsandchangingthevalueofthefield.
            //However,thisiskindofnecessaryinthiscase,becausethe
            //valueofthefieldisactuallyonlytheurlofthepad.The
            //actualcontentwillbeloadedinaniframe. Wecoulddothis
            //workinthebasicmodel,butthebasicmodeldoesnotknowthat
            //thiswidgetisineditorreadonly,andwereallydonotwantto
            //createapadurleverytimeataskwithoutapadisviewed.
            varself=this;
            this.urlDef=this._rpc({
                method:'pad_generate_url',
                model:this.model,
                context:{
                    model:this.model,
                    field_name:this.name,
                    object_id:this.res_id,
                    record:this.recordData,
                },
            },{
                shadow:true
            }).then(function(result){
                //Weneedtowritetheurlofthepadtotrigger
                //thewritefunctionwhichupdatestheactualvalue
                //ofthefieldtothevalueofthepadcontent
                self.url=result.url;
                self._setValue(result.url,{doNotSetDirty:true});
            });
        }
    },
    /**
     *@override
     *@private
     */
    _renderReadonly:function(){
        if(_.str.startsWith(this.value,'http')){
            varself=this;
            this.$('.oe_pad_content')
                .addClass('oe_pad_loading')
                .text(_t("Loading"));
            this._rpc({
                method:'pad_get_content',
                model:this.model,
                args:[this.value]
            },{
                shadow:true
            }).then(function(data){
                self.$('.oe_pad_content')
                    .removeClass('oe_pad_loading')
                    .html('<divclass="oe_pad_readonly"><div>');
                self.$('.oe_pad_readonly').html(data);
            }).guardedCatch(function(){
                self.$('.oe_pad_content').text(_t('Unabletoloadpad'));
            });
        }else{
            this.$('.oe_pad_content')
                .addClass('oe_pad_loading')
                .show()
                .text(_t("Thispadwillbeinitializedonfirstedit"));
        }
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *@override
     *@private
     */
    _onToggleFullScreen:function(){
        this.$el.toggleClass('oe_pad_fullscreenmb0');
        this.$('.oe_pad_switch').toggleClass('fa-expandfa-compress');
        this.$el.parents('.o_touch_device').toggleClass('o_scroll_hidden');
    },
});

fieldRegistry.add('pad',FieldPad);

returnFieldPad;

});
