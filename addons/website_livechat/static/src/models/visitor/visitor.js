flectra.define('website_livechat/static/src/models/partner/partner.js',function(require){
'usestrict';

const{registerNewModel}=require('mail/static/src/model/model_core.js');
const{attr,many2one,one2many}=require('mail/static/src/model/model_field.js');

functionfactory(dependencies){

    classVisitorextendsdependencies['mail.model']{
        //----------------------------------------------------------------------
        //Public
        //----------------------------------------------------------------------

        /**
         *@override
         */
        staticconvertData(data){
            constdata2={};
            if('country_id'indata){
                if(data.country_id){
                    data2.country=[['insert',{
                        id:data.country_id,
                        code:data.country_code,
                    }]];
                }else{
                    data2.country=[['unlink']];
                }
            }
            if('history'indata){
                data2.history=data.history;
            }
            if('is_connected'indata){
                data2.is_connected=data.is_connected;
            }
            if('lang'indata){
                data2.lang=data.lang;
            }
            if('name'indata){
                data2.name=data.name;
            }
            if('partner_id'indata){
                if(data.partner_id){
                    data2.partner=[['insert',{id:data.partner_id}]];
                }else{
                    data2.partner=[['unlink']];
                }
            }
            if('website'indata){
                data2.website=data.website;
            }
            returndata2;
        }

        //----------------------------------------------------------------------
        //Private
        //----------------------------------------------------------------------

        /**
         *@private
         *@returns{string}
         */
        _computeAvatarUrl(){
            if(!this.partner){
                return'/mail/static/src/img/smiley/avatar.jpg';
            }
            returnthis.partner.avatarUrl;
        }

        /**
         *@private
         *@returns{mail.country}
         */
        _computeCountry(){
            if(this.partner&&this.partner.country){
                return[['link',this.partner.country]];
            }
            if(this.country){
                return[['link',this.country]];
            }
            return[['unlink']];
        }

        /**
         *@private
         *@returns{string}
         */
        _computeNameOrDisplayName(){
            if(this.partner){
                returnthis.partner.nameOrDisplayName;
            }
            returnthis.name;
        }
    }

    Visitor.fields={
        /**
         *Urltotheavatarofthevisitor.
         */
        avatarUrl:attr({
            compute:'_computeAvatarUrl',
            dependencies:[
                'partner',
                'partnerAvatarUrl',
            ],
        }),
        /**
         *Countryofthevisitor.
         */
        country:many2one('mail.country',{
            compute:'_computeCountry',
            dependencies:[
                'country',
                'partnerCountry',
            ],
        }),
        /**
         *Browsinghistoryofthevisitorasastring.
         */
        history:attr(),
        /**
         *Determinewhetherthevisitorisconnectedornot.
         */
        is_connected:attr(),
        /**
         *Nameofthelanguageofthevisitor.(Ex:"English")
         */
        lang:attr(),
        /**
         *Nameofthevisitor.
         */
        name:attr(),
        nameOrDisplayName:attr({
            compute:'_computeNameOrDisplayName',
            dependencies:[
                'name',
                'partnerNameOrDisplayName',
            ],
        }),
        /**
         *Partnerlinkedtothisvisitor,ifany.
         */
        partner:many2one('mail.partner'),
        partnerAvatarUrl:attr({
            related:'partner.avatarUrl',
        }),
        partnerCountry:many2one('mail.country',{
            related:'partner.country',
        }),
        partnerNameOrDisplayName:attr({related:'partner.nameOrDisplayName'}),
        /**
         *Threadswiththisvisitorasmember
         */
        threads:one2many('mail.thread',{
            inverse:'visitor',
        }),
        /**
         *Nameofthewebsiteonwhichthevisitorisconnected.(Ex:"Website1")
         */
        website:attr(),
    };

    Visitor.modelName='website_livechat.visitor';

    returnVisitor;
}

registerNewModel('website_livechat.visitor',factory);

});
