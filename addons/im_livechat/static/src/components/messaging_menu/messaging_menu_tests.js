flectra.define('im_livechat/static/src/components/messaging_menu/messaging_menu_tests.js',function(require){
'usestrict';

const{
    afterEach,
    afterNextRender,
    beforeEach,
    start,
}=require('mail/static/src/utils/test_utils.js');

QUnit.module('im_livechat',{},function(){
QUnit.module('components',{},function(){
QUnit.module('messaging_menu',{},function(){
QUnit.module('messaging_menu_tests.js',{
    beforeEach(){
        beforeEach(this);

        this.start=asyncparams=>{
            let{env,widget}=awaitstart(Object.assign({},params,{
                data:this.data,
                hasMessagingMenu:true,
            }));
            this.env=env;
            this.widget=widget;
        };
    },
    afterEach(){
        afterEach(this);
    },
});

QUnit.test('livechatsshouldbein"chat"filter',asyncfunction(assert){
    assert.expect(7);

    this.data['mail.channel'].records.push({
        anonymous_name:"Visitor11",
        channel_type:'livechat',
        id:11,
        livechat_operator_id:this.data.currentPartnerId,
        members:[this.data.currentPartnerId,this.data.publicPartnerId],
    });
    awaitthis.start();
    assert.containsOnce(
        document.body,
        '.o_MessagingMenu',
        "shouldhavemessagingmenu"
    );

    awaitafterNextRender(()=>document.querySelector('.o_MessagingMenu_toggler').click());
    assert.containsOnce(
        document.body,
        '.o_MessagingMenu_tabButton[data-tab-id="all"]',
        "shouldhaveatab/filter'all'inmessagingmenu"
    );
    assert.containsOnce(
        document.body,
        '.o_MessagingMenu_tabButton[data-tab-id="chat"]',
        "shouldhaveatab/filter'chat'inmessagingmenu"
    );
    assert.hasClass(
        document.querySelector('.o_MessagingMenu_tabButton[data-tab-id="all"]'),
        'o-active',
        "tab/filter'all'ofmessagingmenushouldbeactiveinitially"
    );
    assert.containsOnce(
        document.body,
        `.o_ThreadPreview[data-thread-local-id="${
            this.env.models['mail.thread'].findFromIdentifyingData({
                id:11,
                model:'mail.channel',
            }).localId
        }"]`,
        "livechatshouldbelistedin'all'tab/filterofmessagingmenu"
    );

    awaitafterNextRender(()=>
        document.querySelector('.o_MessagingMenu_tabButton[data-tab-id="chat"]').click()
    );
    assert.hasClass(
        document.querySelector('.o_MessagingMenu_tabButton[data-tab-id="chat"]'),
        'o-active',
        "tab/filter'chat'ofmessagingmenushouldbecomeactiveafterclick"
    );
    assert.containsOnce(
        document.body,
        `.o_ThreadPreview[data-thread-local-id="${
            this.env.models['mail.thread'].findFromIdentifyingData({
                id:11,
                model:'mail.channel',
            }).localId
        }"]`,
        "livechatshouldbelistedin'chat'tab/filterofmessagingmenu"
    );
});

});
});
});

});
