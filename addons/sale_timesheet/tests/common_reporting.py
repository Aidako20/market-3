#-*-coding:utf-8-*-
#PartofFlectra.SeeLICENSEfileforfullcopyrightandlicensingdetails.
fromflectra.toolsimportfloat_is_zero,float_compare
fromflectra.addons.sale_timesheet.tests.commonimportTestCommonSaleTimesheet


classTestCommonReporting(TestCommonSaleTimesheet):

    @classmethod
    defsetUpClass(cls,chart_template_ref=None):
        super().setUpClass(chart_template_ref=chart_template_ref)

        #expenseproduct
        cls.product_expense=cls.env['product.product'].with_context(mail_notrack=True,mail_create_nolog=True).create({
            'name':"Expenseservice",
            'standard_price':10,
            'list_price':20,
            'type':'service',
            'invoice_policy':'delivery',
            'expense_policy':'sales_price',
            'default_code':'EXP',
            'service_type':'manual',
            'taxes_id':False,
            'property_account_income_id':cls.company_data['default_account_revenue'].id,
        })

        #createAnalyticAccounts
        cls.analytic_account_1=cls.env['account.analytic.account'].create({
            'name':'TestAA1',
            'code':'AA1',
            'company_id':cls.company_data['company'].id,
            'partner_id':cls.partner_a.id
        })
        cls.analytic_account_2=cls.env['account.analytic.account'].create({
            'name':'TestAA2',
            'code':'AA2',
            'company_id':cls.company_data['company'].id,
            'partner_id':cls.partner_a.id
        })
        cls.analytic_account_3=cls.env['account.analytic.account'].create({
            'name':'TestAA3',
            'code':'AA3',
            'company_id':cls.company_data['company'].id,
            'partner_id':cls.partner_a.id
        })

        #Saleorderseachwillcreateprojectandataskinaglobalproject(oneSOis'delivered',theotheris'ordered')
        #andathirdoneusingfixed_price(whichis'delivered')
        cls.sale_order_1=cls.env['sale.order'].with_context(mail_notrack=True,mail_create_nolog=True).create({
            'partner_id':cls.partner_a.id,
            'partner_invoice_id':cls.partner_a.id,
            'partner_shipping_id':cls.partner_a.id,
            'analytic_account_id':cls.analytic_account_1.id,
        })
        cls.so_line_deliver_project=cls.env['sale.order.line'].create({
            'name':cls.product_delivery_timesheet3.name,
            'product_id':cls.product_delivery_timesheet3.id,
            'product_uom_qty':5,
            'product_uom':cls.product_delivery_timesheet3.uom_id.id,
            'price_unit':cls.product_delivery_timesheet3.list_price,
            'order_id':cls.sale_order_1.id,
        })
        cls.so_line_deliver_task=cls.env['sale.order.line'].create({
            'name':cls.product_delivery_timesheet2.name,
            'product_id':cls.product_delivery_timesheet2.id,
            'product_uom_qty':7,
            'product_uom':cls.product_delivery_timesheet2.uom_id.id,
            'price_unit':cls.product_delivery_timesheet2.list_price,
            'order_id':cls.sale_order_1.id,
        })

        cls.sale_order_2=cls.env['sale.order'].with_context(mail_notrack=True,mail_create_nolog=True).create({
            'partner_id':cls.partner_a.id,
            'partner_invoice_id':cls.partner_a.id,
            'partner_shipping_id':cls.partner_a.id,
            'analytic_account_id':cls.analytic_account_2.id,
        })
        cls.so_line_order_project=cls.env['sale.order.line'].create({
            'name':cls.product_order_timesheet3.name,
            'product_id':cls.product_order_timesheet3.id,
            'product_uom_qty':5,
            'product_uom':cls.product_order_timesheet3.uom_id.id,
            'price_unit':cls.product_order_timesheet3.list_price,
            'order_id':cls.sale_order_2.id,
        })
        cls.so_line_order_task=cls.env['sale.order.line'].create({
            'name':cls.product_order_timesheet2.name,
            'product_id':cls.product_order_timesheet2.id,
            'product_uom_qty':7,
            'product_uom':cls.product_order_timesheet2.uom_id.id,
            'price_unit':cls.product_order_timesheet2.list_price,
            'order_id':cls.sale_order_2.id,
        })

        cls.sale_order_3=cls.env['sale.order'].with_context(mail_notrack=True,mail_create_nolog=True).create({
            'partner_id':cls.partner_a.id,
            'partner_invoice_id':cls.partner_a.id,
            'partner_shipping_id':cls.partner_a.id,
            'analytic_account_id':cls.analytic_account_3.id,
        })
        cls.so_line_deliver_manual_project=cls.env['sale.order.line'].create({
            'name':cls.product_delivery_manual3.name,
            'product_id':cls.product_delivery_manual3.id,
            'product_uom_qty':11,
            'product_uom':cls.product_delivery_manual3.uom_id.id,
            'price_unit':cls.product_delivery_manual3.list_price,
            'order_id':cls.sale_order_3.id,
        })

    def_log_timesheet_user(self,project,unit_amount,task=False):
        """Utilitymethodtologtimesheet"""
        Timesheet=self.env['account.analytic.line']
        returnTimesheet.create({
            'name':'timesheetemployeeonproject_so_1only',
            'account_id':project.analytic_account_id.id,
            'project_id':project.id,
            'employee_id':self.employee_user.id,
            'unit_amount':unit_amount,
            'task_id':task.idiftaskelseFalse,
        })

    def_log_timesheet_manager(self,project,unit_amount,task=False):
        """Utilitymethodtologtimesheet"""
        Timesheet=self.env['account.analytic.line']
        returnTimesheet.create({
            'name':'timesheetemployeeonproject_so_1only',
            'account_id':project.analytic_account_id.id,
            'project_id':project.id,
            'employee_id':self.employee_manager.id,
            'unit_amount':unit_amount,
            'task_id':task.idiftaskelseFalse,
        })
