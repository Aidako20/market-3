flectra.define("web.DomainSelector",function(require){
"usestrict";

varcore=require("web.core");
vardatepicker=require("web.datepicker");
varDomain=require("web.Domain");
varfield_utils=require("web.field_utils");
varModelFieldSelector=require("web.ModelFieldSelector");
varWidget=require("web.Widget");

var_t=core._t;
var_lt=core._lt;

//"child_of","parent_of","like","notlike","=like","=ilike"
//areonlyusedifuserenteredthemmanuallyorifgotfromdemodata
varoperator_mapping={
    "=":"=",
    "!=":_lt("isnot="),
    ">":">",
    "<":"<",
    ">=":">=",
    "<=":"<=",
    "ilike":_lt("contains"),
    "notilike":_lt("doesnotcontain"),
    "in":_lt("in"),
    "notin":_lt("notin"),

    "child_of":_lt("childof"),
    "parent_of":_lt("parentof"),
    "like":"like",
    "notlike":"notlike",
    "=like":"=like",
    "=ilike":"=ilike",

    //custom
    "set":_lt("isset"),
    "notset":_lt("isnotset"),
};

/**
 *Abstractionforwidgetswhichcanrepresentandalloweditionofadomain.
 */
varDomainNode=Widget.extend({
    events:{
        //Ifclickonthenodeaddordeletebutton,notifytheparentandlet
        //ithandletheaddition/removal
        "click.o_domain_add_node_button":"_onAddButtonClick",
        "click.o_domain_delete_node_button":"_onDeleteButtonClick",
        //Handlevisualfeedbackandanimation
        "mouseenterbutton":"_onButtonEntered",
        "mouseleavebutton":"_onButtonLeft",
    },
    /**
     *ADomainNodeneedsamodelanddomaintowork.Itcanalsoreceiveaset
     *ofoptions.
     *
     *@param{Object}parent
     *@param{string}model-themodelname
     *@param{Array|string}domain-theprefixrepresentationofthedomain
     *@param{Object}[options]-anobjectwithpossiblevalues:
     *@param{boolean}[options.readonly=true]-trueifisreadonly
     *@param{Array}[options.default]-defaultdomainusedwhencreatinga
     *  newnode
     *@param{string[]}[options.operators=null]
     *       alistofavailableoperators(null=allofsupportedones)
     *@param{boolean}[options.debugMode=false]-trueifshouldbeindebug
     *
     *@seeModelFieldSelectorforotheroptions
     */
    init:function(parent,model,domain,options){
        this._super.apply(this,arguments);

        this.model=model;
        this.options=_.extend({
            readonly:true,
            operators:null,
            debugMode:false,
        },options||{});

        this.readonly=this.options.readonly;
        this.debug=this.options.debugMode;
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *Shouldreturnifthenodeisrepresentingawell-formeddomain,whose
     *fieldchainsproperlybelongtotheassociatedmodel.
     *
     *@abstract
     *@returns{boolean}
     */
    isValid:function(){},
    /**
     *Shouldreturntheprefixdomainthewidgetiscurrentlyrepresenting
     *(anarray).
     *
     *@abstract
     *@returns{Array}
     */
    getDomain:function(){},

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *Calledwhentheaddbuttonisclicked->trigger_upaneventtoask
     *creationofanewchildinitsparent.
     *
     *@param{Event}e
     */
    _onAddButtonClick:function(e){
        e.preventDefault();
        e.stopPropagation();
        this.trigger_up("add_node_clicked",{newBranch:!!$(e.currentTarget).data("branch"),child:this});
    },
    /**
     *Calledwhenthedeletebuttonisclicked->trigger_upaneventtoask
     *deletionofthisnodefromitsparent.
     *
     *@param{Event}e
     */
    _onDeleteButtonClick:function(e){
        e.preventDefault();
        e.stopPropagation();
        this.trigger_up("delete_node_clicked",{child:this});
    },
    /**
     *Calledwhena"controlpanel"buttonishovered->addclassestothe
     *domainnodetoaddanimationeffects.
     *
     *@param{Event}e
     */
    _onButtonEntered:function(e){
        e.preventDefault();
        e.stopPropagation();
        var$target=$(e.currentTarget);
        this.$el.toggleClass("o_hover_btns",$target.hasClass("o_domain_delete_node_button"));
        this.$el.toggleClass("o_hover_add_node",$target.hasClass("o_domain_add_node_button"));
        this.$el.toggleClass("o_hover_add_inset_node",!!$target.data("branch"));
    },
    /**
     *Calledwhena"controlpanel"buttonisnothoveredanymore->remove
     *classesfromthedomainnodetostopanimationeffects.
     *
     *@param{Event}e
     */
    _onButtonLeft:function(e){
        e.preventDefault();
        e.stopPropagation();
        this.$el.removeClass("o_hover_btnso_hover_add_nodeo_hover_add_inset_node");
    },
});

/**
 *DomainNodewhichcanhandlesubdomains(adomainwhichiscomposedof
 *multipleparts).ItthuswillbecomposedofotherDomainTreeinstances
 *and/orleafpartsofadomain(@seeDomainLeaf).
 */
varDomainTree=DomainNode.extend({
    template:"DomainTree",
    events:_.extend({},DomainNode.prototype.events,{
        "click.o_domain_tree_operator_selector.dropdown-item":"_onOperatorChange",
    }),
    custom_events:{
        //Ifadomainchildsendsarequesttoaddachildorremoveone,call
        //theappropriatemethods.Propagatestheeventuntilsuccess.
        "add_node_clicked":"_onNodeAdditionAsk",
        "delete_node_clicked":"_onNodeDeletionAsk",
    },
    /**
     *@constructor
     *@seeDomainNode.init
     *TheinitializationofaDomainTreecreatesa"children"arrayattribute
     *whichwillcontainthetheDomainNodechildren.Italsodeducesthe
     *operatorfromthedomain.
     *@seeDomainTree._addFlattenedChildren
     */
    init:function(parent,model,domain){
        this._super.apply(this,arguments);
        varparsedDomain=this._parseDomain(domain);
        if(parsedDomain){
            this._initialize(parsedDomain);
        }
    },
    /**
     *@seeDomainNode.start
     *@returns{Promise}
     */
    start:function(){
        this._postRender();
        returnPromise.all([
            this._super.apply(this,arguments),
            this._renderChildrenTo(this.$childrenContainer)
        ]);
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *@seeDomainNode.isValid
     *@returns{boolean}
     */
    isValid:function(){
        for(vari=0;i<this.children.length;i++){
            varcValid=this.children[i].isValid();
            if(!cValid){
                returncValid;
            }
        }
        returnthis._isValid;
    },
    /**
     *@seeDomainNode.getDomain
     *@returns{Array}
     */
    getDomain:function(){
        varchildDomains=[];
        varnbChildren=0;
        _.each(this.children,function(child){
            varchildDomain=child.getDomain();
            if(childDomain.length){
                nbChildren++;
                childDomains=childDomains.concat(child.getDomain());
            }
        });
        varnbChildRequired=this.operator==="!"?1:2;
        varoperators=_.times(nbChildren-nbChildRequired+1,_.constant(this.operator));
        returnoperators.concat(childDomains);
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *Addsadomainparttothewidget.
     *->trigger_up"domain_changed"ifthechildisadded
     *
     *@private
     *@param{Array}domain-theprefix-likedomaintobuildandaddtothe
     *                      widget
     *@param{DomainNode}afterNode-thenodeafterwhichthenewdomainpart
     *                              mustbeadded(attheendifnotgiven)
     *@returns{boolean}trueifthepartwasadded
     *                  falseotherwise(theafterNodewasnotfound)
     */
    _addChild:function(domain,afterNode){
        vari=afterNode?_.indexOf(this.children,afterNode):this.children.length;
        if(i<0)returnfalse;

        this.children.splice(i+1,0,instantiateNode(this,this.model,domain,this.options));
        this.trigger_up("domain_changed",{child:this});
        returntrue;
    },
    /**
     *Addsachildwhichrepresentsthegivendomain.Ifthechildhaschildren
     *andthatthechildmaindomainoperatoristhesameasthecurrentwidget
     *one,the2-childrenprefixhierarchyisthensimplifiedbymakingthe
     *child'schildrenthewidget'sownchildren.
     *
     *@private
     *@param{Array|string}domain-thedomainofthechildtoadd
     */
    _addFlattenedChildren:function(domain){
        varnode=instantiateNode(this,this.model,domain,this.options);
        if(node===null){
            return;
        }
        if(!node.children||node.operator!==this.operator){
            this.children.push(node);
            return;
        }
        _.each(node.children,(function(child){
            child.setParent(this);
            this.children.push(child);
        }).bind(this));
        node.destroy();
    },
    /**
     *Changestheoperatorofthedomaintreeandnotifiestheparentif
     *necessary(notsilent).
     *
     *@private
     *@param{string}operator-thenewoperator
     *@param{boolean}silent-trueiftheparentsshouldnotbenotifiedof
     *                        thechange
     */
    _changeOperator:function(operator,silent){
        this.operator=operator;
        if(!silent)this.trigger_up("domain_changed",{child:this});
    },
    /**
     *@seeDomainTree.init
     *@private
     */
    _initialize:function(domain){
        this._isValid=true;
        this.operator=domain[0];
        this.children=[];
        if(domain.length<=1){
            return;
        }

        //Addflattenedchildrenbysearchtheappropriatenumberofchildren
        //intherestofthedomain(aftertheoperator)
        varnbLeafsToFind=1;
        for(vari=1;i<domain.length;i++){
            if(domain[i]==="&"||domain[i]==="|"){
                nbLeafsToFind++;
            }elseif(domain[i]!=="!"){
                nbLeafsToFind--;
            }

            if(!nbLeafsToFind){
                varpartLeft=domain.slice(1,i+1);
                varpartRight=domain.slice(i+1);
                if(partLeft.length){
                    this._addFlattenedChildren(partLeft);
                }
                if(partRight.length){
                    this._addFlattenedChildren(partRight);
                }
                break;
            }
        }
        this._isValid=(nbLeafsToFind===0);

        //Mark"!"treechildrensothattheydonotallowtoaddother
        //childrenaroundthem
        if(this.operator==="!"){
            this.children[0].noControlPanel=true;
        }
    },
    /**
     *@seeDomainTree.start
     *Initializesvariableswhichdependontherenderedwidget.
     *@private
     */
    _postRender:function(){
        this.$childrenContainer=this.$(">.o_domain_node_children_container");
    },
    /**
     *Removesagivenchildfromthewidget.
     *->trigger_updomain_changedifthechildisremoved
     *
     *@private
     *@param{DomainNode}oldChild-thechildinstancetoremove
     *@returns{boolean}trueifthechildwasremoved,falseotherwise(the
     *                  widgetdoesnotownthechild)
     */
    _removeChild:function(oldChild){
        vari=_.indexOf(this.children,oldChild);
        if(i<0)returnfalse;

        this.children[i].destroy();
        this.children.splice(i,1);
        this.trigger_up("domain_changed",{child:this});
        returntrue;
    },
    /**
     *@seeDomainTree.start
     *Appendsthechildrendomainnodetothegivennode.Thisisusedto
     *renderthechildrenwidgetinadummyelementbeforeaddingtheminthe
     *DOM,otherwhisetheycouldbemisorderedastheyrenderingisnot
     *synchronous.
     *
     *@private
     *@param{jQuery}$to-thejQuerynodetowhichthechildrenmustbeadded
     *@returns{Promise}
     */
    _renderChildrenTo:function($to){
        var$div=$("<div/>");
        returnPromise.all(_.map(this.children,(function(child){
            returnchild.appendTo($div);
        }).bind(this))).then((function(){
            _.each(this.children,function(child){
                child.$el.appendTo($to);//Forcedtodoitthiswaysothatthe
                                         //childrenarenotmisordered
            });
        }).bind(this));
    },
    /**
     *@param{string}domain
     *@returns{Array[]}
     */
    _parseDomain:function(domain){
        varparsedDomain=false;
        try{
            parsedDomain=Domain.prototype.stringToArray(domain);
            this.invalidDomain=false;
        }catch(err){
            //TODO:domaincouldcontain`parent`forexample,whichis
            //currentlynothandledbytheDomainSelector
            this.invalidDomain=true;
            this.children=[];
        }
        returnparsedDomain;
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *Calledwhentheoperatorselectvalueischanged->changetheinternal
     *operatorstate
     *
     *@param{Event}e
     */
    _onOperatorChange:function(e){
        e.preventDefault();
        e.stopPropagation();
        this._changeOperator($(e.target).data("operator"));
    },
    /**
     *Calledwhenanodeadditionwasasked->addthenewdomainpartifon
     *therightnodeorletthepropagationcontinue.
     *
     *@param{FlectraEvent}e
     */
    _onNodeAdditionAsk:function(e){
        vardomain=this.options.default||[["id","=",1]];
        if(e.data.newBranch){
            domain=[this.operator==="&"?"|":"&"].concat(domain).concat(domain);
        }
        if(this._addChild(domain,e.data.child)){
            e.stopPropagation();
        }
    },
    /**
     *Calledwhenanodedeletionwasasked->removethedomainpartifon
     *therightnodeorletthepropagationcontinue.
     *
     *@param{FlectraEvent}e
     */
    _onNodeDeletionAsk:function(e){
        if(this._removeChild(e.data.child)){
            e.stopPropagation();
        }
    },
});

/**
 *TheDomainSelectorwidgetcanbeusedtobuildprefixchardomain.Itisthe
 *DomainTreespecializationtousetohaveafullyworkingwidget.
 *
 *Knownlimitations:
 *
 *-Someoperatorslike"child_of","parent_of","like","notlike",
 *  "=like","=ilike"willcomeonlyifyouusethemfromdemodataor
 *  debuginput.
 *-Somekindofdomaincannotbebuildrightnow
 *  e.g("country_id","in",[1,2,3])butyoucaninsertfromdebuginput.
 */
varDomainSelector=DomainTree.extend({
    template:"DomainSelector",
    events:_.extend({},DomainTree.prototype.events,{
        "click.o_domain_add_first_node_button":"_onAddFirstButtonClick",
        "change.o_domain_debug_input":"_onDebugInputChange",
    }),
    custom_events:_.extend({},DomainTree.prototype.custom_events,{
        domain_changed:"_onDomainChange",
    }),

    start:function(){
        varself=this;
        returnthis._super.apply(this,arguments).then(function(){
            if(self.invalidDomain){
                varmsg=_t("Thisdomainisnotsupported.");
                self.$el.html(msg);
            }
        });
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *Changestheinternaldomainvalueandforcesareparsingandrerendering.
     *Iftheinternaldomainvaluewasalreadyequaltothegivenone,this
     *doesnothing.
     *
     *@param{string}domain
     *@returns{Promise}resolvedwhenthererenderingisfinished
     */
    setDomain:function(domain){
        if(domain===Domain.prototype.arrayToString(this.getDomain())){
            returnPromise.resolve();
        }
        varparsedDomain=this._parseDomain(domain);
        if(parsedDomain){
            returnthis._redraw(parsedDomain);
        }
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@seeDomainTree._initialize
     */
    _initialize:function(domain){
        //Checkifthedomainstartswithimplicit"&"operatorsandmakethem
        //explicit.AstheDomainSelectorisaspecializationofaDomainTree,
        //itiswaitingforatreeandnotaleaf.So[]and[A]willbemade
        //explicitwith["&"],["&",A]sothattreeparsingismadecorrectly.
        //Note:thedomainisconsideredtobeavalidone
        if(domain.length>1){
            Domain.prototype.normalizeArray(domain);
        }else{
            domain=["&"].concat(domain);
        }
        returnthis._super(domain);
    },
    /**
     *@seeDomainTree._postRender
     *Warnstheuserifthedomainisnotvalidafterrendering.
     */
    _postRender:function(){
        this._super.apply(this,arguments);

        //Displaytechnicaldomainifindebugmode
        this.$debugInput=this.$(".o_domain_debug_input");
        if(this.$debugInput.length){
            this.$debugInput.val(Domain.prototype.arrayToString(this.getDomain()));
        }

        //Warntheuserifthedomainisnotvalidafterrendering
        if(!this._isValid){
            this.do_warn(false,_t("Domainnotsupported"));
        }
    },
    /**
     *Thismethodisuglybutachievestherightbehaviorwithoutflickering.
     *
     *@param{Array|string}domain
     *@returns{Promise}
     */
    _redraw:function(domain){
        varoldChildren=this.children.slice();
        this._initialize(domain||this.getDomain());
        returnthis._renderChildrenTo($("<div/>")).then((function(){
            _.each(oldChildren,function(child){child.destroy();});
            this.renderElement();
            this._postRender();
            _.each(this.children,(function(child){child.$el.appendTo(this.$childrenContainer);}).bind(this));
        }).bind(this));
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *Calledwhenthe"addafilter"buttonisclicked->addsafirstdomain
     *node
     */
    _onAddFirstButtonClick:function(){
        this._addChild(this.options.default||[["id","=",1]]);
    },
    /**
     *Calledwhenthedebuginputvalueischanged->constructsthetree
     *representationifvalidorwarntheuserifinvalid.
     *
     *@param{Event}e
     */
    _onDebugInputChange:function(e){
        //Whenthedebuginputchanges,thestringprefixdomainisread.Ifit
        //issyntax-validthewidgetisre-renderedandnotifiestheparents.
        //Ifnot,awarningisshowntotheuserandtheinputisignored.
        vardomain;
        try{
            domain=Domain.prototype.stringToArray($(e.currentTarget).val());
        }catch(err){//Ifthereisasyntaxerror,justignorethechange
            this.do_warn(_t("Syntaxerror"),_t("Domainnotproperlyformed"));
            return;
        }
        this._redraw(domain).then((function(){
            this.trigger_up("domain_changed",{child:this,alreadyRedrawn:true});
        }).bind(this));
    },
    /**
     *Calledwhena(child's)domainhaschanged->redrawtheentiretree
     *representationifnecessary
     *
     *@param{FlectraEvent}e
     */
    _onDomainChange:function(e){
        //Ifasubdomainnotifiesthatitunderwentsomemodifications,the
        //DomainSelectorcatchesthemessageandperformsafullre-rendering.
        if(!e.data.alreadyRedrawn){
            this._redraw();
        }
    },
});

/**
 *DomainNodewhichhandlesadomainwhichcannotbesplitinanother
 *subdomains,i.e.composedofafieldchain,anoperatorandavalue.
 */
varDomainLeaf=DomainNode.extend({
    template:"DomainLeaf",
    events:_.extend({},DomainNode.prototype.events,{
        "change.o_domain_leaf_operator_select":"_onOperatorSelectChange",
        "change.o_domain_leaf_value_input":"_onValueInputChange",

        //Handlethetagswidgetpart(TODOshouldbeanindependantwidget)
        "click.o_domain_leaf_value_add_tag_button":"on_add_tag",
        "keyup.o_domain_leaf_value_tagsinput":"on_add_tag",
        "click.o_domain_leaf_value_remove_tag_button":"on_remove_tag",
    }),
    custom_events:{
        "field_chain_changed":"_onFieldChainChange",
    },
    /**
     *@seeDomainNode.init
     */
    init:function(parent,model,domain,options){
        this._super.apply(this,arguments);

        varcurrentDomain=Domain.prototype.stringToArray(domain);
        this.chain=currentDomain[0][0];
        this.operator=currentDomain[0][1];
        this.value=currentDomain[0][2];

        this.operator_mapping=operator_mapping;
    },
    /**
     *Preparestheinformationtherenderingofthewidgetwillneedby
     *pre-instantiatingitsinternalfieldselectorwidget.
     *
     *@returns{Promise}
     */
    willStart:function(){
        vardefs=[this._super.apply(this,arguments)];

        //Ineditmode,instantiateafieldselector.Thisisdoneherein
        //willStartandpreparedbyappendingittoadummyelementbecausethe
        //DomainLeafrenderingneedsomeinformationwhichcannotbecomputed
        //beforetheModelFieldSelectorisfullyrendered(TODO).
        this.fieldSelector=newModelFieldSelector(
            this,
            this.model,
            this.chain!==undefined?this.chain.toString().split("."):[],
            this.options
        );
        defs.push(this.fieldSelector.appendTo($("<div/>")).then((function(){
            varwDefs=[];

            if(!this.readonly){
                //Setlistofoperatorsaccordingtofieldtype
                varselectedField=this.fieldSelector.getSelectedField()||{};
                this.operators=this._getOperatorsFromType(selectedField.type);
                if(_.contains(["child_of","parent_of","like","notlike","=like","=ilike"],this.operator)){
                    //Incaseuserenteredmanuallyorfromdemodata
                    this.operators[this.operator]=operator_mapping[this.operator];
                }elseif(!this.operators[this.operator]){
                    //Incasethedomainusesanunsupportedoperatorforthe
                    //fieldtype
                    this.operators[this.operator]="?";
                }

                //Setlistofvaluesaccordingtofieldtype
                this.selectionChoices=null;
                if(selectedField.type==="boolean"){
                    this.selectionChoices=[["1",_t("set(true)")],["0",_t("notset(false)")]];
                }elseif(selectedField.type==="selection"){
                    this.selectionChoices=selectedField.selection;
                }

                //Adaptdisplayvalueandoperatorforrendering
                this.displayValue=this.value;
                try{
                    if(selectedField&&!selectedField.relation&&!_.isArray(this.value)){
                        this.displayValue=field_utils.format[selectedField.type](this.value,selectedField);
                    }
                }catch(err){/**/}
                this.displayOperator=this.operator;
                if(selectedField.type==="boolean"){
                    this.displayValue=this.value?"1":"0";
                }elseif((this.operator==="!="||this.operator==="=")&&this.value===false){
                    this.displayOperator=this.operator==="!="?"set":"notset";
                }

                //TODOthevaluecouldbeam2oinput,etc...
                if(_.contains(["date","datetime"],selectedField.type)){
                    this.valueWidget=new(selectedField.type==="datetime"?datepicker.DateTimeWidget:datepicker.DateWidget)(this);
                    wDefs.push(this.valueWidget.appendTo("<div/>").then((function(){
                        this.valueWidget.$el.addClass("o_domain_leaf_value_input");
                        this.valueWidget.setValue(moment(this.value));
                        this.valueWidget.on("datetime_changed",this,function(){
                            this._changeValue(this.valueWidget.getValue());
                        });
                    }).bind(this)));
                }

                returnPromise.all(wDefs);
            }
        }).bind(this)));

        returnPromise.all(defs);
    },
    /**
     *@seeDomainNode.start
     *Appendsthepreparedfieldselectorandvaluewidget.
     *
     *@returns{Promise}
     */
    start:function(){
        this.fieldSelector.$el.prependTo(this.$(">.o_domain_leaf_info,>.o_domain_leaf_edition"));//placethefieldselector
        if(!this.readonly&&this.valueWidget){//Ineditmode,placethevaluewidgetifany
            this.$(".o_domain_leaf_value_input").replaceWith(this.valueWidget.$el);
        }
        returnthis._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *@seeDomainNode.isValid
     *@returns{boolean}
     */
    isValid:function(){
        returnthis.fieldSelector&&this.fieldSelector.isValid();
    },
    /**
     *@seeDomainNode.getDomain
     *@returns{Array}
     */
    getDomain:function(){
        return[[this.chain,this.operator,this.value]];
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *Handlesafieldchainchangeinthedomain.Inthatcase,theoperator
     *shouldbeadaptedtoavalidoneforthenewfieldandthevalueshould
     *alsobeadaptedtothenewfieldand/oroperator.
     *
     *->trigger_updomain_changedeventtoaskforare-rendering(ifnot
     *silent)
     *
     *@param{string[]}chain-thenewfieldchain
     *@param{boolean}silent-trueifthemethodcallshouldnottrigger_upa
     *                        domain_changedevent
     */
    _changeFieldChain:function(chain,silent){
        this.chain=chain.join(".");
        this.fieldSelector.setChain(chain).then((function(){
            if(!this.fieldSelector.isValid())return;

            varselectedField=this.fieldSelector.getSelectedField()||{};
            varoperators=this._getOperatorsFromType(selectedField.type);
            if(operators[this.operator]===undefined){
                this._changeOperator("=",true);
            }
            this._changeValue(this.value,true);

            if(!silent)this.trigger_up("domain_changed",{child:this});
        }).bind(this));
    },
    /**
     *Handlesanoperatorchangeinthedomain.Inthatcase,thevalueshould
     *beadaptedtoavalidoneforthenewoperator.
     *
     *->trigger_updomain_changedeventtoaskforare-rendering
     *(ifnotsilent)
     *
     *@param{string}operator-thenewoperator
     *@param{boolean}silent-trueifthemethodcallshouldnottrigger_upa
     *                        domain_changedevent
     */
    _changeOperator:function(operator,silent){
        this.operator=operator;

        if(_.contains(["set","notset"],this.operator)){
            this.operator=this.operator==="notset"?"=":"!=";
            this.value=false;
        }elseif(_.contains(["in","notin"],this.operator)){
            this.value=_.isArray(this.value)?this.value:this.value?(""+this.value).split(","):[];
        }else{
            if(_.isArray(this.value)){
                this.value=this.value.join(",");
            }
            this._changeValue(this.value,true);
        }

        if(!silent)this.trigger_up("domain_changed",{child:this});
    },
    /**
     *Handlesaformattedvaluechangeinthedomain.Inthatcase,thevalue
     *shouldbeadaptedtoavalidtechnicalone.
     *
     *->trigger_up"domain_changed"eventtoaskforare-rendering(ifnot
     *silent)
     *
     *@param{*}value-thenewformattedvalue
     *@param{boolean}silent-trueifthemethodcallshouldnottrigger_upa
     *                        domain_changedevent
     */
    _changeValue:function(value,silent){
        varcouldNotParse=false;
        varselectedField=this.fieldSelector.getSelectedField()||{};
        try{
            this.value=field_utils.parse[selectedField.type](value,selectedField);
        }catch(err){
            this.value=value;
            couldNotParse=true;
        }

        if(selectedField.type==="boolean"){
            if(!_.isBoolean(this.value)){//Convertboolean-likevaluetoboolean
                this.value=!!parseFloat(this.value);
            }
        }elseif(selectedField.type==="selection"){
            if(!_.some(selectedField.selection,(function(option){returnoption[0]===this.value;}).bind(this))){
                this.value=selectedField.selection[0][0];
            }
        }elseif(_.contains(["date","datetime"],selectedField.type)){
            if(couldNotParse||_.isBoolean(this.value)){
                this.value=field_utils.parse[selectedField.type](field_utils.format[selectedField.type](moment())).toJSON();//toJSONtogetdatewithserverformat
            }else{
                this.value=this.value.toJSON();//toJSONtogetdatewithserverformat
            }
        }else{
            //Neverdisplay"true"or"false"stringsfrombooleanvalue
            if(_.isBoolean(this.value)){
                this.value="";
            }elseif(_.isObject(this.value)&&!_.isArray(this.value)){//Canbeobjectifparsedtox2xrepresentation
                this.value=this.value.id||value||"";
            }
        }

        if(!silent)this.trigger_up("domain_changed",{child:this});
    },
    /**
     *Returnsthemappingof"technicaloperator"to"displayoperatorvalue"
     *oftheoperatorswhichareavailableforthegivenfieldtype.
     *
     *@private
     *@param{string}type-thefieldtype
     *@returns{Object}amapofallassociatedoperatorsandtheirlabel
     */
    _getOperatorsFromType:function(type){
        varoperators={};

        switch(type){
            case"boolean":
                operators={
                    "=":_t("is"),
                    "!=":_t("isnot"),
                };
                break;

            case"char":
            case"text":
            case"html":
                operators=_.pick(operator_mapping,"=","!=","ilike","notilike","set","notset","in","notin");
                break;

            case"many2many":
            case"one2many":
            case"many2one":
                operators=_.pick(operator_mapping,"=","!=","ilike","notilike","set","notset");
                break;

            case"integer":
            case"float":
            case"monetary":
                operators=_.pick(operator_mapping,"=","!=",">","<",">=","<=","ilike","notilike","set","notset");
                break;

            case"selection":
                operators=_.pick(operator_mapping,"=","!=","set","notset");
                break;

            case"date":
            case"datetime":
                operators=_.pick(operator_mapping,"=","!=",">","<",">=","<=","set","notset");
                break;

            default:
                operators=_.extend({},operator_mapping);
                break;
        }

        if(this.options.operators){
            operators=_.pick.apply(_,[operators].concat(this.options.operators));
        }

        returnoperators;
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *Calledwhentheoperatorselectvalueischange->changetheoperator
     *internalstateandadapt
     *
     *@param{Event}e
     */
    _onOperatorSelectChange:function(e){
        this._changeOperator($(e.currentTarget).val());
    },
    /**
     *Calledwhenthevalueinputvalueischanged->changetheinternalvalue
     *stateandadapt
     *
     *@param{Event}e
     */
    _onValueInputChange:function(e){
        if(e.currentTarget!==e.target)return;
        this._changeValue($(e.currentTarget).val());
    },
    /**
     *Calledwhenthefieldselectorvalueischanged->changetheinternal
     *chainstateandadapt
     *
     *@param{FlectraEvent}e
     */
    _onFieldChainChange:function(e){
        this._changeFieldChain(e.data.chain);
    },

    //TODOThetwofollowingfunctionsshouldbeinanindependantwidget
    on_add_tag:function(e){
        if(e.type==="keyup"&&e.which!==$.ui.keyCode.ENTER)return;
        if(!_.contains(["notin","in"],this.operator))return;

        varvalues=_.isArray(this.value)?this.value.slice():[];

        var$input=this.$(".o_domain_leaf_value_tagsinput");
        varval=$input.val().trim();
        if(val&&values.indexOf(val)<0){
            values.push(val);
            _.defer(this._changeValue.bind(this,values));
            $input.focus();
        }
    },
    on_remove_tag:function(e){
        varvalues=_.isArray(this.value)?this.value.slice():[];
        varval=this.$(e.currentTarget).data("value");

        varindex=values.indexOf(val);
        if(index>=0){
            values.splice(index,1);
            _.defer(this._changeValue.bind(this,values));
        }
    },
});

/**
 *InstantiatesaDomainTreeifthegivendomaincontainsseveralpartsanda
 *DomainLeafifitonlycontainsonepart.Returnsnullotherwise.
 *
 *@param{Object}parent
 *@param{string}model-themodelname
 *@param{Array|string}domain-theprefixrepresentationofthedomain
 *@param{Object}options-@seeDomainNode.init.options
 *@returns{DomainTree|DomainLeaf|null}
 */
functioninstantiateNode(parent,model,domain,options){
    if(domain.length>1){
        returnnewDomainTree(parent,model,domain,options);
    }elseif(domain.length===1){
        returnnewDomainLeaf(parent,model,domain,options);
    }
    returnnull;
}

returnDomainSelector;
});
