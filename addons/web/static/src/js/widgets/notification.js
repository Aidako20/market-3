flectra.define('web.Notification',function(require){
'usestrict';

varWidget=require('web.Widget');

/**
 *Widgetwhichisusedtodisplayawarning/informationmessageonthetop
 *rightofthescreen.
 *
 *Ifyouwanttodisplaysuchanotification,youprobablydonotwanttodoit
 *byimportingthisfile.Theproperwayistousethedo_warnordo_notify
 *methodsontheWidgetclass.
 */
varNotification=Widget.extend({
    template:'Notification',
    events:{
        'hidden.bs.toast':'_onClose',
        'click.o_notification_buttonsbutton':'_onClickButton',
        'mouseenter':'_onMouseEnter',
        'mouseleave':'_onMouseLeave',
    },
    _autoCloseDelay:4000,
    _animation:true,

    /**
     *@override
     *@param{Widget}parent
     *@param{Object}params
     *@param{string}params.title
     *@param{string}params.subtitle
     *@param{string}[params.message]
     *@param{string}[params.type='warning']'info','success','warning','danger'or''
     *@param{boolean}[params.sticky=false]iftrue,thenotificationwill
     *     stayvisibleuntiltheuserclicksonit.
     *@param{string}[params.className]
     *@param{function}[params.onClose]callbackwhentheuserclickonthex
     *     orwhenthenotificationisautoclose(nosticky)
     *@param{Object[]}params.buttons
     *@param{function}params.buttons[0].clickcallbackonclick
     *@param{boolean}[params.buttons[0].primary]displaythebuttonasprimary
     *@param{string}[params.buttons[0].text]buttonlabel
     *@param{string}[params.buttons[0].icon]font-awsomeclassNameorimagesrc
     */
    init:function(parent,params){
        this._super.apply(this,arguments);
        this.title=params.title;
        this.subtitle=params.subtitle;
        this.message=params.message;
        this.buttons=params.buttons||[];
        this.sticky=!!this.buttons.length||!!params.sticky;
        this.type=params.type===undefined?'warning':params.type;
        this.className=params.className||'';
        this._closeCallback=params.onClose;

        if(this.type==='danger'){
            this.icon='fa-exclamation';
            this.className+='bg-danger';
        }elseif(this.type==='warning'){
            this.icon='fa-lightbulb-o';
            this.className+='bg-warning';
        }elseif(this.type==='success'){
            this.icon='fa-check';
            this.className+='bg-success';
        }elseif(this.type==='info'){
            this.icon='fa-info';
            this.className+='bg-info';
        }

        if(this.buttons&&this.buttons.length){
            this.icon='fa-question-circle-o';
        }
    },
    /**
     *@override
     */
    start:function(){
        this.$el.toast({
            animation:this._animation,
            autohide:false,
        });
        voidthis.$el[0].offsetWidth;//Forceapaintrefreshbeforeshowingthetoast
        if(!this.sticky){
            this.autohide=_.cancellableThrottleRemoveMeSoon(this.close,this._autoCloseDelay,{leading:false});
            this.$el.on('shown.bs.toast',()=>{
                this.autohide();
            });
        }
        this.$el.toast('show');
        returnthis._super.apply(this,arguments);
    },
    /**
     *@override
     */
    destroy:function(){
        this.$el.toast('dispose');
        this._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *Destroysthewidgetwithaniceanimation.
     *
     *@private
     *@param{boolean}[silent=false]iftrue,thenotificationdoesnotcall
     *  _closeCallbackmethod
     */
    close:function(silent){
        this.silent=silent;
        this.$el.toast('hide');

        //Make'close'workifthenotificationisnotshownyetbutwillbe.
        //Shouldnotbeneededbutthecalendarnotificationsystemisan
        //exampleoffeaturethatdoesnotworkwithoutthisyet.
        varself=this;
        this.$el.one('shown.bs.toast',function(){
            self.$el.toast('hide');
        });
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *@private
     *@param{MouseEvent}ev
     */
    _onClickButton:function(ev){
        ev.preventDefault();
        if(this._buttonClicked){
            return;
        }
        this._buttonClicked=true;
        varindex=$(ev.currentTarget).index();
        varbutton=this.buttons[index];
        if(button.click){
            button.click();
        }
        this.close(true);
    },
    /**
     *@private
     *@param{Event}ev
     */
    _onClose:function(ev){
        this.trigger_up('close');
        if(!this.silent&&!this._buttonClicked){
            if(this._closeCallback){
                this._closeCallback();
            }
        }
        this.destroy();
    },
    /**
     *@private
     */
    _onMouseEnter:function(){
        if(!this.sticky){
            this.autohide.cancel();
        }
    },
    /**
     *@private
     */
    _onMouseLeave:function(){
        if(!this.sticky){
            this.autohide();
        }
    },
});

returnNotification;
});
