flectra.define("web.ModelFieldSelector",function(require){
"usestrict";

varcore=require("web.core");
varWidget=require("web.Widget");

var_t=core._t;

/**
 *FieldSelectorCache-TODOShouldbeimprovedtouseexternalcache?
 *-Storesfieldspermodelusedinfieldselector
 *@seeModelFieldSelector._getModelFieldsFromCache
 */
varmodelFieldsCache={
    cache:{},
    cacheDefs:{},
};

core.bus.on('clear_cache',null,function(){
    modelFieldsCache.cache={};
    modelFieldsCache.cacheDefs={};
});

/**
 *TheModelFieldSelectorwidgetcanbeusedtodisplay/selectaparticular
 *fieldchainfromagivenmodel.
 */
varModelFieldSelector=Widget.extend({
    template:"ModelFieldSelector",
    events:{},
    editionEvents:{
        //Handlepopoveropeningandclosing
        "focusin":"_onFocusIn",
        "focusout":"_onFocusOut",
        "click.o_field_selector_close":"_onCloseClick",

        //Handlepopoverfieldnavigation
        "click.o_field_selector_prev_page":"_onPrevPageClick",
        "click.o_field_selector_next_page":"_onNextPageClick",
        "clickli.o_field_selector_select_button":"_onLastFieldClick",

        //Handleadirectchangeinthedebuginput
        "changeinput.o_field_selector_debug":"_onDebugInputChange",

        //Handleachangeinthesearchinput
        "keyup.o_field_selector_search>input":"_onSearchInputChange",

        //Handlekeyboardandmousenavigationtobuildthefieldchain
        "mouseoverli.o_field_selector_item":"_onItemHover",
        "keydown":"_onKeydown",
    },
    /**
     *@constructor
     *TheModelFieldSelectorrequiresamodelandafieldchaintoworkwith.
     *
     *@param{string}model-themodelname(e.g."res.partner")
     *@param{string[]}chain-listoftheinitialfieldchainparts
     *@param{Object}[options]-somekey-valueoptions
     *@param{string}[options.order='string']
     *                anorderingkeyfordisplayedfields
     *@param{boolean}[options.readonly=true]-trueifshouldbereadonly
     *@param{function}[options.filter]
     *                afunctiontofilterthefetchedfields
     *@param{Object}[options.filters]
     *                somekey-valueoptionstofilterthefetchedfields
     *@param{boolean}[options.filters.searchable=true]
     *                 trueifonlythesearchablefieldshavetobeused
     *@param{Object[]}[options.fields=null]
     *                  thelistoffieldsinfotousewhennorelationhas
     *                  beenfollowed(nullindicatesthewidgethastorequest
     *                  thefieldsitself)
     *@param{boolean|function}[options.followRelations=true]
     *                 trueifcanfollowrelationwhenbuildingthechain
     *@param{boolean}[options.showSearchInput=true]
     *                 falsetohideasearchinputtofilterdisplayedfields
     *@param{boolean}[options.debugMode=false]
     *                 trueifthewidgetisindebugmode,falseotherwise
     */
    init:function(parent,model,chain,options){
        this._super.apply(this,arguments);

        this.model=model;
        this.chain=chain;
        this.options=_.extend({
            order:'string',
            readonly:true,
            filters:{},
            fields:null,
            filter:function(){returntrue;},
            followRelations:true,
            debugMode:false,
            showSearchInput:true,
        },options||{});
        this.options.filters=_.extend({
            searchable:true,
        },this.options.filters);

        if(typeofthis.options.followRelations!=='function'){
            this.options.followRelations=this.options.followRelations?
                function(){returntrue;}:
                function(){returnfalse;};
        }

        this.pages=[];
        this.dirty=false;

        if(!this.options.readonly){
            _.extend(this.events,this.editionEvents);
        }

        this.searchValue='';
    },
    /**
     *@seeWidget.willStart()
     *@returns{Promise}
     */
    willStart:function(){
        returnPromise.all([
            this._super.apply(this,arguments),
            this._prefill()
        ]);
    },
    /**
     *@seeWidget.start
     *@returns{Promise}
     */
    start:function(){
        this.$value=this.$(".o_field_selector_value");
        this.$popover=this.$(".o_field_selector_popover");
        this.$input=this.$popover.find(".o_field_selector_popover_footer>input");
        this.$searchInput=this.$popover.find(".o_field_selector_search>input");
        this.$valid=this.$(".o_field_selector_warning");

        this._render();

        returnthis._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *Returnsthefieldinformationselectedbythefieldchain.
     *
     *@returns{Object}
     */
    getSelectedField:function(){
        return_.findWhere(this.pages[this.chain.length-1],{name:_.last(this.chain)});
    },
    /**
     *Indicatesifthefieldchainisvalid.Ifthefieldchainhasnotbeen
     *processedyet(thewidgetisnotready),thismethodwillreturn
     *undefined.
     *
     *@returns{boolean}
     */
    isValid:function(){
        returnthis.valid;
    },
    /**
     *Savesanewfieldchain(array)andre-render.
     *
     *@param{string[]}chain-thenewfieldchain
     *@returns{Promise}resolvedoncethere-renderingisfinished
     */
    setChain:function(chain){
        if(_.isEqual(chain,this.chain)){
            returnPromise.resolve();
        }

        this.chain=chain;
        returnthis._prefill().then(this._render.bind(this));
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *Addsafieldnametothecurrentfieldchainandmarksitasdirty.
     *
     *@private
     *@param{string}fieldName-thenewfieldnametoaddattheendofthe
     *                          currentfieldchain
     */
    _addChainNode:function(fieldName){
        this.dirty=true;
        this.chain=this.chain.slice(0,this.pages.length-1);
        this.chain.push(fieldName);

        this.searchValue='';
        this.$searchInput.val('');
    },
    /**
     *Searchesafieldinthelastpagebyitsname.
     *
     *@private
     *@param{string}name-thenameofthefieldtofind
     *@returns{Object}thefielddatafoundinthelastpopoverpagethanks
     *                  toitsname
     /*/
    _getLastPageField:function(name){
        return_.findWhere(_.last(this.pages),{
            name:name,
        });
    },
    /**
     *Searchesthecacheforthegivenmodelfields,accordingtothegiven
     *filter.Ifthecachedoesnotknowaboutthemodel,thecacheisupdated.
     *
     *@private
     *@param{string}model
     *@param{Object}filters@seeModelFieldSelector.init.options.filters
     *@returns{Object[]}alistofthemodelfieldsinfo,sortedbyfield
     *                    non-technicalnames
     */
    _getModelFieldsFromCache:function(model,filters){
        varself=this;
        vardef=modelFieldsCache.cacheDefs[model];
        if(!def){
            def=modelFieldsCache.cacheDefs[model]=this._rpc({
                    model:model,
                    method:'fields_get',
                    args:[
                        false,
                        ["store","searchable","type","string","relation","selection","related"]
                    ],
                    context:this.getSession().user_context,
                })
                .then((function(fields){
                    modelFieldsCache.cache[model]=sortFields(fields,model,self.options.order);
                }).bind(this));
        }
        returndef.then((function(){
            return_.filter(modelFieldsCache.cache[model],function(f){
                return(!filters.searchable||f.searchable)&&self.options.filter(f);
            });
        }).bind(this));
    },
    /**
     *Addsanewpagetothepopoverfollowingthegivenfieldrelationand
     *adaptsthechainnodeaccordingtothisgivenfield.
     *
     *@private
     *@param{Object}field-thefieldtoaddtothechainnode
     */
    _goToNextPage:function(field){
        if(!_.isEqual(this._getLastPageField(field.name),field))return;

        this._validate(true);
        this._addChainNode(field.name);
        this._pushPageData(field.relation).then(this._render.bind(this));
    },
    /**
     *Removesthelastpage,adaptsthefieldchainanddisplaysthenew
     *lastpage.
     *
     *@private
     */
    _goToPrevPage:function(){
        if(this.pages.length<=0)return;

        this._validate(true);
        this._removeChainNode();
        if(this.pages.length>1){
            this.pages.pop();
        }
        this._render();
    },
    /**
     *Closesthepopoverandmarksthefieldasselected.Ifthefieldchain
     *changed,itnotifiesitsparents.Ifnotopen,thisdoesnothing.
     *
     *@private
     */
    _hidePopover:function(){
        if(!this._isOpen)return;

        this._isOpen=false;
        this.$popover.addClass('d-none');

        if(this.dirty){
            this.dirty=false;
            this.trigger_up("field_chain_changed",{chain:this.chain});
        }
    },
    /**
     *Preparesthepopoverbyfillingitspagesaccordingtothecurrentfield
     *chain.
     *
     *@private
     *@returns{Promise}resolvedoncethewholefieldchainhasbeen
     *                    processed
     */
    _prefill:function(){
        this.pages=[];
        returnthis._pushPageData(this.model).then((function(){
            this._validate(true);
            return(this.chain.length?processChain.call(this,this.chain.slice().reverse()):Promise.resolve());
        }).bind(this));

        functionprocessChain(chain){
            varfieldName=chain.pop();
            varfield=this._getLastPageField(fieldName);
            if(field&&field.relation){
                if(chain.length){//Fetchnextchainnodeifanyandpossible
                    returnthis._pushPageData(field.relation).then(processChain.bind(this,chain));
                }else{//Simplyupdatethelastpopoverpage
                    returnthis._pushPageData(field.relation);
                }
            }elseif(field&&chain.length===0){//Lastnodefetched
                returnPromise.resolve();
            }elseif(!field&&fieldName==="1"){//TRUE_LEAF
                this._validate(true);
            }elseif(!field&&fieldName==="0"){//FALSE_LEAF
                this._validate(true);
            }else{//Wrongnodechain
                this._validate(false);
            }
            returnPromise.resolve();
        }
    },
    /**
     *Getsthefieldsofaparticularmodelandaddsthemtoanewlast
     *popoverpage.
     *
     *@private
     *@param{string}model-themodelnamewhosefieldshavetobefetched
     *@returns{Promise}resolvedoncethefieldshavebeenadded
     */
    _pushPageData:function(model){
        vardef;
        if(this.model===model&&this.options.fields){
            def=Promise.resolve(sortFields(this.options.fields,model,this.options.order));
        }else{
            def=this._getModelFieldsFromCache(model,this.options.filters);
        }
        returndef.then((function(fields){
            this.pages.push(fields);
        }).bind(this));
    },
    /**
     *Removesthelastfieldnameattheendofthecurrentfieldchainand
     *marksitasdirty.
     *
     *@private
     */
    _removeChainNode:function(){
        this.dirty=true;
        this.chain=this.chain.slice(0,this.pages.length-1);
        this.chain.pop();
    },
    /**
     *Updatestherenderingofthevalue(theserieoftagsseparatedby
     *arrows).Italsoadaptsthecontentofthepopover.
     *
     *@private
     */
    _render:function(){

        //Renderthechainvalue
        this.$value.html(core.qweb.render(this.template+".value",{
            chain:this.chain,
            pages:this.pages,
        }));

        //Togglethewarningmessage
        this.$valid.toggleClass('d-none',!!this.isValid());

        //Adaptthepopovercontent
        varpage=_.last(this.pages);
        vartitle="";
        if(this.pages.length>1){
            varprevField=_.findWhere(this.pages[this.pages.length-2],{
                name:(this.chain.length===this.pages.length)?this.chain[this.chain.length-2]:_.last(this.chain),
            });
            if(prevField)title=prevField.string;
        }
        this.$(".o_field_selector_popover_header.o_field_selector_title").text(title);

        varlines=_.filter(page,this.options.filter);
        if(this.searchValue){
            varmatches=fuzzy.filter(this.searchValue,_.pluck(lines,'string'));
            lines=_.map(_.pluck(matches,'index'),function(i){
                returnlines[i];
            });
        }

        this.$(".o_field_selector_page").replaceWith(core.qweb.render(this.template+".page",{
            lines:lines,
            followRelations:this.options.followRelations,
            debug:this.options.debugMode,
        }));
        this.$input.val(this.chain.join("."));
    },
    /**
     *Selectsthegivenfieldandadaptsthechainnodeaccordingtoit.
     *Italsoclosesthepopoverandsonotifiestheparentsaboutthechange.
     *
     *@param{Object}field-thefieldtoselect
     */
    _selectField:function(field){
        if(!_.isEqual(this._getLastPageField(field.name),field))return;

        this._validate(true);
        this._addChainNode(field.name);
        this._render();
        this._hidePopover();
    },
    /**
     *Showsthepopovertoselectthefieldchain.Thisassumesthatthe
     *popoverhasfinisheditsrendering(fullyrenderedwidgetorresolved
     *deferredof@seesetChain).Ifalreadyopen,thisdoesnothing.
     *
     *@private
     */
    _showPopover:function(){
        if(this._isOpen)return;

        this._isOpen=true;
        this.$popover.removeClass('d-none');
    },
    /**
     *Togglesthevalidstatusofthewidgetanddisplaytheerrormessageif
     *itisnotvalid.
     *
     *@private
     *@param{boolean}valid-trueifthewidgetisvalid,falseotherwise
     */
    _validate:function(valid){
        this.valid=!!valid;

        if(!this.valid){
            this.do_warn(
                false,
                _t("Invalidfieldchain.Youmayhaveusedanon-existingfieldnameorfollowedanon-relationalfield.")
            );
        }
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *Calledwhenthewidgetisfocused->opensthepopover
     */
    _onFocusIn:function(){
        clearTimeout(this._hidePopoverTimeout);
        this._showPopover();
    },
    /**
     *Calledwhenthewidgetisblurred->closesthepopover
     */
    _onFocusOut:function(){
        this._hidePopoverTimeout=_.defer(this._hidePopover.bind(this));
    },
    /**
     *Calledwhenthepopover"cross"iconisclicked->closesthepopover
     */
    _onCloseClick:function(){
        this._hidePopover();
    },
    /**
     *Calledwhenthepopover"previous"iconisclicked->removeslastchain
     *node
     */
    _onPrevPageClick:function(){
        this._goToPrevPage();
    },
    /**
     *Calledwhenapopoverrelationfieldbuttonisclicked->addsitto
     *thechain
     *
     *@param{Event}e
     */
    _onNextPageClick:function(e){
        e.stopPropagation();
        this._goToNextPage(this._getLastPageField($(e.currentTarget).data("name")));
    },
    /**
     *Calledwhenapopovernon-relationfieldbuttonisclicked->addsitto
     *chainandclosesthepopover
     *
     *@param{Event}e
     */
    _onLastFieldClick:function(e){
        this._selectField(this._getLastPageField($(e.currentTarget).data("name")));
    },
    /**
     *Calledwhenthedebuginputvalueischanged->adaptsthechain
     */
    _onDebugInputChange:function(){
        varuserChainStr=this.$input.val();
        varuserChain=userChainStr.split(".");
        if(!this.options.followRelations&&userChain.length>1){
            this.do_warn(
                _t("Relationnotallowed"),
                _t("Youcannotfollowrelationsforthisfieldchainconstruction")
            );
            userChain=[userChain[0]];
        }
        this.setChain(userChain).then((function(){
            this.trigger_up("field_chain_changed",{chain:this.chain});
        }).bind(this));
    },
    /**
     *Calledwhenthesearchinputvalueischanged->adaptsthepopover
     */
    _onSearchInputChange:function(){
        this.searchValue=this.$searchInput.val();
        this._render();
    },
    /**
     *Calledwhenapopoverfieldbuttonitemishovered->togglesits
     *"active"status
     *
     *@param{Event}e
     */
    _onItemHover:function(e){
        this.$("li.o_field_selector_item").removeClass("active");
        $(e.currentTarget).addClass("active");
    },
    /**
     *Calledwhentheuserusesthekeyboardwhenthewidgetisfocused
     *->handlesfieldkeyboardnavigation
     *
     *@param{Event}e
     */
    _onKeydown:function(e){
        if(!this.$popover.is(":visible"))return;
        varinputHasFocus=this.$input.is(":focus");
        varsearchInputHasFocus=this.$searchInput.is(":focus");

        switch(e.which){
            case$.ui.keyCode.UP:
            case$.ui.keyCode.DOWN:
                e.preventDefault();
                var$active=this.$("li.o_field_selector_item.active");
                var$to=$active[e.which===$.ui.keyCode.DOWN?"next":"prev"](".o_field_selector_item");
                if($to.length){
                    $active.removeClass("active");
                    $to.addClass("active");
                    this.$popover.focus();

                    var$page=$to.closest(".o_field_selector_page");
                    varfull_height=$page.height();
                    varel_position=$to.position().top;
                    varel_height=$to.outerHeight();
                    varcurrent_scroll=$page.scrollTop();
                    if(el_position<0){
                        $page.scrollTop(current_scroll-el_height);
                    }elseif(full_height<el_position+el_height){
                        $page.scrollTop(current_scroll+el_height);
                    }
                }
                break;
            case$.ui.keyCode.RIGHT:
                if(inputHasFocus)break;
                e.preventDefault();
                varname=this.$("li.o_field_selector_item.active").data("name");
                if(name){
                    varfield=this._getLastPageField(name);
                    if(field.relation){
                        this._goToNextPage(field);
                    }
                }
                break;
            case$.ui.keyCode.LEFT:
                if(inputHasFocus)break;
                e.preventDefault();
                this._goToPrevPage();
                break;
            case$.ui.keyCode.ESCAPE:
                e.stopPropagation();
                this._hidePopover();
                break;
            case$.ui.keyCode.ENTER:
                if(inputHasFocus||searchInputHasFocus)break;
                e.preventDefault();
                this._selectField(this._getLastPageField(this.$("li.o_field_selector_item.active").data("name")));
                break;
        }
    }
});

returnModelFieldSelector;

/**
 *Allowstotransformamappingfieldname->fieldinfoinanarrayofthe
 *fieldinfos,sortedbyfieldusername("string"value).Thefieldinfosin
 *thefinalarraycontainanadditionalkey"name"withthefieldname.
 *
 *@param{Object}fields-themappingfieldname->fieldinfo
 *@param{string}model
 *@returns{Object[]}thefieldinfossortedbyfield"string"(fieldinfos
 *                    containadditionalkeys"model"and"name"withthefield
 *                    name)
 */
functionsortFields(fields,model,order){
    vararray=_.chain(fields)
        .pairs()
        .sortBy(function(p){returnp[1].string;});
    if(order!=='string'){
        array=array.sortBy(function(p){returnp[1][order];});
    }
    returnarray.map(function(p){
            return_.extend({
                name:p[0],
                model:model,
            },p[1]);
        }).value();
}
});
