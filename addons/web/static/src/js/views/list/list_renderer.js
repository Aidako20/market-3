flectra.define('web.ListRenderer',function(require){
"usestrict";

varBasicRenderer=require('web.BasicRenderer');
const{ComponentWrapper}=require('web.OwlCompatibility');
varconfig=require('web.config');
varcore=require('web.core');
vardom=require('web.dom');
varfield_utils=require('web.field_utils');
varPager=require('web.Pager');
varutils=require('web.utils');
varviewUtils=require('web.viewUtils');

var_t=core._t;

//Alloweddecorationonthelist'srows:bold,italicandbootstrapsemanticsclasses
varDECORATIONS=[
    'decoration-bf',
    'decoration-it',
    'decoration-danger',
    'decoration-info',
    'decoration-muted',
    'decoration-primary',
    'decoration-success',
    'decoration-warning'
];

varFIELD_CLASSES={
    char:'o_list_char',
    float:'o_list_number',
    integer:'o_list_number',
    monetary:'o_list_number',
    text:'o_list_text',
    many2one:'o_list_many2one',
};

varListRenderer=BasicRenderer.extend({
    className:'o_list_view',
    events:{
        "mousedown":"_onMouseDown",
        "click.o_optional_columns_dropdown.dropdown-item":"_onToggleOptionalColumn",
        "click.o_optional_columns_dropdown_toggle":"_onToggleOptionalColumnDropdown",
        'clicktbodytr':'_onRowClicked',
        'changetbody.o_list_record_selector':'_onSelectRecord',
        'clicktheadth.o_column_sortable':'_onSortColumn',
        'click.o_list_record_selector':'_onToggleCheckbox',
        'click.o_group_header':'_onToggleGroup',
        'changethead.o_list_record_selectorinput':'_onToggleSelection',
        'keypresstheadtrtd':'_onKeyPress',
        'keydowntd':'_onKeyDown',
        'keydownth':'_onKeyDown',
    },
    sampleDataTargets:[
        '.o_data_row',
        '.o_group_header',
        '.o_list_table>tfoot',
        '.o_list_table>thead.o_list_record_selector',
    ],
    /**
     *@constructor
     *@param{Widget}parent
     *@param{any}state
     *@param{Object}params
     *@param{boolean}params.hasSelectors
     */
    init:function(parent,state,params){
        this._super.apply(this,arguments);
        this._preprocessColumns();
        this.columnInvisibleFields=params.columnInvisibleFields||{};
        this.rowDecorations=this._extractDecorationAttrs(this.arch);
        this.fieldDecorations={};
        for(constfieldofthis.arch.children.filter(c=>c.tag==='field')){
            constdecorations=this._extractDecorationAttrs(field);
            this.fieldDecorations[field.attrs.name]=decorations;
        }
        this.hasSelectors=params.hasSelectors;
        this.selection=params.selectedRecords||[];
        this.pagers=[];//instantiatedpagers(onlyforgroupedlists)
        this.isGrouped=this.state.groupedBy.length>0;
        this.groupbys=params.groupbys;
    },
    /**
     *Computecolumnsvisilibity.Thiscan'tbedoneearlierasweneedthe
     *controllertorespondtotheload_optional_fieldscallofprocessColumns.
     *
     *@override
     */
    willStart:function(){
        this._processColumns(this.columnInvisibleFields);
        returnthis._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *Ordertofocustobegiventothecontentofthecurrentview
     *
     *@override
     */
    giveFocus:function(){
        this.$('th:eq(0)input,th:eq(1)').first().focus();
    },
    /**
     *@override
     */
    updateState:function(state,params){
        this._setState(state);
        this.isGrouped=this.state.groupedBy.length>0;
        this.columnInvisibleFields=params.columnInvisibleFields||{};
        this._processColumns(this.columnInvisibleFields);
        if(params.selectedRecords){
            this.selection=params.selectedRecords;
        }
        returnthis._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *Thismethoddoesain-memorycomputationoftheaggregatevalues,for
     *eachcolumnsthatcorrespondstoanumericfieldwithaproperaggregate
     *function.
     *
     *Theresultofthesecomputationsisstoredinthe'aggregate'keyofeach
     *columnofthis.columns. Thiswillbethenusedbythe_renderFooter
     *methodtodisplaytheappropriateamount.
     *
     *@private
     */
    _computeAggregates:function(){
        varself=this;
        vardata=[];
        if(this.selection.length){
            utils.traverse_records(this.state,function(record){
                if(_.contains(self.selection,record.id)){
                    data.push(record);//findselectedrecords
                }
            });
        }else{
            data=this.state.data;
        }

        _.each(this.columns,this._computeColumnAggregates.bind(this,data));
    },
    /**
     *Computetheaggregatevaluesforagivencolumnandasetofrecords.
     *Theaggregatevaluesarethenwritten,ifapplicable,inthe'aggregate'
     *keyofthecolumnobject.
     *
     *@private
     *@param{Object[]}dataalistofselected/allrecords
     *@param{Object}column
     */
    _computeColumnAggregates:function(data,column){
        varattrs=column.attrs;
        varfield=this.state.fields[attrs.name];
        if(!field){
            return;
        }
        vartype=field.type;
        if(type!=='integer'&&type!=='float'&&type!=='monetary'){
            return;
        }
        varfunc=(attrs.sum&&'sum')||(attrs.avg&&'avg')||
            (attrs.max&&'max')||(attrs.min&&'min');
        if(func){
            varcount=0;
            varaggregateValue=0;
            if(func==='max'){
                aggregateValue=-Infinity;
            }elseif(func==='min'){
                aggregateValue=Infinity;
            }
            _.each(data,function(d){
                count+=1;
                varvalue=(d.type==='record')?d.data[attrs.name]:d.aggregateValues[attrs.name];
                if(func==='avg'){
                    aggregateValue+=value;
                }elseif(func==='sum'){
                    aggregateValue+=value;
                }elseif(func==='max'){
                    aggregateValue=Math.max(aggregateValue,value);
                }elseif(func==='min'){
                    aggregateValue=Math.min(aggregateValue,value);
                }
            });
            if(func==='avg'){
                aggregateValue=count?aggregateValue/count:aggregateValue;
            }
            column.aggregate={
                help:attrs[func],
                value:aggregateValue,
            };
        }
    },
    /**
     *Extractthedecorationattributes(e.g.decoration-danger)ofanode.The
     *conditionisprocessedsuchthatitisreadytobeevaluated.
     *
     *@private
     *@param{Object}nodethe<tree>ora<field>node
     *@returns{Object}
     */
    _extractDecorationAttrs:function(node){
        constdecorations={};
        for(const[key,expr]ofObject.entries(node.attrs)){
            if(DECORATIONS.includes(key)){
                constcssClass=key.replace('decoration','text');
                decorations[cssClass]=py.parse(py.tokenize(expr));
            }
        }
        returndecorations;
    },
    /**
     *
     *@private
     *@param{jQuery}$cell
     *@param{string}direction
     *@param{integer}colIndex
     *@returns{jQuery|null}
     */
    _findConnectedCell:function($cell,direction,colIndex){
        var$connectedRow=$cell.closest('tr')[direction]('tr');

        if(!$connectedRow.length){
            //Isthereanothergroup?Lookatourparent'ssibling
            //Wecanhavethintbodysowecan'tsimplylookforthead
            //ifcellisathandtbodyinstead
            vartbody=$cell.closest('tbody,thead');
            var$connectedGroup=tbody[direction]('tbody,thead');
            if($connectedGroup.length){
                //Foundanothergroup
                var$connectedRows=$connectedGroup.find('tr');
                varrowIndex;
                if(direction==='prev'){
                    rowIndex=$connectedRows.length-1;
                }else{
                    rowIndex=0;
                }
                $connectedRow=$connectedRows.eq(rowIndex);
            }else{
                //Endofthetable
                return;
            }
        }

        var$connectedCell;
        if($connectedRow.hasClass('o_group_header')){
            $connectedCell=$connectedRow.children();
            this.currentColIndex=colIndex;
        }elseif($connectedRow.has('td.o_group_field_row_add').length){
            $connectedCell=$connectedRow.find('.o_group_field_row_add');
            this.currentColIndex=colIndex;
        }else{
            varconnectedRowChildren=$connectedRow.children();
            if(colIndex===-1){
                colIndex=connectedRowChildren.length-1;
            }
            $connectedCell=connectedRowChildren.eq(colIndex);
        }

        return$connectedCell;
    },
    /**
     *returnthenumberofvisiblecolumns. Notethatthisnumberdependson
     *thestateoftherenderer. Forexample,ineditablemode,itcouldbe
     *onemorethatinnoneditablemode,becausetheremaybeavisible'trash
     *icon'.
     *
     *@private
     *@returns{integer}
     */
    _getNumberOfCols:function(){
        varn=this.columns.length;
        returnthis.hasSelectors?n+1:n;
    },
    /**
     *Returnsthelocalstoragekeyforstoredenabledoptionalcolumns
     *
     *@private
     *@returns{string}
     */
    _getOptionalColumnsStorageKeyParts:function(){
        varself=this;
        return{
            fields:_.map(this.state.fieldsInfo[this.viewType],function(_,fieldName){
                return{name:fieldName,type:self.state.fields[fieldName].type};
            }),
        };
    },
    /**
     *Adjacentbuttons(inthearch)aredisplayedinasinglecolumn.This
     *functioniteratesoverthearch'snodesandreplaces"button"nodesby
     *"button_group"nodes,withasingle"button_group"nodeforadjacent
     *"button"nodes.A"button_group"nodehasa"children"attribute
     *containingall"button"nodesinthegroup.
     *
     *@private
     */
    _groupAdjacentButtons:function(){
        constchildren=[];
        letgroupId=0;
        letbuttonGroupNode=null;
        for(constcofthis.arch.children){
            if(c.tag==='button'){
                if(!buttonGroupNode){
                    buttonGroupNode={
                        tag:'button_group',
                        children:[c],
                        attrs:{
                            name:`button_group_${groupId++}`,
                            modifiers:{},
                        },
                    };
                    children.push(buttonGroupNode);
                }else{
                    buttonGroupNode.children.push(c);
                }
            }else{
                buttonGroupNode=null;
                children.push(c);
            }
        }
        this.arch.children=children;
    },
    /**
     *Processesarch'schildnodesfortheneedsofthelistview:
     *  -detectsoe_read_only/oe_edit_onlyclassnames
     *  -groupsadjacentbuttonsinasinglecolumn.
     *Thisfunctionisexecutedonlyonce,atinitialization.
     *
     *@private
     */
    _preprocessColumns:function(){
        this._processModeClassNames();
        this._groupAdjacentButtons();

        //setasreadOnly(resp.editOnly)buttongroupscontainingonly
        //readOnly(resp.editOnly)buttons,s.t.nocolumnisrendered
        this.arch.children.filter(c=>c.tag==='button_group').forEach(c=>{
            c.attrs.editOnly=c.children.every(n=>n.attrs.editOnly);
            c.attrs.readOnly=c.children.every(n=>n.attrs.readOnly);
        });
    },
    /**
     *Removesthecolumnswhichshouldbeinvisible.Thisfunctionisexecuted
     *ateach(re-)renderingofthelist.
     *
     *@param {Object}columnInvisibleFieldscontainsthecolumninvisiblemodifiervalues
     */
    _processColumns:function(columnInvisibleFields){
        varself=this;
        this.handleField=null;
        this.columns=[];
        this.optionalColumns=[];
        this.optionalColumnsEnabled=[];
        varstoredOptionalColumns;
        this.trigger_up('load_optional_fields',{
            keyParts:this._getOptionalColumnsStorageKeyParts(),
            callback:function(res){
                storedOptionalColumns=res;
            },
        });
        _.each(this.arch.children,function(c){
            if(c.tag!=='control'&&c.tag!=='groupby'&&c.tag!=='header'){
                varreject=c.attrs.modifiers.column_invisible;
                //Ifthereisanevaluateddomainforthefieldweoverridethenode
                //attributetohavetheevaluatedmodifiervalue.
                if(c.tag==="button_group"){
                    //FIXME:'column_invisible'attributeisavailableforfields*and*buttons,
                    //so'columnInvisibleFields'variablenameismisleading,itshouldberenamed
                    reject=c.children.every(child=>columnInvisibleFields[child.attrs.name]);
                }elseif(c.attrs.nameincolumnInvisibleFields){
                    reject=columnInvisibleFields[c.attrs.name];
                }
                if(!reject&&c.attrs.widget==='handle'){
                    self.handleField=c.attrs.name;
                    if(self.isGrouped){
                        reject=true;
                    }
                }

                if(!reject&&c.attrs.optional){
                    self.optionalColumns.push(c);
                    varenabled;
                    if(storedOptionalColumns===undefined){
                        enabled=c.attrs.optional==='show';
                    }else{
                        enabled=_.contains(storedOptionalColumns,c.attrs.name);
                    }
                    if(enabled){
                        self.optionalColumnsEnabled.push(c.attrs.name);
                    }
                    reject=!enabled;
                }

                if(!reject){
                    self.columns.push(c);
                }
            }
        });
    },
    /**
     *Classnames"oe_edit_only"and"oe_read_only"aimtoonlydisplaythecell
     *inthecorrespondingmode.Thisonlyconcernslistsinsideformviews
     *(forx2manyfields).ThisfunctiondetectstheclassNameandstoresa
     *flagonthenode'sattrsaccordingly,toeasefurthercomputations.
     *
     *@private
     */
    _processModeClassNames:function(){
        this.arch.children.forEach(c=>{
            if(c.attrs.class){
                c.attrs.editOnly=/\boe_edit_only\b/.test(c.attrs.class);
                c.attrs.readOnly=/\boe_read_only\b/.test(c.attrs.class);
            }
        });
    },
    /**
     *Renderalistof<td>,withaggregatesifavailable. Itcanbedisplayed
     *inthefooter,orforeachopengroups.
     *
     *@private
     *@param{any}aggregateValues
     *@returns{jQueryElement[]}alistof<td>withtheaggregatevalues
     */
    _renderAggregateCells:function(aggregateValues){
        varself=this;

        return_.map(this.columns,function(column){
            var$cell=$('<td>');
            if(config.isDebug()){
                $cell.addClass(column.attrs.name);
            }
            if(column.attrs.editOnly){
                $cell.addClass('oe_edit_only');
            }
            if(column.attrs.readOnly){
                $cell.addClass('oe_read_only');
            }
            if(column.attrs.nameinaggregateValues){
                varfield=self.state.fields[column.attrs.name];
                varvalue=aggregateValues[column.attrs.name].value;
                varhelp=aggregateValues[column.attrs.name].help;
                varformatFunc=field_utils.format[column.attrs.widget];
                if(!formatFunc){
                    formatFunc=field_utils.format[field.type];
                }
                varformattedValue=formatFunc(value,field,{
                    escape:true,
                    digits:column.attrs.digits?JSON.parse(column.attrs.digits):undefined,
                });
                $cell.addClass('o_list_number').attr('title',help).html(formattedValue);
            }
            return$cell;
        });
    },
    /**
     *Renderthemainbodyofthetable,withallitscontent. Notethatit
     *hasbeendecidedtoalwaysrenderatleast4rows,evenifwehaveless
     *data. Thereasonisthatlistswith0or1linesdon'treallylooklike
     *atable.
     *
     *@private
     *@returns{jQueryElement}ajqueryelement<tbody>
     */
    _renderBody:function(){
        varself=this;
        var$rows=this._renderRows();
        while($rows.length<4){
            $rows.push(self._renderEmptyRow());
        }
        return$('<tbody>').append($rows);
    },
    /**
     *Renderacellforthetable.Formostcells,weonlywanttodisplaythe
     *formattedvalue,withsomeappropriatecssclass.However,whenthe
     *nodewasexplicitelydefinedwitha'widget'attribute,thenwe
     *instantiatethecorrespondingwidget.
     *
     *@private
     *@param{Object}record
     *@param{Object}node
     *@param{integer}colIndex
     *@param{Object}[options]
     *@param{Object}[options.mode]
     *@param{Object}[options.renderInvisible=false]
     *       forcetherenderingofinvisiblecellcontent
     *@param{Object}[options.renderWidgets=false]
     *       forcetherenderingofthecellvaluethankstoawidget
     *@returns{jQueryElement}a<td>element
     */
    _renderBodyCell:function(record,node,colIndex,options){
        vartdClassName='o_data_cell';
        if(node.tag==='button_group'){
            tdClassName+='o_list_button';
        }elseif(node.tag==='field'){
            tdClassName+='o_field_cell';
            vartypeClass=FIELD_CLASSES[this.state.fields[node.attrs.name].type];
            if(typeClass){
                tdClassName+=(''+typeClass);
            }
            if(node.attrs.widget){
                tdClassName+=('o_'+node.attrs.widget+'_cell');
            }
        }
        if(node.attrs.editOnly){
            tdClassName+='oe_edit_only';
        }
        if(node.attrs.readOnly){
            tdClassName+='oe_read_only';
        }
        var$td=$('<td>',{class:tdClassName,tabindex:-1});

        //Weregistermodifiersonthe<td>elementsothatitgetsthecorrect
        //modifiersclasses(forstyling)
        varmodifiers=this._registerModifiers(node,record,$td,_.pick(options,'mode'));
        //Iftheinvisiblemodifiersistrue,the<td>elementisleftempty.
        //Indeed,ifthemodifierswastochangethewholecellwouldbe
        //rerenderedanyway.
        if(modifiers.invisible&&!(options&&options.renderInvisible)){
            return$td;
        }

        if(node.tag==='button_group'){
            for(constbuttonNodeofnode.children){
                if(!this.columnInvisibleFields[buttonNode.attrs.name]){
                    $td.append(this._renderButton(record,buttonNode));
                }
            }
            return$td;
        }elseif(node.tag==='widget'){
            return$td.append(this._renderWidget(record,node));
        }
        if(node.attrs.widget||(options&&options.renderWidgets)){
            var$el=this._renderFieldWidget(node,record,_.pick(options,'mode'));
            return$td.append($el);
        }
        this._handleAttributes($td,node);
        this._setDecorationClasses($td,this.fieldDecorations[node.attrs.name],record);

        varname=node.attrs.name;
        varfield=this.state.fields[name];
        varvalue=record.data[name];
        varformatter=field_utils.format[field.type];
        varformatOptions={
            escape:true,
            data:record.data,
            isPassword:'password'innode.attrs,
            digits:node.attrs.digits&&JSON.parse(node.attrs.digits),
        };
        varformattedValue=formatter(value,field,formatOptions);
        vartitle='';
        if(field.type!=='boolean'){
            title=formatter(value,field,_.extend(formatOptions,{escape:false}));
        }
        return$td.html(formattedValue).attr('title',title);
    },
    /**
     *Rendersthebuttonelementassociatedtothegivennodeandrecord.
     *
     *@private
     *@param{Object}record
     *@param{Object}node
     *@returns{jQuery}a<button>element
     */
    _renderButton:function(record,node){
        varself=this;
        varnodeWithoutWidth=Object.assign({},node);
        deletenodeWithoutWidth.attrs.width;

        letextraClass='';
        if(node.attrs.icon){
            //ifthereisanicon,weforcethebtn-linkstyle,unlessabtn-xxx
            //styleclassisexplicitelyprovided
            constbtnStyleRegex=/\bbtn-[a-z]+\b/;
            if(!btnStyleRegex.test(nodeWithoutWidth.attrs.class)){
                extraClass='btn-linko_icon_button';
            }
        }
        var$button=viewUtils.renderButtonFromNode(nodeWithoutWidth,{
            extraClass:extraClass,
        });
        this._handleAttributes($button,node);
        this._registerModifiers(node,record,$button);

        if(record.res_id){
            //TODOthisshouldbemovedtoahandler
            $button.on("click",function(e){
                e.stopPropagation();
                self.trigger_up('button_clicked',{
                    attrs:node.attrs,
                    record:record,
                });
            });
        }else{
            if(node.attrs.options.warn){
                $button.on("click",function(e){
                    e.stopPropagation();
                    self.do_warn(false,_t('Pleaseclickonthe"save"buttonfirst'));
                });
            }else{
                $button.prop('disabled',true);
            }
        }

        return$button;
    },
    /**
     *Renderacompleteemptyrow. Thisisusedtofillintheblankswhenwe
     *havelessthan4linestodisplay.
     *
     *@private
     *@returns{jQueryElement}a<tr>element
     */
    _renderEmptyRow:function(){
        var$td=$('<td>&nbsp;</td>').attr('colspan',this._getNumberOfCols());
        return$('<tr>').append($td);
    },
    /**
     *Renderthefooter. Itisa<tfoot>withasinglerow,containingall
     *aggregates,ifapplicable.
     *
     *@private
     *@returns{jQueryElement}a<tfoot>element
     */
    _renderFooter:function(){
        varaggregates={};
        _.each(this.columns,function(column){
            if('aggregate'incolumn){
                aggregates[column.attrs.name]=column.aggregate;
            }
        });
        var$cells=this._renderAggregateCells(aggregates);
        if(this.hasSelectors){
            $cells.unshift($('<td>'));
        }
        return$('<tfoot>').append($('<tr>').append($cells));
    },
    /**
     *Rendersthegroupbuttonelement.
     *
     *@private
     *@param{Object}record
     *@param{Object}group
     *@returns{jQuery}a<button>element
     */
    _renderGroupButton:function(list,node){
        var$button=viewUtils.renderButtonFromNode(node,{
            extraClass:node.attrs.icon?'o_icon_button':undefined,
            textAsTitle:!!node.attrs.icon,
        });
        this._handleAttributes($button,node);
        this._registerModifiers(node,list.groupData,$button);

        //TODOthisshouldbemovedtoeventhandlers
        $button.on("click",this._onGroupButtonClicked.bind(this,list.groupData,node));
        $button.on("keydown",this._onGroupButtonKeydown.bind(this));

        return$button;
    },
    /**
     *Rendersthegroupbuttons.
     *
     *@private
     *@param{Object}record
     *@param{Object}group
     *@returns{jQuery}a<button>element
     */
    _renderGroupButtons:function(list,group){
        varself=this;
        var$buttons=$();
        if(list.value){
            //buttonsmakenosensefor'Undefined'group
            group.arch.children.forEach(function(child){
                if(child.tag==='button'){
                    $buttons=$buttons.add(self._renderGroupButton(list,child));
                }
            });
        }
        return$buttons;
    },
    /**
     *Rendertherowthatrepresentagroup
     *
     *@private
     *@param{Object}group
     *@param{integer}groupLevelthenestinglevel(0forrootgroups)
     *@returns{jQueryElement}a<tr>element
     */
    _renderGroupRow:function(group,groupLevel){
        varcells=[];

        varname=group.value===undefined?_t('Undefined'):group.value;
        vargroupBy=this.state.groupedBy[groupLevel];
        if(group.fields[groupBy.split(':')[0]].type!=='boolean'){
            name=name||_t('Undefined');
        }
        var$th=$('<th>')
            .addClass('o_group_name')
            .attr('tabindex',-1)
            .text(name+'('+group.count+')');
        var$arrow=$('<span>')
            .css('padding-left',2+(groupLevel*20)+'px')
            .css('padding-right','5px')
            .addClass('fa');
        if(group.count>0){
            $arrow.toggleClass('fa-caret-right',!group.isOpen)
                .toggleClass('fa-caret-down',group.isOpen);
        }
        $th.prepend($arrow);
        cells.push($th);

        varaggregateKeys=Object.keys(group.aggregateValues);
        varaggregateValues=_.mapObject(group.aggregateValues,function(value){
            return{value:value};
        });
        varaggregateCells=this._renderAggregateCells(aggregateValues);
        varfirstAggregateIndex=_.findIndex(this.columns,function(column){
            returncolumn.tag==='field'&&_.contains(aggregateKeys,column.attrs.name);
        });
        varcolspanBeforeAggregate;
        if(firstAggregateIndex!==-1){
            //ifthereareaggregates,thefirst$thgoesuntilthefirst
            //aggregatethenallcellsbetweenaggregatesarerendered
            colspanBeforeAggregate=firstAggregateIndex;
            varlastAggregateIndex=_.findLastIndex(this.columns,function(column){
                returncolumn.tag==='field'&&_.contains(aggregateKeys,column.attrs.name);
            });
            cells=cells.concat(aggregateCells.slice(firstAggregateIndex,lastAggregateIndex+1));
            varcolSpan=this.columns.length-1-lastAggregateIndex;
            if(colSpan>0){
                cells.push($('<th>').attr('colspan',colSpan));
            }
        }else{
            varcolN=this.columns.length;
            colspanBeforeAggregate=colN>1?colN-1:1;
            if(colN>1){
                cells.push($('<th>'));
            }
        }
        if(this.hasSelectors){
            colspanBeforeAggregate+=1;
        }
        $th.attr('colspan',colspanBeforeAggregate);

        if(group.isOpen&&!group.groupedBy.length&&(group.count>group.data.length)){
            constlastCell=cells[cells.length-1][0];
            this._renderGroupPager(group,lastCell);
        }
        if(group.isOpen&&this.groupbys[groupBy]){
            var$buttons=this._renderGroupButtons(group,this.groupbys[groupBy]);
            if($buttons.length){
                var$buttonSection=$('<div>',{
                    class:'o_group_buttons',
                }).append($buttons);
                $th.append($buttonSection);
            }
        }
        return$('<tr>')
            .addClass('o_group_header')
            .toggleClass('o_group_open',group.isOpen)
            .toggleClass('o_group_has_content',group.count>0)
            .data('group',group)
            .append(cells);
    },
    /**
     *Renderthecontentofagivenopenedgroup.
     *
     *@private
     *@param{Object}group
     *@param{integer}groupLevelthenestinglevel(0forrootgroups)
     *@returns{jQueryElement}a<tr>element
     */
    _renderGroup:function(group,groupLevel){
        varself=this;
        if(group.groupedBy.length){
            //theopenedgroupcontainssubgroups
            returnthis._renderGroups(group.data,groupLevel+1);
        }else{
            //theopenedgroupcontainsrecords
            var$records=_.map(group.data,function(record){
                returnself._renderRow(record);
            });
            return[$('<tbody>').append($records)];
        }
    },
    /**
     *Rendersthepagerforagivengroup
     *
     *@private
     *@param{Object}group
     *@param{HTMLElement}target
     */
    _renderGroupPager:function(group,target){
        constcurrentMinimum=group.offset+1;
        constlimit=group.limit;
        constsize=group.count;
        if(!this._shouldRenderPager(currentMinimum,limit,size)){
            return;
        }
        constpager=newComponentWrapper(this,Pager,{currentMinimum,limit,size});
        constpagerMounting=pager.mount(target).then(()=>{
            //Eventbindingisdoneheretogettherelatedgroupandwrapper.
            pager.el.addEventListener('pager-changed',ev=>this._onPagerChanged(ev,group));
            //Preventpagerclickstotogglethegroup.
            pager.el.addEventListener('click',ev=>ev.stopPropagation());
        });
        this.defs.push(pagerMounting);
        this.pagers.push(pager);
    },
    /**
     *Renderallgroupsintheview. Weassumethattheviewisingrouped
     *mode.
     *
     *Notethateachgroupisrenderedinsidea<tbody>,whichcontainsagroup
     *row,thenpossiblyabunchofrowsforeachrecord.
     *
     *@private
     *@param{Object}datathedataPointcontainingthegroups
     *@param{integer}[groupLevel=0]thenestinglevel.0isfortherootgroup
     *@returns{jQueryElement[]}alistof<tbody>
     */
    _renderGroups:function(data,groupLevel){
        varself=this;
        groupLevel=groupLevel||0;
        varresult=[];
        var$tbody=$('<tbody>');
        _.each(data,function(group){
            if(!$tbody){
                $tbody=$('<tbody>');
            }
            $tbody.append(self._renderGroupRow(group,groupLevel));
            if(group.data.length){
                result.push($tbody);
                result=result.concat(self._renderGroup(group,groupLevel));
                $tbody=null;
            }
        });
        if($tbody){
            result.push($tbody);
        }
        returnresult;
    },
    /**
     *Renderthemainheaderforthelistview. Itisbasicallyjusta<thead>
     *withthenameofeachfields
     *
     *@private
     *@returns{jQueryElement}a<thead>element
     */
    _renderHeader:function(){
        var$tr=$('<tr>')
            .append(_.map(this.columns,this._renderHeaderCell.bind(this)));
        if(this.hasSelectors){
            $tr.prepend(this._renderSelector('th'));
        }
        return$('<thead>').append($tr);
    },
    /**
     *Renderasingle<th>withtheinformationsforacolumn.Ifitisnota
     *fieldornolabelattributeissetto"1",thethwillbeempty.
     *Otherwise,itwillcontainsallrelevantinformationforthefield.
     *
     *@private
     *@param{Object}node
     *@returns{jQueryElement}a<th>element
     */
    _renderHeaderCell:function(node){
        const{icon,name,string}=node.attrs;
        varorder=this.state.orderedBy;
        varisNodeSorted=order[0]&&order[0].name===name;
        varfield=this.state.fields[name];
        var$th=$('<th>');
        if(name){
            $th.attr('data-name',name);
        }elseif(string){
            $th.attr('data-string',string);
        }elseif(icon){
            $th.attr('data-icon',icon);
        }
        if(node.attrs.editOnly){
            $th.addClass('oe_edit_only');
        }
        if(node.attrs.readOnly){
            $th.addClass('oe_read_only');
        }
        if(node.tag==='button_group'){
            $th.addClass('o_list_button');
        }
        if(!field||node.attrs.nolabel==='1'){
            return$th;
        }
        vardescription=string||field.string;
        if(node.attrs.widget){
            $th.addClass('o_'+node.attrs.widget+'_cell');
            constFieldWidget=this.state.fieldsInfo.list[name].Widget;
            if(FieldWidget.prototype.noLabel){
                description='';
            }elseif(FieldWidget.prototype.label){
                description=FieldWidget.prototype.label;
            }
        }
        $th.text(description)
            .attr('tabindex',-1)
            .toggleClass('o-sort-down',isNodeSorted?!order[0].asc:false)
            .toggleClass('o-sort-up',isNodeSorted?order[0].asc:false)
            .addClass((field.sortable||this.state.fieldsInfo.list[name].options.allow_order||false)&&'o_column_sortable');

        if(isNodeSorted){
            $th.attr('aria-sort',order[0].asc?'ascending':'descending');
        }

        if(field.type==='float'||field.type==='integer'||field.type==='monetary'){
            $th.addClass('o_list_number_th');
        }

        if(config.isDebug()){
            varfieldDescr={
                field:field,
                name:name,
                string:description||name,
                record:this.state,
                attrs:_.extend({},node.attrs,this.state.fieldsInfo.list[name]),
            };
            this._addFieldTooltip(fieldDescr,$th);
        }else{
            $th.attr('title',description);
        }
        return$th;
    },
    /**
     *Renderarow,correspondingtoarecord.
     *
     *@private
     *@param{Object}record
     *@returns{jQueryElement}a<tr>element
     */
    _renderRow:function(record){
        varself=this;
        var$cells=this.columns.map(function(node,index){
            returnself._renderBodyCell(record,node,index,{mode:'readonly'});
        });

        var$tr=$('<tr/>',{class:'o_data_row'})
            .attr('data-id',record.id)
            .append($cells);
        if(this.hasSelectors){
            $tr.prepend(this._renderSelector('td',!record.res_id));
        }
        this._setDecorationClasses($tr,this.rowDecorations,record);
        return$tr;
    },
    /**
     *Renderallrows.Thismethodshouldonlycalledwhentheviewisnot
     *grouped.
     *
     *@private
     *@returns{jQueryElement[]}alistof<tr>
     */
    _renderRows:function(){
        returnthis.state.data.map(this._renderRow.bind(this));
    },
    /**
     *Renderasingle<th>withdropdownmenutodisplayoptionalcolumnsofview.
     *
     *@private
     *@returns{jQueryElement}a<th>element
     */
    _renderOptionalColumnsDropdown:function(){
        varself=this;
        var$optionalColumnsDropdown=$('<div>',{
            class:'o_optional_columnstext-centerdropdown',
        });
        var$a=$("<a>",{
            'class':"dropdown-toggletext-darko-no-caret",
            'href':"#",
            'role':"button",
            'data-toggle':"dropdown",
            'data-display':"static",
            'aria-expanded':false,
            'aria-label':_t('Optionalcolumns'),
        });
        $a.appendTo($optionalColumnsDropdown);

        //Settheexpansiondirectionofthedropdown
        //Thebuttonislocatedattheendofthelistheaders
        //Wewantthedropdowntoexpandtowardsthelistratherthanawayfromit
        //https://getbootstrap.com/docs/4.0/components/dropdowns/#menu-alignment
        vardirection=_t.database.parameters.direction;
        vardropdownMenuClass=direction==='rtl'?'dropdown-menu-left':'dropdown-menu-right';
        var$dropdown=$("<div>",{
            class:'dropdown-menuo_optional_columns_dropdown'+dropdownMenuClass,
            role:'menu',
        });
        this.optionalColumns.forEach(function(col){
            vartxt=(col.attrs.string||self.state.fields[col.attrs.name].string)+
                (config.isDebug()?('('+col.attrs.name+')'):'');
            var$checkbox=dom.renderCheckbox({
                text:txt,
                role:"menuitemcheckbox",
                prop:{
                    name:col.attrs.name,
                    checked:_.contains(self.optionalColumnsEnabled,col.attrs.name),
                }
            });
            $dropdown.append($("<div>",{
                class:"dropdown-item",
            }).append($checkbox));
        });
        $dropdown.appendTo($optionalColumnsDropdown);
        return$optionalColumnsDropdown;
    },
    /**
     *A'selector'isthesmallcheckboxontheleftofarecordinalist
     *view. Thisisrenderedasaninputinsideadiv,sowecanproperly
     *styleit.
     *
     *Notethatittakesataginargument,becauseselectorsintheheader
     *arerenderdinath,andthoseinthetbodyareinatd.
     *
     *@private
     *@param{string}tageitherthortd
     *@param{boolean}disableInputiftrue,theinputgeneratedwillbedisabled
     *@returns{jQueryElement}
     */
    _renderSelector:function(tag,disableInput){
        var$content=dom.renderCheckbox();
        if(disableInput){
            $content.find("input[type='checkbox']").prop('disabled',disableInput);
        }
        return$('<'+tag+'>')
            .addClass('o_list_record_selector')
            .append($content);
    },
    /**
     *Mainrenderfunctionforthelist. Itisrenderedasatable.Fornow,
     *thismethoddoesnotwaitforthefieldwidgetstobeready.
     *
     *@override
     *@returns{Promise}resolvedwhentheviewhasbeenrendered
     */
    async_renderView(){
        constoldPagers=this.pagers;
        letprom;
        lettableWrapper;
        if(this.state.count>0||!this.noContentHelp){
            //renderatableiftherearerecords,orifthereisnonocontent
            //helper(emptytableinthiscase)
            this.pagers=[];

            constorderedBy=this.state.orderedBy;
            this.hasHandle=orderedBy.length===0||orderedBy[0].name===this.handleField;
            this._computeAggregates();

            const$table=$(
                '<tableclass="o_list_tabletabletable-smtable-hovertable-striped"/>'
            );
            $table.toggleClass('o_list_table_grouped',this.isGrouped);
            $table.toggleClass('o_list_table_ungrouped',!this.isGrouped);
            constdefs=[];
            this.defs=defs;
            if(this.isGrouped){
                $table.append(this._renderHeader());
                $table.append(this._renderGroups(this.state.data));
                $table.append(this._renderFooter());

            }else{
                $table.append(this._renderHeader());
                $table.append(this._renderBody());
                $table.append(this._renderFooter());
            }
            tableWrapper=Object.assign(document.createElement('div'),{
                className:'table-responsive',
            });
            tableWrapper.appendChild($table[0]);
            deletethis.defs;
            prom=Promise.all(defs);
        }

        awaitPromise.all([this._super.apply(this,arguments),prom]);

        this.el.innerHTML="";
        this.el.classList.remove('o_list_optional_columns');

        //destroythepreviouslyinstantiatedpagers,ifany
        oldPagers.forEach(pager=>pager.destroy());

        //appendthetable(ifany)tothemainelement
        if(tableWrapper){
            this.el.appendChild(tableWrapper);
            if(document.body.contains(this.el)){
                this.pagers.forEach(pager=>pager.on_attach_callback());
            }
            if(this.optionalColumns.length){
                this.el.classList.add('o_list_optional_columns');
                this.$('table').append(
                    $('<iclass="o_optional_columns_dropdown_togglefafa-ellipsis-v"/>')
                );
                this.$el.append(this._renderOptionalColumnsDropdown());
            }
            if(this.selection.length){
                const$checked_rows=this.$('tr').filter(
                    (i,el)=>this.selection.includes(el.dataset.id)
                );
                $checked_rows.find('.o_list_record_selectorinput').prop('checked',true);
                if($checked_rows.length===this.$('.o_data_row').length){//allrowsarechecked
                    this.$('thead.o_list_record_selectorinput').prop('checked',true);
                }
            }
        }

        //displaythenocontenthelperifnecessary
        if(!this._hasContent()&&!!this.noContentHelp){
            this._renderNoContentHelper();
        }
    },
    /**
     *Eachlineorcellcanbedecoratedaccordingtoafewsimplerules.The
     *archdescriptionofthelistorthefieldnodesmayhaveoneofthe
     *decoration-Xattributeswithapythonexpressionasvalue.Then,foreach
     *record,weevaluatethepythonexpression,andconditionnalyaddthe
     *text-Xcssclasstotheelement. Thismethodisconcernedwiththe
     *computationofthelistofcssclassesforagivenrecord.
     *
     *@private
     *@param{jQueryElement}$eltheelementtowhichtoaddtheclasses(atr
     *  ortd)
     *@param{Object}decorationskeysarethedecorationclasses(e.g.
     *  'text-bf')andvaluesarethepythonexpressionstoevaluate
     *@param{Object}recordabasicmodelrecord
     */
    _setDecorationClasses:function($el,decorations,record){
        for(const[cssClass,expr]ofObject.entries(decorations)){
            $el.toggleClass(cssClass,py.PY_isTrue(py.evaluate(expr,record.evalContext)));
        }
    },
    /**
     *@private
     *@returns{boolean}
     */
    _shouldRenderPager:function(currentMinimum,limit,size){
        if(!limit||!size){
            returnfalse;
        }
        constmaximum=Math.min(currentMinimum+limit-1,size);
        constsinglePage=(1===currentMinimum)&&(maximum===size);
        return!singlePage;
    },
    /**
     *Updatethefooteraggregatevalues. Thismethodshouldbecalledeach
     *timethestateofsomefieldischanged,tomakesuretheirsumarekept
     *insync.
     *
     *@private
     */
    _updateFooter:function(){
        this._computeAggregates();
        this.$('tfoot').replaceWith(this._renderFooter());
    },
    /**
     *Wheneverwechangethestateoftheselectedrows,weneedtocallthis
     *methodtokeepthethis.selectionvariableinsync,andalsotorecompute
     *theaggregates.
     *
     *@private
     */
    _updateSelection:function(){
        constpreviousSelection=JSON.stringify(this.selection);
        this.selection=[];
        varself=this;
        var$inputs=this.$('tbody.o_list_record_selectorinput:visible:not(:disabled)');
        varallChecked=$inputs.length>0;
        $inputs.each(function(index,input){
            if(input.checked){
                self.selection.push($(input).closest('tr').data('id'));
            }else{
                allChecked=false;
            }
        });
        this.$('thead.o_list_record_selectorinput').prop('checked',allChecked);
        if(JSON.stringify(this.selection)!==previousSelection){
            this.trigger_up('selection_changed',{allChecked,selection:this.selection});
        }
        this._updateFooter();
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *@private
     *@param{Object}recordarecorddataPointonwhichthebuttonapplies
     *@param{Object}nodearchnodeofthebutton
     *@param{Object}node.attrstheattrsofthebuttoninthearch
     *@param{jQueryEvent}ev
     */
    _onGroupButtonClicked:function(record,node,ev){
        ev.stopPropagation();
        if(node.attrs.type==='edit'){
            this.trigger_up('group_edit_button_clicked',{
                record:record,
            });
        }else{
            this.trigger_up('button_clicked',{
                attrs:node.attrs,
                record:record,
            });
        }
    },
    /**
     *IftheuserpressesENTERonagroupheaderbutton,wewanttoexecute
     *thebuttonaction.Thisisdoneautomaticallyastheclickhandleris
     *called.However,wehavetostopthepropagationoftheeventtoprevent
     *anotherhandlerfromclosingthegroup(see_onKeyDown).
     *
     *@private
     *@param{jQueryEvent}ev
     */
    _onGroupButtonKeydown:function(ev){
        if(ev.keyCode===$.ui.keyCode.ENTER){
            ev.stopPropagation();
        }
    },
    /**
     *Whentheuserclicksonthecheckboxinoptionalfieldsdropdownthe
     *columnisaddedtolistviewanddisplayed
     *
     *@private
     *@param{MouseEvent}ev
     */
    _onToggleOptionalColumn:function(ev){
        varself=this;
        ev.stopPropagation();
        //whentheinput'slabelisclicked,theclickeventisalsoraisedonthe
        //inputitself(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label),
        //sothishandlerisexecutedtwice(exceptiftherenderingisquickenough,
        //aswhenwerender,weemptytheHTML)
        ev.preventDefault();
        varinput=ev.currentTarget.querySelector('input');
        varfieldIndex=this.optionalColumnsEnabled.indexOf(input.name);
        if(fieldIndex>=0){
            this.optionalColumnsEnabled.splice(fieldIndex,1);
        }else{
            this.optionalColumnsEnabled.push(input.name);
        }
        this.trigger_up('save_optional_fields',{
            keyParts:this._getOptionalColumnsStorageKeyParts(),
            optionalColumnsEnabled:this.optionalColumnsEnabled,
        });
        this._processColumns(this.columnInvisibleFields);
        this._render().then(function(){
            self._onToggleOptionalColumnDropdown(ev);
        });
    },
    /**
     *Whentheuserclicksonthethreedots(ellipsis),toggletheoptional
     *fieldsdropdown.
     *
     *@private
     */
    _onToggleOptionalColumnDropdown:function(ev){
        //Thedropdowntoggleisinsidetheoverflowhiddencontainerbecause
        //theellipsisisalwaysinthelastcolumn,butwewanttheactual
        //dropdowntobeoutsideoftheoverflowhiddencontainersinceit
        //couldeasilyhaveahigherheightthanthetable.However,separating
        //thetoggleandthedropdownitselfisnotsupportedbypopper.jsby
        //default,whichiswhyweneedtotogglethedropdownmanually.
        ev.stopPropagation();
        this.$('.o_optional_columns.dropdown-toggle').dropdown('toggle');
        //Explicitlysetleft/rightoftheoptionalcolumndropdownasitispushed
        //insidethis.$el,soweneedtopositionitattheendoftopleftcorner.
        varposition=(this.$(".table-responsive").css('overflow')==="auto"?this.$el.width():
            this.$('table').width());
        vardirection="left";
        if(_t.database.parameters.direction==='rtl'){
            position=position-this.$('.o_optional_columns.o_optional_columns_dropdown').width();
            direction="right";
        }
        this.$('.o_optional_columns').css(direction,position);
    },
    /**
     *Managesthekeyboardeventsonthelist.Ifthelistisnoteditable,whentheusernavigatesto
     *acellusingthekeyboard,ifhepressesenter,enterthemodelrepresentedbytheline
     *
     *@private
     *@param{KeyboardEvent}ev
     */
    _onKeyDown:function(ev){
        var$cell=$(ev.currentTarget);
        var$tr;
        var$futureCell;
        varcolIndex;
        if(this.state.isSample){
            return;//wedisablekeyboardnavigationinsidethetablein"sample"mode
        }
        switch(ev.keyCode){
            case$.ui.keyCode.LEFT:
                ev.preventDefault();
                $tr=$cell.closest('tr');
                $tr.closest('tbody').addClass('o_keyboard_navigation');
                if($tr.hasClass('o_group_header')&&$tr.hasClass('o_group_open')){
                    this._onToggleGroup(ev);
                }else{
                    $futureCell=$cell.prev();
                }
                break;
            case$.ui.keyCode.RIGHT:
                ev.preventDefault();
                $tr=$cell.closest('tr');
                $tr.closest('tbody').addClass('o_keyboard_navigation');
                if($tr.hasClass('o_group_header')&&!$tr.hasClass('o_group_open')){
                    this._onToggleGroup(ev);
                }else{
                    $futureCell=$cell.next();
                }
                break;
            case$.ui.keyCode.UP:
                ev.preventDefault();
                $cell.closest('tbody').addClass('o_keyboard_navigation');
                colIndex=this.currentColIndex||$cell.index();
                $futureCell=this._findConnectedCell($cell,'prev',colIndex);
                if(!$futureCell){
                    this.trigger_up('navigation_move',{direction:'up'});
                }
                break;
            case$.ui.keyCode.DOWN:
                ev.preventDefault();
                $cell.closest('tbody').addClass('o_keyboard_navigation');
                colIndex=this.currentColIndex||$cell.index();
                $futureCell=this._findConnectedCell($cell,'next',colIndex);
                break;
            case$.ui.keyCode.ENTER:
                ev.preventDefault();
                $tr=$cell.closest('tr');
                if($tr.hasClass('o_group_header')){
                    this._onToggleGroup(ev);
                }else{
                    varid=$tr.data('id');
                    if(id){
                        this.trigger_up('open_record',{id:id,target:ev.target});
                    }
                }
                break;
        }
        if($futureCell){
            //Ifthecellcontainsactivableelements,focustheminstead(exceptifitisina
            //groupheader,inwhichcasewewanttoactivatethewholeheader,sothatwecan
            //open/closeitwithRIGHT/LEFTkeystrokes)
            varisInGroupHeader=$futureCell.closest('tr').hasClass('o_group_header');
            var$activables=!isInGroupHeader&&$futureCell.find(':focusable');
            if($activables.length){
                $activables[0].focus();
            }else{
                $futureCell.focus();
            }
        }
    },
    /**
     *@private
     */
    _onMouseDown:function(){
        $('.o_keyboard_navigation').removeClass('o_keyboard_navigation');
    },
    /**
     *@private
     *@param{OwlEvent}ev
     *@param{Object}group
     */
    _onPagerChanged:asyncfunction(ev,group){
        ev.stopPropagation();
        const{currentMinimum,limit}=ev.detail;
        this.trigger_up('load',{
            id:group.id,
            limit:limit,
            offset:currentMinimum-1,
            on_success:reloadedGroup=>{
                Object.assign(group,reloadedGroup);
                this._render();
            },
        });
    },
    /**
     *@private
     *@param{MouseEvent}ev
     */
    _onRowClicked:function(ev){
        //Thespecial_clickpropertyexplicitelyalloweventstobubbleall
        //thewayuptobootstrap'slevelratherthanbeingstoppedearlier.
        if(!ev.target.closest('.o_list_record_selector')&&!$(ev.target).prop('special_click')){
            varid=$(ev.currentTarget).data('id');
            if(id){
                this.trigger_up('open_record',{id:id,target:ev.target});
            }
        }
    },
    /**
     *@private
     *@param{MouseEvent}ev
     */
    _onSelectRecord:function(ev){
        ev.stopPropagation();
        this._updateSelection();
    },
    /**
     *@private
     *@param{MouseEvent}ev
     */
    _onSortColumn:function(ev){
        varname=$(ev.currentTarget).data('name');
        this.trigger_up('toggle_column_order',{id:this.state.id,name:name});
    },
    /**
     *Whentheuserclicksonthewholerecordselectorcell,wewanttotoggle
     *thecheckbox,tomakerecordselectionsmooth.
     *
     *@private
     *@param{MouseEvent}ev
     */
    _onToggleCheckbox:function(ev){
        const$recordSelector=$(ev.target).find('input[type=checkbox]:not(":disabled")');
        $recordSelector.prop('checked',!$recordSelector.prop("checked"));
        $recordSelector.change();//s.t.thandtdcheckboxcasesarehandledbytheirownhandler
    },
    /**
     *@private
     *@param{DOMEvent}ev
     */
    _onToggleGroup:function(ev){
        ev.preventDefault();
        vargroup=$(ev.currentTarget).closest('tr').data('group');
        if(group.count){
            this.trigger_up('toggle_group',{
                group:group,
                onSuccess:()=>{
                    this._updateSelection();
                    //Refocustheheaderafterre-renderunlesstheuser
                    //alreadyfocusedsomethingelsebynow
                    if(document.activeElement.tagName==='BODY'){
                        vargroupHeaders=$('tr.o_group_header:data("group")');
                        varheader=groupHeaders.filter(function(){
                            return$(this).data('group').id===group.id;
                        });
                        header.find('.o_group_name').focus();
                    }
                },
            });
        }
    },
    /**
     *Whentheuserclicksontherowselectioncheckboxintheheader,we
     *needtoupdatethecheckboxoftherowselectioncheckboxesinthebody.
     *
     *@private
     *@param{MouseEvent}ev
     */
    _onToggleSelection:function(ev){
        varchecked=$(ev.currentTarget).prop('checked')||false;
        this.$('tbody.o_list_record_selectorinput:not(":disabled")').prop('checked',checked);
        this._updateSelection();
    },
});

returnListRenderer;
});
