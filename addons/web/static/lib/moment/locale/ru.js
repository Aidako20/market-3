//!moment.jslocaleconfiguration
//!locale:Russian[ru]
//!author:Viktorminator:https://github.com/Viktorminator
//!Author:MenelionElensúle:https://github.com/Oire
//!author:КоренбергМарк:https://github.com/socketpair

;(function(global,factory){
   typeofexports==='object'&&typeofmodule!=='undefined'
       &&typeofrequire==='function'?factory(require('../moment')):
   typeofdefine==='function'&&define.amd?define(['../moment'],factory):
   factory(global.moment)
}(this,(function(moment){'usestrict';


functionplural(word,num){
    varforms=word.split('_');
    returnnum%10===1&&num%100!==11?forms[0]:(num%10>=2&&num%10<=4&&(num%100<10||num%100>=20)?forms[1]:forms[2]);
}
functionrelativeTimeWithPlural(number,withoutSuffix,key){
    varformat={
        'mm':withoutSuffix?'минута_минуты_минут':'минуту_минуты_минут',
        'hh':'час_часа_часов',
        'dd':'день_дня_дней',
        'MM':'месяц_месяца_месяцев',
        'yy':'год_года_лет'
    };
    if(key==='m'){
        returnwithoutSuffix?'минута':'минуту';
    }
    else{
        returnnumber+''+plural(format[key],+number);
    }
}
varmonthsParse=[/^янв/i,/^фев/i,/^мар/i,/^апр/i,/^ма[йя]/i,/^июн/i,/^июл/i,/^авг/i,/^сен/i,/^окт/i,/^ноя/i,/^дек/i];

//http://new.gramota.ru/spravka/rules/139-prop:§103
//Сокращениямесяцев:http://new.gramota.ru/spravka/buro/search-answer?s=242637
//CLDRdata:         http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
varru=moment.defineLocale('ru',{
    months:{
        format:'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
        standalone:'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
    },
    monthsShort:{
        //поCLDRименно"июл."и"июн.",нокакойсмыслменятьбуквунаточку?
        format:'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
        standalone:'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
    },
    weekdays:{
        standalone:'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
        format:'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
        isFormat:/\[?[Вв]?(?:прошлую|следующую|эту)??\]?dddd/
    },
    weekdaysShort:'вс_пн_вт_ср_чт_пт_сб'.split('_'),
    weekdaysMin:'вс_пн_вт_ср_чт_пт_сб'.split('_'),
    monthsParse:monthsParse,
    longMonthsParse:monthsParse,
    shortMonthsParse:monthsParse,

    //полныеназванияспадежами,потрибуквы,длянекоторых,по4буквы,сокращениясточкойибезточки
    monthsRegex:/^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

    //копияпредыдущего
    monthsShortRegex:/^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

    //полныеназванияспадежами
    monthsStrictRegex:/^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

    //Выражение,котороесоотвествуеттолькосокращённымформам
    monthsShortStrictRegex:/^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
    longDateFormat:{
        LT:'HH:mm',
        LTS:'HH:mm:ss',
        L:'DD.MM.YYYY',
        LL:'DMMMMYYYYг.',
        LLL:'DMMMMYYYYг.,HH:mm',
        LLLL:'dddd,DMMMMYYYYг.,HH:mm'
    },
    calendar:{
        sameDay:'[Сегодняв]LT',
        nextDay:'[Завтрав]LT',
        lastDay:'[Вчерав]LT',
        nextWeek:function(now){
            if(now.week()!==this.week()){
                switch(this.day()){
                    case0:
                        return'[Вследующее]dddd[в]LT';
                    case1:
                    case2:
                    case4:
                        return'[Вследующий]dddd[в]LT';
                    case3:
                    case5:
                    case6:
                        return'[Вследующую]dddd[в]LT';
                }
            }else{
                if(this.day()===2){
                    return'[Во]dddd[в]LT';
                }else{
                    return'[В]dddd[в]LT';
                }
            }
        },
        lastWeek:function(now){
            if(now.week()!==this.week()){
                switch(this.day()){
                    case0:
                        return'[Впрошлое]dddd[в]LT';
                    case1:
                    case2:
                    case4:
                        return'[Впрошлый]dddd[в]LT';
                    case3:
                    case5:
                    case6:
                        return'[Впрошлую]dddd[в]LT';
                }
            }else{
                if(this.day()===2){
                    return'[Во]dddd[в]LT';
                }else{
                    return'[В]dddd[в]LT';
                }
            }
        },
        sameElse:'L'
    },
    relativeTime:{
        future:'через%s',
        past:'%sназад',
        s:'несколькосекунд',
        m:relativeTimeWithPlural,
        mm:relativeTimeWithPlural,
        h:'час',
        hh:relativeTimeWithPlural,
        d:'день',
        dd:relativeTimeWithPlural,
        M:'месяц',
        MM:relativeTimeWithPlural,
        y:'год',
        yy:relativeTimeWithPlural
    },
    meridiemParse:/ночи|утра|дня|вечера/i,
    isPM:function(input){
        return/^(дня|вечера)$/.test(input);
    },
    meridiem:function(hour,minute,isLower){
        if(hour<4){
            return'ночи';
        }elseif(hour<12){
            return'утра';
        }elseif(hour<17){
            return'дня';
        }else{
            return'вечера';
        }
    },
    ordinalParse:/\d{1,2}-(й|го|я)/,
    ordinal:function(number,period){
        switch(period){
            case'M':
            case'd':
            case'DDD':
                returnnumber+'-й';
            case'D':
                returnnumber+'-го';
            case'w':
            case'W':
                returnnumber+'-я';
            default:
                returnnumber;
        }
    },
    week:{
        dow:1,//Mondayisthefirstdayoftheweek.
        doy:7 //TheweekthatcontainsJan1stisthefirstweekoftheyear.
    }
});

returnru;

})));
