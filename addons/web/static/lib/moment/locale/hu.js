//!moment.jslocaleconfiguration
//!locale:Hungarian[hu]
//!author:AdamBrunner:https://github.com/adambrunner

;(function(global,factory){
   typeofexports==='object'&&typeofmodule!=='undefined'
       &&typeofrequire==='function'?factory(require('../moment')):
   typeofdefine==='function'&&define.amd?define(['../moment'],factory):
   factory(global.moment)
}(this,(function(moment){'usestrict';


varweekEndings='vasárnaphétfőnkeddenszerdáncsütörtökönpéntekenszombaton'.split('');
functiontranslate(number,withoutSuffix,key,isFuture){
    varnum=number,
        suffix;
    switch(key){
        case's':
            return(isFuture||withoutSuffix)?'néhánymásodperc':'néhánymásodperce';
        case'm':
            return'egy'+(isFuture||withoutSuffix?'perc':'perce');
        case'mm':
            returnnum+(isFuture||withoutSuffix?'perc':'perce');
        case'h':
            return'egy'+(isFuture||withoutSuffix?'óra':'órája');
        case'hh':
            returnnum+(isFuture||withoutSuffix?'óra':'órája');
        case'd':
            return'egy'+(isFuture||withoutSuffix?'nap':'napja');
        case'dd':
            returnnum+(isFuture||withoutSuffix?'nap':'napja');
        case'M':
            return'egy'+(isFuture||withoutSuffix?'hónap':'hónapja');
        case'MM':
            returnnum+(isFuture||withoutSuffix?'hónap':'hónapja');
        case'y':
            return'egy'+(isFuture||withoutSuffix?'év':'éve');
        case'yy':
            returnnum+(isFuture||withoutSuffix?'év':'éve');
    }
    return'';
}
functionweek(isFuture){
    return(isFuture?'':'[múlt]')+'['+weekEndings[this.day()]+']LT[-kor]';
}

varhu=moment.defineLocale('hu',{
    months:'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
    monthsShort:'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
    weekdays:'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
    weekdaysShort:'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
    weekdaysMin:'v_h_k_sze_cs_p_szo'.split('_'),
    longDateFormat:{
        LT:'H:mm',
        LTS:'H:mm:ss',
        L:'YYYY.MM.DD.',
        LL:'YYYY.MMMMD.',
        LLL:'YYYY.MMMMD.H:mm',
        LLLL:'YYYY.MMMMD.,ddddH:mm'
    },
    meridiemParse:/de|du/i,
    isPM:function(input){
        returninput.charAt(1).toLowerCase()==='u';
    },
    meridiem:function(hours,minutes,isLower){
        if(hours<12){
            returnisLower===true?'de':'DE';
        }else{
            returnisLower===true?'du':'DU';
        }
    },
    calendar:{
        sameDay:'[ma]LT[-kor]',
        nextDay:'[holnap]LT[-kor]',
        nextWeek:function(){
            returnweek.call(this,true);
        },
        lastDay:'[tegnap]LT[-kor]',
        lastWeek:function(){
            returnweek.call(this,false);
        },
        sameElse:'L'
    },
    relativeTime:{
        future:'%smúlva',
        past:'%s',
        s:translate,
        m:translate,
        mm:translate,
        h:translate,
        hh:translate,
        d:translate,
        dd:translate,
        M:translate,
        MM:translate,
        y:translate,
        yy:translate
    },
    ordinalParse:/\d{1,2}\./,
    ordinal:'%d.',
    week:{
        dow:1,//Mondayisthefirstdayoftheweek.
        doy:4 //TheweekthatcontainsJan4thisthefirstweekoftheyear.
    }
});

returnhu;

})));
