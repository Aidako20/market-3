<templates>
    <tt-name="_basic-callee">ok</t>
    <tt-name="_callee-printsbody"><tt-esc="0"/></t>
    <tt-name="_callee-uses-foo"><tt-esc="foo"/></t>

    <tt-name="basic-caller">
        <tt-call="_basic-callee"/>
    </t>
    <resultid="basic-caller">ok</result>

    <tt-name="with-unused-body">
        <tt-call="_basic-callee">WHEEE</t>
    </t>
    <resultid="with-unused-body">ok</result>

    <tt-name="with-unused-setbody">
        <tt-call="_basic-callee">
            <tt-set="qux"t-value="3"/>
        </t>
    </t>
    <resultid="with-unused-setbody">ok</result>

    <tt-name="with-used-body">
        <tt-call="_callee-printsbody">ok</t>
    </t>
    <resultid="with-used-body">ok</result>

    <tt-name="with-used-setbody">
        <tt-call="_callee-uses-foo">
            <tt-set="foo"t-value="'ok'"/>
        </t>
    </t>
    <resultid="with-used-setbody">ok</result>

    <!--
        postfixtocallremovedbecausePythonimplappendsallwhitespace
        followingcalledtemplate'sroottotemplateresult(+=element.tail)
        ->endsupwithbunchofextrawhitespaceinthemiddleofthe
        generatedcontent.Couldnormalize,notsurecurrentimplcanbe
        fixedas-is
    -->
    <tt-name="inherit-context">
        <tt-set="foo"t-value="1"/>
        <tt-call="_callee-uses-foo"/><!---<tt-esc="foo"/>-->
    </t>
    <resultid="inherit-context">1<!---1--></result>

    <tt-name="scoped-parameter">
        <tt-call="_basic-callee">
            <tt-set="foo"t-value="42"/>
        </t>
        <!--shouldnotprintanything-->
        <tt-esc="foo"/>
    </t>
    <resultid="scoped-parameter">
        ok
    </result>

    <tt-name="expression-caller">
        <tt-call="{{Trueand'_basic-callee'or'other'}}"/>
    </t>
    <resultid="expression-caller">ok</result>
</templates>
