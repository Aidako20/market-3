/*!
FullCalendarGoogleCalendarPluginv4.4.0
Docs&License:https://fullcalendar.io/
(c)2019AdamShaw
*/

(function(global,factory){
    typeofexports==='object'&&typeofmodule!=='undefined'?factory(exports,require('@fullcalendar/core')):
    typeofdefine==='function'&&define.amd?define(['exports','@fullcalendar/core'],factory):
    (global=global||self,factory(global.FullCalendarGoogleCalendar={},global.FullCalendar));
}(this,function(exports,core){'usestrict';

    /*!*****************************************************************************
    Copyright(c)MicrosoftCorporation.Allrightsreserved.
    LicensedundertheApacheLicense,Version2.0(the"License");youmaynotuse
    thisfileexceptincompliancewiththeLicense.Youmayobtainacopyofthe
    Licenseathttp://www.apache.org/licenses/LICENSE-2.0

    THISCODEISPROVIDEDONAN*ASIS*BASIS,WITHOUTWARRANTIESORCONDITIONSOFANY
    KIND,EITHEREXPRESSORIMPLIED,INCLUDINGWITHOUTLIMITATIONANYIMPLIED
    WARRANTIESORCONDITIONSOFTITLE,FITNESSFORAPARTICULARPURPOSE,
    MERCHANTABLITYORNON-INFRINGEMENT.

    SeetheApacheVersion2.0Licenseforspecificlanguagegoverningpermissions
    andlimitationsundertheLicense.
    ******************************************************************************/

    var__assign=function(){
        __assign=Object.assign||function__assign(t){
            for(vars,i=1,n=arguments.length;i<n;i++){
                s=arguments[i];
                for(varpins)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];
            }
            returnt;
        };
        return__assign.apply(this,arguments);
    };

    //TODO:exposesomehow
    varAPI_BASE='https://www.googleapis.com/calendar/v3/calendars';
    varSTANDARD_PROPS={
        url:String,
        googleCalendarApiKey:String,
        googleCalendarId:String,
        googleCalendarApiBase:String,
        data:null
    };
    vareventSourceDef={
        parseMeta:function(raw){
            if(typeofraw==='string'){
                raw={url:raw};
            }
            if(typeofraw==='object'){
                varstandardProps=core.refineProps(raw,STANDARD_PROPS);
                if(!standardProps.googleCalendarId&&standardProps.url){
                    standardProps.googleCalendarId=parseGoogleCalendarId(standardProps.url);
                }
                deletestandardProps.url;
                if(standardProps.googleCalendarId){
                    returnstandardProps;
                }
            }
            returnnull;
        },
        fetch:function(arg,onSuccess,onFailure){
            varcalendar=arg.calendar;
            varmeta=arg.eventSource.meta;
            varapiKey=meta.googleCalendarApiKey||calendar.opt('googleCalendarApiKey');
            if(!apiKey){
                onFailure({
                    message:'SpecifyagoogleCalendarApiKey.Seehttp://fullcalendar.io/docs/google_calendar/'
                });
            }
            else{
                varurl=buildUrl(meta);
                varrequestParams_1=buildRequestParams(arg.range,apiKey,meta.data,calendar.dateEnv);
                core.requestJson('GET',url,requestParams_1,function(body,xhr){
                    if(body.error){
                        onFailure({
                            message:'GoogleCalendarAPI:'+body.error.message,
                            errors:body.error.errors,
                            xhr:xhr
                        });
                    }
                    else{
                        onSuccess({
                            rawEvents:gcalItemsToRawEventDefs(body.items,requestParams_1.timeZone),
                            xhr:xhr
                        });
                    }
                },function(message,xhr){
                    onFailure({message:message,xhr:xhr});
                });
            }
        }
    };
    functionparseGoogleCalendarId(url){
        varmatch;
        //detectiftheIDwasspecifiedasasinglestring.
        //willmatchcalendarslike"asdf1234@calendar.google.com"inadditiontopersonemailcalendars.
        if(/^[^\/]+@([^\/\.]+\.)*(google|googlemail|gmail)\.com$/.test(url)){
            returnurl;
        }
        elseif((match=/^https:\/\/www.googleapis.com\/calendar\/v3\/calendars\/([^\/]*)/.exec(url))||
            (match=/^https?:\/\/www.google.com\/calendar\/feeds\/([^\/]*)/.exec(url))){
            returndecodeURIComponent(match[1]);
        }
    }
    functionbuildUrl(meta){
        varapiBase=meta.googleCalendarApiBase;
        if(!apiBase){
            apiBase=API_BASE;
        }
        returnapiBase+'/'+encodeURIComponent(meta.googleCalendarId)+'/events';
    }
    functionbuildRequestParams(range,apiKey,extraParams,dateEnv){
        varparams;
        varstartStr;
        varendStr;
        if(dateEnv.canComputeOffset){
            //stringswillnaturallyhaveoffsets,whichGCalneeds
            startStr=dateEnv.formatIso(range.start);
            endStr=dateEnv.formatIso(range.end);
        }
        else{
            //whentimezoneisn'tknown,wedon'tknowwhattheUTCoffsetshouldbe,soaskfor+/-1day
            //fromtheUTCday-starttoguaranteewe'regettingalltheevents
            //(start/endwillbeUTC-coerceddates,sotoISOStringisokay)
            startStr=core.addDays(range.start,-1).toISOString();
            endStr=core.addDays(range.end,1).toISOString();
        }
        params=__assign({},(extraParams||{}),{key:apiKey,timeMin:startStr,timeMax:endStr,singleEvents:true,maxResults:9999});
        if(dateEnv.timeZone!=='local'){
            params.timeZone=dateEnv.timeZone;
        }
        returnparams;
    }
    functiongcalItemsToRawEventDefs(items,gcalTimezone){
        returnitems.map(function(item){
            returngcalItemToRawEventDef(item,gcalTimezone);
        });
    }
    functiongcalItemToRawEventDef(item,gcalTimezone){
        varurl=item.htmlLink||null;
        //maketheURLsforeacheventshowtimesinthecorrecttimezone
        if(url&&gcalTimezone){
            url=injectQsComponent(url,'ctz='+gcalTimezone);
        }
        return{
            id:item.id,
            title:item.summary,
            start:item.start.dateTime||item.start.date,
            end:item.end.dateTime||item.end.date,
            url:url,
            location:item.location,
            description:item.description
        };
    }
    //Injectsastringlike"arg=value"intothequerystringofaURL
    //TODO:movetoageneralutilfile?
    functioninjectQsComponent(url,component){
        //injectitafterthequerystringbutbeforethefragment
        returnurl.replace(/(\?.*?)?(#|$)/,function(whole,qs,hash){
            return(qs?qs+'&':'?')+component+hash;
        });
    }
    varmain=core.createPlugin({
        eventSourceDefs:[eventSourceDef]
    });

    exports.default=main;

    Object.defineProperty(exports,'__esModule',{value:true});

}));
