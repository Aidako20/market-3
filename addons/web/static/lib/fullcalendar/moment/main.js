/*!
FullCalendarMomentPluginv4.4.0
Docs&License:https://fullcalendar.io/
(c)2019AdamShaw
*/

(function(global,factory){
    typeofexports==='object'&&typeofmodule!=='undefined'?factory(exports,require('moment'),require('@fullcalendar/core')):
    typeofdefine==='function'&&define.amd?define(['exports','moment','@fullcalendar/core'],factory):
    (global=global||self,factory(global.FullCalendarMoment={},global.moment,global.FullCalendar));
}(this,function(exports,momentNs,core){'usestrict';

    varmoment=momentNs;//thedirectlycallablefunction
    functiontoMoment(date,calendar){
        if(!(calendarinstanceofcore.Calendar)){
            thrownewError('mustsupplyaCalendarinstance');
        }
        returnconvertToMoment(date,calendar.dateEnv.timeZone,null,calendar.dateEnv.locale.codes[0]);
    }
    functiontoDuration(fcDuration){
        returnmoment.duration(fcDuration);//momentacceptsallthepropsthatfc.Durationalreadyhas!
    }
    functionformatWithCmdStr(cmdStr,arg){
        varcmd=parseCmdStr(cmdStr);
        if(arg.end){
            varstartMom=convertToMoment(arg.start.array,arg.timeZone,arg.start.timeZoneOffset,arg.localeCodes[0]);
            varendMom=convertToMoment(arg.end.array,arg.timeZone,arg.end.timeZoneOffset,arg.localeCodes[0]);
            returnformatRange(cmd,createMomentFormatFunc(startMom),createMomentFormatFunc(endMom),arg.separator);
        }
        returnconvertToMoment(arg.date.array,arg.timeZone,arg.date.timeZoneOffset,arg.localeCodes[0]).format(cmd.whole);//TODO:testforthis
    }
    varmain=core.createPlugin({
        cmdFormatter:formatWithCmdStr
    });
    functioncreateMomentFormatFunc(mom){
        returnfunction(cmdStr){
            returncmdStr?mom.format(cmdStr):'';//becausecallingwithblankstringresultsinISO8601:(
        };
    }
    functionconvertToMoment(input,timeZone,timeZoneOffset,locale){
        varmom;
        if(timeZone==='local'){
            mom=moment(input);
        }
        elseif(timeZone==='UTC'){
            mom=moment.utc(input);
        }
        elseif(moment.tz){
            mom=moment.tz(input,timeZone);
        }
        else{
            mom=moment.utc(input);
            if(timeZoneOffset!=null){
                mom.utcOffset(timeZoneOffset);
            }
        }
        mom.locale(locale);
        returnmom;
    }
    functionparseCmdStr(cmdStr){
        varparts=cmdStr.match(/^(.*?)\{(.*)\}(.*)$/);//TODO:lookbehindsforescapecharacters
        if(parts){
            varmiddle=parseCmdStr(parts[2]);
            return{
                head:parts[1],
                middle:middle,
                tail:parts[3],
                whole:parts[1]+middle.whole+parts[3]
            };
        }
        else{
            return{
                head:null,
                middle:null,
                tail:null,
                whole:cmdStr
            };
        }
    }
    functionformatRange(cmd,formatStart,formatEnd,separator){
        if(cmd.middle){
            varstartHead=formatStart(cmd.head);
            varstartMiddle=formatRange(cmd.middle,formatStart,formatEnd,separator);
            varstartTail=formatStart(cmd.tail);
            varendHead=formatEnd(cmd.head);
            varendMiddle=formatRange(cmd.middle,formatStart,formatEnd,separator);
            varendTail=formatEnd(cmd.tail);
            if(startHead===endHead&&startTail===endTail){
                returnstartHead+
                    (startMiddle===endMiddle?startMiddle:startMiddle+separator+endMiddle)+
                    startTail;
            }
        }
        varstartWhole=formatStart(cmd.whole);
        varendWhole=formatEnd(cmd.whole);
        if(startWhole===endWhole){
            returnstartWhole;
        }
        else{
            returnstartWhole+separator+endWhole;
        }
    }

    exports.default=main;
    exports.toDuration=toDuration;
    exports.toMoment=toMoment;

    Object.defineProperty(exports,'__esModule',{value:true});

}));
