/*!
FullCalendarRRulePluginv4.4.0
Docs&License:https://fullcalendar.io/
(c)2019AdamShaw
*/

(function(global,factory){
    typeofexports==='object'&&typeofmodule!=='undefined'?factory(exports,require('rrule'),require('@fullcalendar/core')):
    typeofdefine==='function'&&define.amd?define(['exports','rrule','@fullcalendar/core'],factory):
    (global=global||self,factory(global.FullCalendarRrule={},global.rrule,global.FullCalendar));
}(this,function(exports,rrule,core){'usestrict';

    /*!*****************************************************************************
    Copyright(c)MicrosoftCorporation.Allrightsreserved.
    LicensedundertheApacheLicense,Version2.0(the"License");youmaynotuse
    thisfileexceptincompliancewiththeLicense.Youmayobtainacopyofthe
    Licenseathttp://www.apache.org/licenses/LICENSE-2.0

    THISCODEISPROVIDEDONAN*ASIS*BASIS,WITHOUTWARRANTIESORCONDITIONSOFANY
    KIND,EITHEREXPRESSORIMPLIED,INCLUDINGWITHOUTLIMITATIONANYIMPLIED
    WARRANTIESORCONDITIONSOFTITLE,FITNESSFORAPARTICULARPURPOSE,
    MERCHANTABLITYORNON-INFRINGEMENT.

    SeetheApacheVersion2.0Licenseforspecificlanguagegoverningpermissions
    andlimitationsundertheLicense.
    ******************************************************************************/

    var__assign=function(){
        __assign=Object.assign||function__assign(t){
            for(vars,i=1,n=arguments.length;i<n;i++){
                s=arguments[i];
                for(varpins)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];
            }
            returnt;
        };
        return__assign.apply(this,arguments);
    };

    varEVENT_DEF_PROPS={
        rrule:null,
        duration:core.createDuration
    };
    varrecurring={
        parse:function(rawEvent,leftoverProps,dateEnv){
            if(rawEvent.rrule!=null){
                varprops=core.refineProps(rawEvent,EVENT_DEF_PROPS,{},leftoverProps);
                varparsed=parseRRule(props.rrule,dateEnv);
                if(parsed){
                    return{
                        typeData:parsed.rrule,
                        allDayGuess:parsed.allDayGuess,
                        duration:props.duration
                    };
                }
            }
            returnnull;
        },
        expand:function(rrule,framingRange){
            //weWANTaninclusivestartandinexclusiveend,butthejsrrulelibwillonlydoeitherBOTH
            //inclusiveorBOTHexclusive,whichisstupid:https://github.com/jakubroztocil/rrule/issues/84
            //Workaround:makeinclusive,whichwillgenerateextraoccurences,andthentrim.
            returnrrule.between(framingRange.start,framingRange.end,true)
                .filter(function(date){
                returndate.valueOf()<framingRange.end.valueOf();
            });
        }
    };
    varmain=core.createPlugin({
        recurringTypes:[recurring]
    });
    functionparseRRule(input,dateEnv){
        varallDayGuess=null;
        varrrule$1;
        if(typeofinput==='string'){
            rrule$1=rrule.rrulestr(input);
        }
        elseif(typeofinput==='object'&&input){//non-nullobject
            varrefined=__assign({},input);//copy
            if(typeofrefined.dtstart==='string'){
                vardtstartMeta=dateEnv.createMarkerMeta(refined.dtstart);
                if(dtstartMeta){
                    refined.dtstart=dtstartMeta.marker;
                    allDayGuess=dtstartMeta.isTimeUnspecified;
                }
                else{
                    deleterefined.dtstart;
                }
            }
            if(typeofrefined.until==='string'){
                refined.until=dateEnv.createMarker(refined.until);
            }
            if(refined.freq!=null){
                refined.freq=convertConstant(refined.freq);
            }
            if(refined.wkst!=null){
                refined.wkst=convertConstant(refined.wkst);
            }
            else{
                refined.wkst=(dateEnv.weekDow-1+7)%7;//convertSunday-firsttoMonday-first
            }
            if(refined.byweekday!=null){
                refined.byweekday=convertConstants(refined.byweekday);//thepluralversion
            }
            rrule$1=newrrule.RRule(refined);
        }
        if(rrule$1){
            return{rrule:rrule$1,allDayGuess:allDayGuess};
        }
        returnnull;
    }
    functionconvertConstants(input){
        if(Array.isArray(input)){
            returninput.map(convertConstant);
        }
        returnconvertConstant(input);
    }
    functionconvertConstant(input){
        if(typeofinput==='string'){
            returnrrule.RRule[input.toUpperCase()];
        }
        returninput;
    }

    exports.default=main;

    Object.defineProperty(exports,'__esModule',{value:true});

}));
