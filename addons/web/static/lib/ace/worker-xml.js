"nousestrict";
!(function(window){
if(typeofwindow.window!="undefined"&&window.document)
    return;
if(window.require&&window.define)
    return;

if(!window.console){
    window.console=function(){
        varmsgs=Array.prototype.slice.call(arguments,0);
        postMessage({type:"log",data:msgs});
    };
    window.console.error=
    window.console.warn=
    window.console.log=
    window.console.trace=window.console;
}
window.window=window;
window.ace=window;

window.onerror=function(message,file,line,col,err){
    postMessage({type:"error",data:{
        message:message,
        data:err.data,
        file:file,
        line:line,
        col:col,
        stack:err.stack
    }});
};

window.normalizeModule=function(parentId,moduleName){
    //normalizepluginrequires
    if(moduleName.indexOf("!")!==-1){
        varchunks=moduleName.split("!");
        returnwindow.normalizeModule(parentId,chunks[0])+"!"+window.normalizeModule(parentId,chunks[1]);
    }
    //normalizerelativerequires
    if(moduleName.charAt(0)=="."){
        varbase=parentId.split("/").slice(0,-1).join("/");
        moduleName=(base?base+"/":"")+moduleName;
        
        while(moduleName.indexOf(".")!==-1&&previous!=moduleName){
            varprevious=moduleName;
            moduleName=moduleName.replace(/^\.\//,"").replace(/\/\.\//,"/").replace(/[^\/]+\/\.\.\//,"");
        }
    }
    
    returnmoduleName;
};

window.require=functionrequire(parentId,id){
    if(!id){
        id=parentId;
        parentId=null;
    }
    if(!id.charAt)
        thrownewError("worker.jsrequire()acceptsonly(parentId,id)asarguments");

    id=window.normalizeModule(parentId,id);

    varmodule=window.require.modules[id];
    if(module){
        if(!module.initialized){
            module.initialized=true;
            module.exports=module.factory().exports;
        }
        returnmodule.exports;
    }
   
    if(!window.require.tlns)
        returnconsole.log("unabletoload"+id);
    
    varpath=resolveModuleId(id,window.require.tlns);
    if(path.slice(-3)!=".js")path+=".js";
    
    window.require.id=id;
    window.require.modules[id]={};//preventinfinitelooponbrokenmodules
    importScripts(path);
    returnwindow.require(parentId,id);
};
functionresolveModuleId(id,paths){
    vartestPath=id,tail="";
    while(testPath){
        varalias=paths[testPath];
        if(typeofalias=="string"){
            returnalias+tail;
        }elseif(alias){
            return alias.location.replace(/\/*$/,"/")+(tail||alias.main||alias.name);
        }elseif(alias===false){
            return"";
        }
        vari=testPath.lastIndexOf("/");
        if(i===-1)break;
        tail=testPath.substr(i)+tail;
        testPath=testPath.slice(0,i);
    }
    returnid;
}
window.require.modules={};
window.require.tlns={};

window.define=function(id,deps,factory){
    if(arguments.length==2){
        factory=deps;
        if(typeofid!="string"){
            deps=id;
            id=window.require.id;
        }
    }elseif(arguments.length==1){
        factory=id;
        deps=[];
        id=window.require.id;
    }
    
    if(typeoffactory!="function"){
        window.require.modules[id]={
            exports:factory,
            initialized:true
        };
        return;
    }

    if(!deps.length)
        //Ifthereisnodependencies,weinject"require","exports"and
        //"module"asdependencies,toprovideCommonJScompatibility.
        deps=["require","exports","module"];

    varreq=function(childId){
        returnwindow.require(id,childId);
    };

    window.require.modules[id]={
        exports:{},
        factory:function(){
            varmodule=this;
            varreturnExports=factory.apply(this,deps.map(function(dep){
                switch(dep){
                    //Because"require","exports"and"module"aren'tactual
                    //dependencies,wemusthandlethemseperately.
                    case"require":returnreq;
                    case"exports":returnmodule.exports;
                    case"module": returnmodule;
                    //Butforallotherdependencies,wecanjustgoaheadand
                    //requirethem.
                    default:       returnreq(dep);
                }
            }));
            if(returnExports)
                module.exports=returnExports;
            returnmodule;
        }
    };
};
window.define.amd={};
require.tlns={};
window.initBaseUrls =functioninitBaseUrls(topLevelNamespaces){
    for(variintopLevelNamespaces)
        require.tlns[i]=topLevelNamespaces[i];
};

window.initSender=functioninitSender(){

    varEventEmitter=window.require("ace/lib/event_emitter").EventEmitter;
    varoop=window.require("ace/lib/oop");
    
    varSender=function(){};
    
    (function(){
        
        oop.implement(this,EventEmitter);
                
        this.callback=function(data,callbackId){
            postMessage({
                type:"call",
                id:callbackId,
                data:data
            });
        };
    
        this.emit=function(name,data){
            postMessage({
                type:"event",
                name:name,
                data:data
            });
        };
        
    }).call(Sender.prototype);
    
    returnnewSender();
};

varmain=window.main=null;
varsender=window.sender=null;

window.onmessage=function(e){
    varmsg=e.data;
    if(msg.event&&sender){
        sender._signal(msg.event,msg.data);
    }
    elseif(msg.command){
        if(main[msg.command])
            main[msg.command].apply(main,msg.args);
        elseif(window[msg.command])
            window[msg.command].apply(window,msg.args);
        else
            thrownewError("Unknowncommand:"+msg.command);
    }
    elseif(msg.init){
        window.initBaseUrls(msg.tlns);
        require("ace/lib/es5-shim");
        sender=window.sender=window.initSender();
        varclazz=require(msg.module)[msg.classname];
        main=window.main=newclazz(sender);
    }
};
})(this);

define("ace/lib/oop",["require","exports","module"],function(require,exports,module){
"usestrict";

exports.inherits=function(ctor,superCtor){
    ctor.super_=superCtor;
    ctor.prototype=Object.create(superCtor.prototype,{
        constructor:{
            value:ctor,
            enumerable:false,
            writable:true,
            configurable:true
        }
    });
};

exports.mixin=function(obj,mixin){
    for(varkeyinmixin){
        obj[key]=mixin[key];
    }
    returnobj;
};

exports.implement=function(proto,mixin){
    exports.mixin(proto,mixin);
};

});

define("ace/lib/lang",["require","exports","module"],function(require,exports,module){
"usestrict";

exports.last=function(a){
    returna[a.length-1];
};

exports.stringReverse=function(string){
    returnstring.split("").reverse().join("");
};

exports.stringRepeat=function(string,count){
    varresult='';
    while(count>0){
        if(count&1)
            result+=string;

        if(count>>=1)
            string+=string;
    }
    returnresult;
};

vartrimBeginRegexp=/^\s\s*/;
vartrimEndRegexp=/\s\s*$/;

exports.stringTrimLeft=function(string){
    returnstring.replace(trimBeginRegexp,'');
};

exports.stringTrimRight=function(string){
    returnstring.replace(trimEndRegexp,'');
};

exports.copyObject=function(obj){
    varcopy={};
    for(varkeyinobj){
        copy[key]=obj[key];
    }
    returncopy;
};

exports.copyArray=function(array){
    varcopy=[];
    for(vari=0,l=array.length;i<l;i++){
        if(array[i]&&typeofarray[i]=="object")
            copy[i]=this.copyObject(array[i]);
        else
            copy[i]=array[i];
    }
    returncopy;
};

exports.deepCopy=functiondeepCopy(obj){
    if(typeofobj!=="object"||!obj)
        returnobj;
    varcopy;
    if(Array.isArray(obj)){
        copy=[];
        for(varkey=0;key<obj.length;key++){
            copy[key]=deepCopy(obj[key]);
        }
        returncopy;
    }
    if(Object.prototype.toString.call(obj)!=="[objectObject]")
        returnobj;
    
    copy={};
    for(varkeyinobj)
        copy[key]=deepCopy(obj[key]);
    returncopy;
};

exports.arrayToMap=function(arr){
    varmap={};
    for(vari=0;i<arr.length;i++){
        map[arr[i]]=1;
    }
    returnmap;

};

exports.createMap=function(props){
    varmap=Object.create(null);
    for(variinprops){
        map[i]=props[i];
    }
    returnmap;
};
exports.arrayRemove=function(array,value){
  for(vari=0;i<=array.length;i++){
    if(value===array[i]){
      array.splice(i,1);
    }
  }
};

exports.escapeRegExp=function(str){
    returnstr.replace(/([.*+?^${}()|[\]\/\\])/g,'\\$1');
};

exports.escapeHTML=function(str){
    returnstr.replace(/&/g,"&#38;").replace(/"/g,"&#34;").replace(/'/g,"&#39;").replace(/</g,"&#60;");
};

exports.getMatchOffsets=function(string,regExp){
    varmatches=[];

    string.replace(regExp,function(str){
        matches.push({
            offset:arguments[arguments.length-2],
            length:str.length
        });
    });

    returnmatches;
};
exports.deferredCall=function(fcn){
    vartimer=null;
    varcallback=function(){
        timer=null;
        fcn();
    };

    vardeferred=function(timeout){
        deferred.cancel();
        timer=setTimeout(callback,timeout||0);
        returndeferred;
    };

    deferred.schedule=deferred;

    deferred.call=function(){
        this.cancel();
        fcn();
        returndeferred;
    };

    deferred.cancel=function(){
        clearTimeout(timer);
        timer=null;
        returndeferred;
    };
    
    deferred.isPending=function(){
        returntimer;
    };

    returndeferred;
};


exports.delayedCall=function(fcn,defaultTimeout){
    vartimer=null;
    varcallback=function(){
        timer=null;
        fcn();
    };

    var_self=function(timeout){
        if(timer==null)
            timer=setTimeout(callback,timeout||defaultTimeout);
    };

    _self.delay=function(timeout){
        timer&&clearTimeout(timer);
        timer=setTimeout(callback,timeout||defaultTimeout);
    };
    _self.schedule=_self;

    _self.call=function(){
        this.cancel();
        fcn();
    };

    _self.cancel=function(){
        timer&&clearTimeout(timer);
        timer=null;
    };

    _self.isPending=function(){
        returntimer;
    };

    return_self;
};
});

define("ace/range",["require","exports","module"],function(require,exports,module){
"usestrict";
varcomparePoints=function(p1,p2){
    returnp1.row-p2.row||p1.column-p2.column;
};
varRange=function(startRow,startColumn,endRow,endColumn){
    this.start={
        row:startRow,
        column:startColumn
    };

    this.end={
        row:endRow,
        column:endColumn
    };
};

(function(){
    this.isEqual=function(range){
        returnthis.start.row===range.start.row&&
            this.end.row===range.end.row&&
            this.start.column===range.start.column&&
            this.end.column===range.end.column;
    };
    this.toString=function(){
        return("Range:["+this.start.row+"/"+this.start.column+
            "]->["+this.end.row+"/"+this.end.column+"]");
    };

    this.contains=function(row,column){
        returnthis.compare(row,column)==0;
    };
    this.compareRange=function(range){
        varcmp,
            end=range.end,
            start=range.start;

        cmp=this.compare(end.row,end.column);
        if(cmp==1){
            cmp=this.compare(start.row,start.column);
            if(cmp==1){
                return2;
            }elseif(cmp==0){
                return1;
            }else{
                return0;
            }
        }elseif(cmp==-1){
            return-2;
        }else{
            cmp=this.compare(start.row,start.column);
            if(cmp==-1){
                return-1;
            }elseif(cmp==1){
                return42;
            }else{
                return0;
            }
        }
    };
    this.comparePoint=function(p){
        returnthis.compare(p.row,p.column);
    };
    this.containsRange=function(range){
        returnthis.comparePoint(range.start)==0&&this.comparePoint(range.end)==0;
    };
    this.intersects=function(range){
        varcmp=this.compareRange(range);
        return(cmp==-1||cmp==0||cmp==1);
    };
    this.isEnd=function(row,column){
        returnthis.end.row==row&&this.end.column==column;
    };
    this.isStart=function(row,column){
        returnthis.start.row==row&&this.start.column==column;
    };
    this.setStart=function(row,column){
        if(typeofrow=="object"){
            this.start.column=row.column;
            this.start.row=row.row;
        }else{
            this.start.row=row;
            this.start.column=column;
        }
    };
    this.setEnd=function(row,column){
        if(typeofrow=="object"){
            this.end.column=row.column;
            this.end.row=row.row;
        }else{
            this.end.row=row;
            this.end.column=column;
        }
    };
    this.inside=function(row,column){
        if(this.compare(row,column)==0){
            if(this.isEnd(row,column)||this.isStart(row,column)){
                returnfalse;
            }else{
                returntrue;
            }
        }
        returnfalse;
    };
    this.insideStart=function(row,column){
        if(this.compare(row,column)==0){
            if(this.isEnd(row,column)){
                returnfalse;
            }else{
                returntrue;
            }
        }
        returnfalse;
    };
    this.insideEnd=function(row,column){
        if(this.compare(row,column)==0){
            if(this.isStart(row,column)){
                returnfalse;
            }else{
                returntrue;
            }
        }
        returnfalse;
    };
    this.compare=function(row,column){
        if(!this.isMultiLine()){
            if(row===this.start.row){
                returncolumn<this.start.column?-1:(column>this.end.column?1:0);
            }
        }

        if(row<this.start.row)
            return-1;

        if(row>this.end.row)
            return1;

        if(this.start.row===row)
            returncolumn>=this.start.column?0:-1;

        if(this.end.row===row)
            returncolumn<=this.end.column?0:1;

        return0;
    };
    this.compareStart=function(row,column){
        if(this.start.row==row&&this.start.column==column){
            return-1;
        }else{
            returnthis.compare(row,column);
        }
    };
    this.compareEnd=function(row,column){
        if(this.end.row==row&&this.end.column==column){
            return1;
        }else{
            returnthis.compare(row,column);
        }
    };
    this.compareInside=function(row,column){
        if(this.end.row==row&&this.end.column==column){
            return1;
        }elseif(this.start.row==row&&this.start.column==column){
            return-1;
        }else{
            returnthis.compare(row,column);
        }
    };
    this.clipRows=function(firstRow,lastRow){
        if(this.end.row>lastRow)
            varend={row:lastRow+1,column:0};
        elseif(this.end.row<firstRow)
            varend={row:firstRow,column:0};

        if(this.start.row>lastRow)
            varstart={row:lastRow+1,column:0};
        elseif(this.start.row<firstRow)
            varstart={row:firstRow,column:0};

        returnRange.fromPoints(start||this.start,end||this.end);
    };
    this.extend=function(row,column){
        varcmp=this.compare(row,column);

        if(cmp==0)
            returnthis;
        elseif(cmp==-1)
            varstart={row:row,column:column};
        else
            varend={row:row,column:column};

        returnRange.fromPoints(start||this.start,end||this.end);
    };

    this.isEmpty=function(){
        return(this.start.row===this.end.row&&this.start.column===this.end.column);
    };
    this.isMultiLine=function(){
        return(this.start.row!==this.end.row);
    };
    this.clone=function(){
        returnRange.fromPoints(this.start,this.end);
    };
    this.collapseRows=function(){
        if(this.end.column==0)
            returnnewRange(this.start.row,0,Math.max(this.start.row,this.end.row-1),0);
        else
            returnnewRange(this.start.row,0,this.end.row,0);
    };
    this.toScreenRange=function(session){
        varscreenPosStart=session.documentToScreenPosition(this.start);
        varscreenPosEnd=session.documentToScreenPosition(this.end);

        returnnewRange(
            screenPosStart.row,screenPosStart.column,
            screenPosEnd.row,screenPosEnd.column
        );
    };
    this.moveBy=function(row,column){
        this.start.row+=row;
        this.start.column+=column;
        this.end.row+=row;
        this.end.column+=column;
    };

}).call(Range.prototype);
Range.fromPoints=function(start,end){
    returnnewRange(start.row,start.column,end.row,end.column);
};
Range.comparePoints=comparePoints;

Range.comparePoints=function(p1,p2){
    returnp1.row-p2.row||p1.column-p2.column;
};


exports.Range=Range;
});

define("ace/apply_delta",["require","exports","module"],function(require,exports,module){
"usestrict";

functionthrowDeltaError(delta,errorText){
    console.log("InvalidDelta:",delta);
    throw"InvalidDelta:"+errorText;
}

functionpositionInDocument(docLines,position){
    returnposition.row   >=0&&position.row   < docLines.length&&
           position.column>=0&&position.column<=docLines[position.row].length;
}

functionvalidateDelta(docLines,delta){
    if(delta.action!="insert"&&delta.action!="remove")
        throwDeltaError(delta,"delta.actionmustbe'insert'or'remove'");
    if(!(delta.linesinstanceofArray))
        throwDeltaError(delta,"delta.linesmustbeanArray");
    if(!delta.start||!delta.end)
       throwDeltaError(delta,"delta.start/endmustbeanpresent");
    varstart=delta.start;
    if(!positionInDocument(docLines,delta.start))
        throwDeltaError(delta,"delta.startmustbecontainedindocument");
    varend=delta.end;
    if(delta.action=="remove"&&!positionInDocument(docLines,end))
        throwDeltaError(delta,"delta.endmustcontainedindocumentfor'remove'actions");
    varnumRangeRows=end.row-start.row;
    varnumRangeLastLineChars=(end.column-(numRangeRows==0?start.column:0));
    if(numRangeRows!=delta.lines.length-1||delta.lines[numRangeRows].length!=numRangeLastLineChars)
        throwDeltaError(delta,"delta.rangemustmatchdeltalines");
}

exports.applyDelta=function(docLines,delta,doNotValidate){
    
    varrow=delta.start.row;
    varstartColumn=delta.start.column;
    varline=docLines[row]||"";
    switch(delta.action){
        case"insert":
            varlines=delta.lines;
            if(lines.length===1){
                docLines[row]=line.substring(0,startColumn)+delta.lines[0]+line.substring(startColumn);
            }else{
                varargs=[row,1].concat(delta.lines);
                docLines.splice.apply(docLines,args);
                docLines[row]=line.substring(0,startColumn)+docLines[row];
                docLines[row+delta.lines.length-1]+=line.substring(startColumn);
            }
            break;
        case"remove":
            varendColumn=delta.end.column;
            varendRow=delta.end.row;
            if(row===endRow){
                docLines[row]=line.substring(0,startColumn)+line.substring(endColumn);
            }else{
                docLines.splice(
                    row,endRow-row+1,
                    line.substring(0,startColumn)+docLines[endRow].substring(endColumn)
                );
            }
            break;
    }
};
});

define("ace/lib/event_emitter",["require","exports","module"],function(require,exports,module){
"usestrict";

varEventEmitter={};
varstopPropagation=function(){this.propagationStopped=true;};
varpreventDefault=function(){this.defaultPrevented=true;};

EventEmitter._emit=
EventEmitter._dispatchEvent=function(eventName,e){
    this._eventRegistry||(this._eventRegistry={});
    this._defaultHandlers||(this._defaultHandlers={});

    varlisteners=this._eventRegistry[eventName]||[];
    vardefaultHandler=this._defaultHandlers[eventName];
    if(!listeners.length&&!defaultHandler)
        return;

    if(typeofe!="object"||!e)
        e={};

    if(!e.type)
        e.type=eventName;
    if(!e.stopPropagation)
        e.stopPropagation=stopPropagation;
    if(!e.preventDefault)
        e.preventDefault=preventDefault;

    listeners=listeners.slice();
    for(vari=0;i<listeners.length;i++){
        listeners[i](e,this);
        if(e.propagationStopped)
            break;
    }
    
    if(defaultHandler&&!e.defaultPrevented)
        returndefaultHandler(e,this);
};


EventEmitter._signal=function(eventName,e){
    varlisteners=(this._eventRegistry||{})[eventName];
    if(!listeners)
        return;
    listeners=listeners.slice();
    for(vari=0;i<listeners.length;i++)
        listeners[i](e,this);
};

EventEmitter.once=function(eventName,callback){
    var_self=this;
    callback&&this.addEventListener(eventName,functionnewCallback(){
        _self.removeEventListener(eventName,newCallback);
        callback.apply(null,arguments);
    });
};


EventEmitter.setDefaultHandler=function(eventName,callback){
    varhandlers=this._defaultHandlers;
    if(!handlers)
        handlers=this._defaultHandlers={_disabled_:{}};
    
    if(handlers[eventName]){
        varold=handlers[eventName];
        vardisabled=handlers._disabled_[eventName];
        if(!disabled)
            handlers._disabled_[eventName]=disabled=[];
        disabled.push(old);
        vari=disabled.indexOf(callback);
        if(i!=-1)
            disabled.splice(i,1);
    }
    handlers[eventName]=callback;
};
EventEmitter.removeDefaultHandler=function(eventName,callback){
    varhandlers=this._defaultHandlers;
    if(!handlers)
        return;
    vardisabled=handlers._disabled_[eventName];
    
    if(handlers[eventName]==callback){
        varold=handlers[eventName];
        if(disabled)
            this.setDefaultHandler(eventName,disabled.pop());
    }elseif(disabled){
        vari=disabled.indexOf(callback);
        if(i!=-1)
            disabled.splice(i,1);
    }
};

EventEmitter.on=
EventEmitter.addEventListener=function(eventName,callback,capturing){
    this._eventRegistry=this._eventRegistry||{};

    varlisteners=this._eventRegistry[eventName];
    if(!listeners)
        listeners=this._eventRegistry[eventName]=[];

    if(listeners.indexOf(callback)==-1)
        listeners[capturing?"unshift":"push"](callback);
    returncallback;
};

EventEmitter.off=
EventEmitter.removeListener=
EventEmitter.removeEventListener=function(eventName,callback){
    this._eventRegistry=this._eventRegistry||{};

    varlisteners=this._eventRegistry[eventName];
    if(!listeners)
        return;

    varindex=listeners.indexOf(callback);
    if(index!==-1)
        listeners.splice(index,1);
};

EventEmitter.removeAllListeners=function(eventName){
    if(this._eventRegistry)this._eventRegistry[eventName]=[];
};

exports.EventEmitter=EventEmitter;

});

define("ace/anchor",["require","exports","module","ace/lib/oop","ace/lib/event_emitter"],function(require,exports,module){
"usestrict";

varoop=require("./lib/oop");
varEventEmitter=require("./lib/event_emitter").EventEmitter;

varAnchor=exports.Anchor=function(doc,row,column){
    this.$onChange=this.onChange.bind(this);
    this.attach(doc);
    
    if(typeofcolumn=="undefined")
        this.setPosition(row.row,row.column);
    else
        this.setPosition(row,column);
};

(function(){

    oop.implement(this,EventEmitter);
    this.getPosition=function(){
        returnthis.$clipPositionToDocument(this.row,this.column);
    };
    this.getDocument=function(){
        returnthis.document;
    };
    this.$insertRight=false;
    this.onChange=function(delta){
        if(delta.start.row==delta.end.row&&delta.start.row!=this.row)
            return;

        if(delta.start.row>this.row)
            return;
            
        varpoint=$getTransformedPoint(delta,{row:this.row,column:this.column},this.$insertRight);
        this.setPosition(point.row,point.column,true);
    };
    
    function$pointsInOrder(point1,point2,equalPointsInOrder){
        varbColIsAfter=equalPointsInOrder?point1.column<=point2.column:point1.column<point2.column;
        return(point1.row<point2.row)||(point1.row==point2.row&&bColIsAfter);
    }
            
    function$getTransformedPoint(delta,point,moveIfEqual){
        vardeltaIsInsert=delta.action=="insert";
        vardeltaRowShift=(deltaIsInsert?1:-1)*(delta.end.row   -delta.start.row);
        vardeltaColShift=(deltaIsInsert?1:-1)*(delta.end.column-delta.start.column);
        vardeltaStart=delta.start;
        vardeltaEnd=deltaIsInsert?deltaStart:delta.end;//Collapseinsertrange.
        if($pointsInOrder(point,deltaStart,moveIfEqual)){
            return{
                row:point.row,
                column:point.column
            };
        }
        if($pointsInOrder(deltaEnd,point,!moveIfEqual)){
            return{
                row:point.row+deltaRowShift,
                column:point.column+(point.row==deltaEnd.row?deltaColShift:0)
            };
        }
        
        return{
            row:deltaStart.row,
            column:deltaStart.column
        };
    }
    this.setPosition=function(row,column,noClip){
        varpos;
        if(noClip){
            pos={
                row:row,
                column:column
            };
        }else{
            pos=this.$clipPositionToDocument(row,column);
        }

        if(this.row==pos.row&&this.column==pos.column)
            return;

        varold={
            row:this.row,
            column:this.column
        };

        this.row=pos.row;
        this.column=pos.column;
        this._signal("change",{
            old:old,
            value:pos
        });
    };
    this.detach=function(){
        this.document.removeEventListener("change",this.$onChange);
    };
    this.attach=function(doc){
        this.document=doc||this.document;
        this.document.on("change",this.$onChange);
    };
    this.$clipPositionToDocument=function(row,column){
        varpos={};

        if(row>=this.document.getLength()){
            pos.row=Math.max(0,this.document.getLength()-1);
            pos.column=this.document.getLine(pos.row).length;
        }
        elseif(row<0){
            pos.row=0;
            pos.column=0;
        }
        else{
            pos.row=row;
            pos.column=Math.min(this.document.getLine(pos.row).length,Math.max(0,column));
        }

        if(column<0)
            pos.column=0;

        returnpos;
    };

}).call(Anchor.prototype);

});

define("ace/document",["require","exports","module","ace/lib/oop","ace/apply_delta","ace/lib/event_emitter","ace/range","ace/anchor"],function(require,exports,module){
"usestrict";

varoop=require("./lib/oop");
varapplyDelta=require("./apply_delta").applyDelta;
varEventEmitter=require("./lib/event_emitter").EventEmitter;
varRange=require("./range").Range;
varAnchor=require("./anchor").Anchor;

varDocument=function(textOrLines){
    this.$lines=[""];
    if(textOrLines.length===0){
        this.$lines=[""];
    }elseif(Array.isArray(textOrLines)){
        this.insertMergedLines({row:0,column:0},textOrLines);
    }else{
        this.insert({row:0,column:0},textOrLines);
    }
};

(function(){

    oop.implement(this,EventEmitter);
    this.setValue=function(text){
        varlen=this.getLength()-1;
        this.remove(newRange(0,0,len,this.getLine(len).length));
        this.insert({row:0,column:0},text);
    };
    this.getValue=function(){
        returnthis.getAllLines().join(this.getNewLineCharacter());
    };
    this.createAnchor=function(row,column){
        returnnewAnchor(this,row,column);
    };
    if("aaa".split(/a/).length===0){
        this.$split=function(text){
            returntext.replace(/\r\n|\r/g,"\n").split("\n");
        };
    }else{
        this.$split=function(text){
            returntext.split(/\r\n|\r|\n/);
        };
    }


    this.$detectNewLine=function(text){
        varmatch=text.match(/^.*?(\r\n|\r|\n)/m);
        this.$autoNewLine=match?match[1]:"\n";
        this._signal("changeNewLineMode");
    };
    this.getNewLineCharacter=function(){
        switch(this.$newLineMode){
          case"windows":
            return"\r\n";
          case"unix":
            return"\n";
          default:
            returnthis.$autoNewLine||"\n";
        }
    };

    this.$autoNewLine="";
    this.$newLineMode="auto";
    this.setNewLineMode=function(newLineMode){
        if(this.$newLineMode===newLineMode)
            return;

        this.$newLineMode=newLineMode;
        this._signal("changeNewLineMode");
    };
    this.getNewLineMode=function(){
        returnthis.$newLineMode;
    };
    this.isNewLine=function(text){
        return(text=="\r\n"||text=="\r"||text=="\n");
    };
    this.getLine=function(row){
        returnthis.$lines[row]||"";
    };
    this.getLines=function(firstRow,lastRow){
        returnthis.$lines.slice(firstRow,lastRow+1);
    };
    this.getAllLines=function(){
        returnthis.getLines(0,this.getLength());
    };
    this.getLength=function(){
        returnthis.$lines.length;
    };
    this.getTextRange=function(range){
        returnthis.getLinesForRange(range).join(this.getNewLineCharacter());
    };
    this.getLinesForRange=function(range){
        varlines;
        if(range.start.row===range.end.row){
            lines=[this.getLine(range.start.row).substring(range.start.column,range.end.column)];
        }else{
            lines=this.getLines(range.start.row,range.end.row);
            lines[0]=(lines[0]||"").substring(range.start.column);
            varl=lines.length-1;
            if(range.end.row-range.start.row==l)
                lines[l]=lines[l].substring(0,range.end.column);
        }
        returnlines;
    };
    this.insertLines=function(row,lines){
        console.warn("Useofdocument.insertLinesisdeprecated.UsetheinsertFullLinesmethodinstead.");
        returnthis.insertFullLines(row,lines);
    };
    this.removeLines=function(firstRow,lastRow){
        console.warn("Useofdocument.removeLinesisdeprecated.UsetheremoveFullLinesmethodinstead.");
        returnthis.removeFullLines(firstRow,lastRow);
    };
    this.insertNewLine=function(position){
        console.warn("Useofdocument.insertNewLineisdeprecated.UseinsertMergedLines(position,['',''])instead.");
        returnthis.insertMergedLines(position,["",""]);
    };
    this.insert=function(position,text){
        if(this.getLength()<=1)
            this.$detectNewLine(text);
        
        returnthis.insertMergedLines(position,this.$split(text));
    };
    this.insertInLine=function(position,text){
        varstart=this.clippedPos(position.row,position.column);
        varend=this.pos(position.row,position.column+text.length);
        
        this.applyDelta({
            start:start,
            end:end,
            action:"insert",
            lines:[text]
        },true);
        
        returnthis.clonePos(end);
    };
    
    this.clippedPos=function(row,column){
        varlength=this.getLength();
        if(row===undefined){
            row=length;
        }elseif(row<0){
            row=0;
        }elseif(row>=length){
            row=length-1;
            column=undefined;
        }
        varline=this.getLine(row);
        if(column==undefined)
            column=line.length;
        column=Math.min(Math.max(column,0),line.length);
        return{row:row,column:column};
    };
    
    this.clonePos=function(pos){
        return{row:pos.row,column:pos.column};
    };
    
    this.pos=function(row,column){
        return{row:row,column:column};
    };
    
    this.$clipPosition=function(position){
        varlength=this.getLength();
        if(position.row>=length){
            position.row=Math.max(0,length-1);
            position.column=this.getLine(length-1).length;
        }else{
            position.row=Math.max(0,position.row);
            position.column=Math.min(Math.max(position.column,0),this.getLine(position.row).length);
        }
        returnposition;
    };
    this.insertFullLines=function(row,lines){
        row=Math.min(Math.max(row,0),this.getLength());
        varcolumn=0;
        if(row<this.getLength()){
            lines=lines.concat([""]);
            column=0;
        }else{
            lines=[""].concat(lines);
            row--;
            column=this.$lines[row].length;
        }
        this.insertMergedLines({row:row,column:column},lines);
    };   
    this.insertMergedLines=function(position,lines){
        varstart=this.clippedPos(position.row,position.column);
        varend={
            row:start.row+lines.length-1,
            column:(lines.length==1?start.column:0)+lines[lines.length-1].length
        };
        
        this.applyDelta({
            start:start,
            end:end,
            action:"insert",
            lines:lines
        });
        
        returnthis.clonePos(end);
    };
    this.remove=function(range){
        varstart=this.clippedPos(range.start.row,range.start.column);
        varend=this.clippedPos(range.end.row,range.end.column);
        this.applyDelta({
            start:start,
            end:end,
            action:"remove",
            lines:this.getLinesForRange({start:start,end:end})
        });
        returnthis.clonePos(start);
    };
    this.removeInLine=function(row,startColumn,endColumn){
        varstart=this.clippedPos(row,startColumn);
        varend=this.clippedPos(row,endColumn);
        
        this.applyDelta({
            start:start,
            end:end,
            action:"remove",
            lines:this.getLinesForRange({start:start,end:end})
        },true);
        
        returnthis.clonePos(start);
    };
    this.removeFullLines=function(firstRow,lastRow){
        firstRow=Math.min(Math.max(0,firstRow),this.getLength()-1);
        lastRow =Math.min(Math.max(0,lastRow),this.getLength()-1);
        vardeleteFirstNewLine=lastRow==this.getLength()-1&&firstRow>0;
        vardeleteLastNewLine =lastRow <this.getLength()-1;
        varstartRow=(deleteFirstNewLine?firstRow-1                 :firstRow                   );
        varstartCol=(deleteFirstNewLine?this.getLine(startRow).length:0                          );
        varendRow  =(deleteLastNewLine ?lastRow+1                  :lastRow                    );
        varendCol  =(deleteLastNewLine ?0                            :this.getLine(endRow).length);
        varrange=newRange(startRow,startCol,endRow,endCol);
        vardeletedLines=this.$lines.slice(firstRow,lastRow+1);
        
        this.applyDelta({
            start:range.start,
            end:range.end,
            action:"remove",
            lines:this.getLinesForRange(range)
        });
        returndeletedLines;
    };
    this.removeNewLine=function(row){
        if(row<this.getLength()-1&&row>=0){
            this.applyDelta({
                start:this.pos(row,this.getLine(row).length),
                end:this.pos(row+1,0),
                action:"remove",
                lines:["",""]
            });
        }
    };
    this.replace=function(range,text){
        if(!(rangeinstanceofRange))
            range=Range.fromPoints(range.start,range.end);
        if(text.length===0&&range.isEmpty())
            returnrange.start;
        if(text==this.getTextRange(range))
            returnrange.end;

        this.remove(range);
        varend;
        if(text){
            end=this.insert(range.start,text);
        }
        else{
            end=range.start;
        }
        
        returnend;
    };
    this.applyDeltas=function(deltas){
        for(vari=0;i<deltas.length;i++){
            this.applyDelta(deltas[i]);
        }
    };
    this.revertDeltas=function(deltas){
        for(vari=deltas.length-1;i>=0;i--){
            this.revertDelta(deltas[i]);
        }
    };
    this.applyDelta=function(delta,doNotValidate){
        varisInsert=delta.action=="insert";
        if(isInsert?delta.lines.length<=1&&!delta.lines[0]
            :!Range.comparePoints(delta.start,delta.end)){
            return;
        }
        
        if(isInsert&&delta.lines.length>20000)
            this.$splitAndapplyLargeDelta(delta,20000);
        applyDelta(this.$lines,delta,doNotValidate);
        this._signal("change",delta);
    };
    
    this.$splitAndapplyLargeDelta=function(delta,MAX){
        varlines=delta.lines;
        varl=lines.length;
        varrow=delta.start.row;
        varcolumn=delta.start.column;
        varfrom=0,to=0;
        do{
            from=to;
            to+=MAX-1;
            varchunk=lines.slice(from,to);
            if(to>l){
                delta.lines=chunk;
                delta.start.row=row+from;
                delta.start.column=column;
                break;
            }
            chunk.push("");
            this.applyDelta({
                start:this.pos(row+from,column),
                end:this.pos(row+to,column=0),
                action:delta.action,
                lines:chunk
            },true);
        }while(true);
    };
    this.revertDelta=function(delta){
        this.applyDelta({
            start:this.clonePos(delta.start),
            end:this.clonePos(delta.end),
            action:(delta.action=="insert"?"remove":"insert"),
            lines:delta.lines.slice()
        });
    };
    this.indexToPosition=function(index,startRow){
        varlines=this.$lines||this.getAllLines();
        varnewlineLength=this.getNewLineCharacter().length;
        for(vari=startRow||0,l=lines.length;i<l;i++){
            index-=lines[i].length+newlineLength;
            if(index<0)
                return{row:i,column:index+lines[i].length+newlineLength};
        }
        return{row:l-1,column:lines[l-1].length};
    };
    this.positionToIndex=function(pos,startRow){
        varlines=this.$lines||this.getAllLines();
        varnewlineLength=this.getNewLineCharacter().length;
        varindex=0;
        varrow=Math.min(pos.row,lines.length);
        for(vari=startRow||0;i<row;++i)
            index+=lines[i].length+newlineLength;

        returnindex+pos.column;
    };

}).call(Document.prototype);

exports.Document=Document;
});

define("ace/worker/mirror",["require","exports","module","ace/range","ace/document","ace/lib/lang"],function(require,exports,module){
"usestrict";

varRange=require("../range").Range;
varDocument=require("../document").Document;
varlang=require("../lib/lang");
    
varMirror=exports.Mirror=function(sender){
    this.sender=sender;
    vardoc=this.doc=newDocument("");
    
    vardeferredUpdate=this.deferredUpdate=lang.delayedCall(this.onUpdate.bind(this));
    
    var_self=this;
    sender.on("change",function(e){
        vardata=e.data;
        if(data[0].start){
            doc.applyDeltas(data);
        }else{
            for(vari=0;i<data.length;i+=2){
                if(Array.isArray(data[i+1])){
                    vard={action:"insert",start:data[i],lines:data[i+1]};
                }else{
                    vard={action:"remove",start:data[i],end:data[i+1]};
                }
                doc.applyDelta(d,true);
            }
        }
        if(_self.$timeout)
            returndeferredUpdate.schedule(_self.$timeout);
        _self.onUpdate();
    });
};

(function(){
    
    this.$timeout=500;
    
    this.setTimeout=function(timeout){
        this.$timeout=timeout;
    };
    
    this.setValue=function(value){
        this.doc.setValue(value);
        this.deferredUpdate.schedule(this.$timeout);
    };
    
    this.getValue=function(callbackId){
        this.sender.callback(this.doc.getValue(),callbackId);
    };
    
    this.onUpdate=function(){
    };
    
    this.isPending=function(){
        returnthis.deferredUpdate.isPending();
    };
    
}).call(Mirror.prototype);

});

define("ace/mode/xml/sax",["require","exports","module"],function(require,exports,module){
varnameStartChar=/[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]///\u10000-\uEFFFF
varnameChar=newRegExp("[\\-\\.0-9"+nameStartChar.source.slice(1,-1)+"\u00B7\u0300-\u036F\\ux203F-\u2040]");
vartagNamePattern=newRegExp('^'+nameStartChar.source+nameChar.source+'*(?:\:'+nameStartChar.source+nameChar.source+'*)?$');
varS_TAG=0;//tagnameofferring
varS_ATTR=1;//attrnameofferring
varS_ATTR_S=2;//attrnameendandspaceoffer
varS_EQ=3;//=space?
varS_V=4;//attrvalue(noquotvalueonly)
varS_E=5;//attrvalueendandnospace(quotend)
varS_S=6;//(attrvalueend||tagend)&&(spaceoffer)
varS_C=7;//closedel<el/>

functionXMLReader(){
	
}

XMLReader.prototype={
	parse:function(source,defaultNSMap,entityMap){
		vardomBuilder=this.domBuilder;
		domBuilder.startDocument();
		_copy(defaultNSMap,defaultNSMap={})
		parse(source,defaultNSMap,entityMap,
				domBuilder,this.errorHandler);
		domBuilder.endDocument();
	}
}
functionparse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){
  functionfixedFromCharCode(code){
		if(code>0xffff){
			code-=0x10000;
			varsurrogate1=0xd800+(code>>10)
				,surrogate2=0xdc00+(code&0x3ff);

			returnString.fromCharCode(surrogate1,surrogate2);
		}else{
			returnString.fromCharCode(code);
		}
	}
	functionentityReplacer(a){
		vark=a.slice(1,-1);
		if(kinentityMap){
			returnentityMap[k];
		}elseif(k.charAt(0)==='#'){
			returnfixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))
		}else{
			errorHandler.error('entitynotfound:'+a);
			returna;
		}
	}
	functionappendText(end){//hassomebugs
		varxt=source.substring(start,end).replace(/&#?\w+;/g,entityReplacer);
		locator&&position(start);
		domBuilder.characters(xt,0,end-start);
		start=end
	}
	functionposition(start,m){
		while(start>=endPos&&(m=linePattern.exec(source))){
			startPos=m.index;
			endPos=startPos+m[0].length;
			locator.lineNumber++;
		}
		locator.columnNumber=start-startPos+1;
	}
	varstartPos=0;
	varendPos=0;
	varlinePattern=/.+(?:\r\n?|\n)|.*$/g
	varlocator=domBuilder.locator;
	
	varparseStack=[{currentNSMap:defaultNSMapCopy}]
	varcloseMap={};
	varstart=0;
	while(true){
		vari=source.indexOf('<',start);
		if(i<0){
			if(!source.substr(start).match(/^\s*$/)){
				vardoc=domBuilder.document;
    			vartext=doc.createTextNode(source.substr(start));
    			doc.appendChild(text);
    			domBuilder.currentElement=text;
			}
			return;
		}
		if(i>start){
			appendText(i);
		}
		switch(source.charAt(i+1)){
		case'/':
			varend=source.indexOf('>',i+3);
			vartagName=source.substring(i+2,end);
			varconfig;
			if(parseStack.length>1){
				config=parseStack.pop();
			}else{
				errorHandler.fatalError("endtagnamenotfoundfor:"+tagName);
				break;
			}
			varlocalNSMap=config.localNSMap;
			
	       if(config.tagName!=tagName){
	           errorHandler.fatalError("endtagname:"+tagName+"doesnotmatchthecurrentstarttagName:"+config.tagName);
	       }
			domBuilder.endElement(config.uri,config.localName,tagName);
			if(localNSMap){
				for(varprefixinlocalNSMap){
					domBuilder.endPrefixMapping(prefix);
				}
			}
			end++;
			break;
		case'?'://<?...?>
			locator&&position(i);
			end=parseInstruction(source,i,domBuilder);
			break;
		case'!'://<!doctype,<![CDATA,<!--
			locator&&position(i);
			end=parseDCC(source,i,domBuilder,errorHandler);
			break;
		default:
			try{
				locator&&position(i);
				
				varel=newElementAttributes();
				varend=parseElementStartPart(source,i,el,entityReplacer,errorHandler);
				varlen=el.length;
				if(len&&locator){
					varbackup=copyLocator(locator,{});
					for(vari=0;i<len;i++){
						vara=el[i];
						position(a.offset);
						a.offset=copyLocator(locator,{});
					}
					copyLocator(backup,locator);
				}
				if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){
					el.closed=true;
					if(!entityMap.nbsp){
						errorHandler.warning('unclosedxmlattribute');
					}
				}
				appendElement(el,domBuilder,parseStack);
				
				
				if(el.uri==='http://www.w3.org/1999/xhtml'&&!el.closed){
					end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)
				}else{
					end++;
				}
			}catch(e){
				errorHandler.error('elementparseerror:'+e);
				end=-1;
			}

		}
		if(end<0){
			appendText(i+1);
		}else{
			start=end;
		}
	}
}
functioncopyLocator(f,t){
	t.lineNumber=f.lineNumber;
	t.columnNumber=f.columnNumber;
	returnt;
	
}
functionparseElementStartPart(source,start,el,entityReplacer,errorHandler){
	varattrName;
	varvalue;
	varp=++start;
	vars=S_TAG;//status
	while(true){
		varc=source.charAt(p);
		switch(c){
		case'=':
			if(s===S_ATTR){//attrName
				attrName=source.slice(start,p);
				s=S_EQ;
			}elseif(s===S_ATTR_S){
				s=S_EQ;
			}else{
				thrownewError('attributeequalmustafterattrName');
			}
			break;
		case'\'':
		case'"':
			if(s===S_EQ){//equal
				start=p+1;
				p=source.indexOf(c,start)
				if(p>0){
					value=source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);
					el.add(attrName,value,start-1);
					s=S_E;
				}else{
					thrownewError('attributevaluenoend\''+c+'\'match');
				}
			}elseif(s==S_V){
				value=source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);
				el.add(attrName,value,start);
				errorHandler.warning('attribute"'+attrName+'"missedstartquot('+c+')!!');
				start=p+1;
				s=S_E
			}else{
				thrownewError('attributevaluemustafter"="');
			}
			break;
		case'/':
			switch(s){
			caseS_TAG:
				el.setTagName(source.slice(start,p));
			caseS_E:
			caseS_S:
			caseS_C:
				s=S_C;
				el.closed=true;
			caseS_V:
			caseS_ATTR:
			caseS_ATTR_S:
				break;
			default:
				thrownewError("attributeinvalidclosechar('/')")
			}
			break;
		case''://enddocument
			errorHandler.error('unexpectedendofinput');
		case'>':
			switch(s){
			caseS_TAG:
				el.setTagName(source.slice(start,p));
			caseS_E:
			caseS_S:
			caseS_C:
				break;//normal
			caseS_V://Compatiblestate
			caseS_ATTR:
				value=source.slice(start,p);
				if(value.slice(-1)==='/'){
					el.closed =true;
					value=value.slice(0,-1)
				}
			caseS_ATTR_S:
				if(s===S_ATTR_S){
					value=attrName;
				}
				if(s==S_V){
					errorHandler.warning('attribute"'+value+'"missedquot(")!!');
					el.add(attrName,value.replace(/&#?\w+;/g,entityReplacer),start)
				}else{
					errorHandler.warning('attribute"'+value+'"missedvalue!!"'+value+'"instead!!')
					el.add(value,value,start)
				}
				break;
			caseS_EQ:
				thrownewError('attributevaluemissed!!');
			}
			returnp;
		case'\u0080':
			c='';
		default:
			if(c<=''){//space
				switch(s){
				caseS_TAG:
					el.setTagName(source.slice(start,p));//tagName
					s=S_S;
					break;
				caseS_ATTR:
					attrName=source.slice(start,p)
					s=S_ATTR_S;
					break;
				caseS_V:
					varvalue=source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);
					errorHandler.warning('attribute"'+value+'"missedquot(")!!');
					el.add(attrName,value,start)
				caseS_E:
					s=S_S;
					break;
				}
			}else{//notspace
				switch(s){
				caseS_ATTR_S:
					errorHandler.warning('attribute"'+attrName+'"missedvalue!!"'+attrName+'"instead!!')
					el.add(attrName,attrName,start);
					start=p;
					s=S_ATTR;
					break;
				caseS_E:
					errorHandler.warning('attributespaceisrequired"'+attrName+'"!!')
				caseS_S:
					s=S_ATTR;
					start=p;
					break;
				caseS_EQ:
					s=S_V;
					start=p;
					break;
				caseS_C:
					thrownewError("elementsclosedcharacter'/'and'>'mustbeconnectedto");
				}
			}
		}
		p++;
	}
}
functionappendElement(el,domBuilder,parseStack){
	vartagName=el.tagName;
	varlocalNSMap=null;
	varcurrentNSMap=parseStack[parseStack.length-1].currentNSMap;
	vari=el.length;
	while(i--){
		vara=el[i];
		varqName=a.qName;
		varvalue=a.value;
		varnsp=qName.indexOf(':');
		if(nsp>0){
			varprefix=a.prefix=qName.slice(0,nsp);
			varlocalName=qName.slice(nsp+1);
			varnsPrefix=prefix==='xmlns'&&localName
		}else{
			localName=qName;
			prefix=null
			nsPrefix=qName==='xmlns'&&''
		}
		a.localName=localName;
		if(nsPrefix!==false){//hack!!
			if(localNSMap==null){
				localNSMap={}
				_copy(currentNSMap,currentNSMap={})
			}
			currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;
			a.uri='http://www.w3.org/2000/xmlns/'
			domBuilder.startPrefixMapping(nsPrefix,value)
		}
	}
	vari=el.length;
	while(i--){
		a=el[i];
		varprefix=a.prefix;
		if(prefix){//noprefixattributehasnonamespace
			if(prefix==='xml'){
				a.uri='http://www.w3.org/XML/1998/namespace';
			}if(prefix!=='xmlns'){
				a.uri=currentNSMap[prefix]
			}
		}
	}
	varnsp=tagName.indexOf(':');
	if(nsp>0){
		prefix=el.prefix=tagName.slice(0,nsp);
		localName=el.localName=tagName.slice(nsp+1);
	}else{
		prefix=null;//important!!
		localName=el.localName=tagName;
	}
	varns=el.uri=currentNSMap[prefix||''];
	domBuilder.startElement(ns,localName,tagName,el);
	if(el.closed){
		domBuilder.endElement(ns,localName,tagName);
		if(localNSMap){
			for(prefixinlocalNSMap){
				domBuilder.endPrefixMapping(prefix)
			}
		}
	}else{
		el.currentNSMap=currentNSMap;
		el.localNSMap=localNSMap;
		parseStack.push(el);
	}
}
functionparseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){
	if(/^(?:script|textarea)$/i.test(tagName)){
		varelEndStart= source.indexOf('</'+tagName+'>',elStartEnd);
		vartext=source.substring(elStartEnd+1,elEndStart);
		if(/[&<]/.test(text)){
			if(/^script$/i.test(tagName)){
					domBuilder.characters(text,0,text.length);
					returnelEndStart;
			}//}else{//textarea
				text=text.replace(/&#?\w+;/g,entityReplacer);
				domBuilder.characters(text,0,text.length);
				returnelEndStart;
			
		}
	}
	returnelStartEnd+1;
}
functionfixSelfClosed(source,elStartEnd,tagName,closeMap){
	varpos=closeMap[tagName];
	if(pos==null){
		pos=closeMap[tagName]=source.lastIndexOf('</'+tagName+'>')
	}
	returnpos<elStartEnd;
}
function_copy(source,target){
	for(varninsource){target[n]=source[n]}
}
functionparseDCC(source,start,domBuilder,errorHandler){//surestartwith'<!'
	varnext=source.charAt(start+2)
	switch(next){
	case'-':
		if(source.charAt(start+3)==='-'){
			varend=source.indexOf('-->',start+4);
			if(end>start){
				domBuilder.comment(source,start+4,end-start-4);
				returnend+3;
			}else{
				errorHandler.error("Unclosedcomment");
				return-1;
			}
		}else{
			return-1;
		}
	default:
		if(source.substr(start+3,6)=='CDATA['){
			varend=source.indexOf(']]>',start+9);
			domBuilder.startCDATA();
			domBuilder.characters(source,start+9,end-start-9);
			domBuilder.endCDATA()
			returnend+3;
		}
		varmatchs=split(source,start);
		varlen=matchs.length;
		if(len>1&&/!doctype/i.test(matchs[0][0])){
			varname=matchs[1][0];
			varpubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0]
			varsysid=len>4&&matchs[4][0];
			varlastMatch=matchs[len-1]
			domBuilder.startDTD(name,pubid&&pubid.replace(/^(['"])(.*?)\1$/,'$2'),
					sysid&&sysid.replace(/^(['"])(.*?)\1$/,'$2'));
			domBuilder.endDTD();
			
			returnlastMatch.index+lastMatch[0].length
		}
	}
	return-1;
}



functionparseInstruction(source,start,domBuilder){
	varend=source.indexOf('?>',start);
	if(end){
		varmatch=source.substring(start,end).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
		if(match){
			varlen=match[0].length;
			domBuilder.processingInstruction(match[1],match[2]);
			returnend+2;
		}else{//error
			return-1;
		}
	}
	return-1;
}
functionElementAttributes(source){
	
}
ElementAttributes.prototype={
	setTagName:function(tagName){
		if(!tagNamePattern.test(tagName)){
			thrownewError('invalidtagName:'+tagName)
		}
		this.tagName=tagName
	},
	add:function(qName,value,offset){
		if(!tagNamePattern.test(qName)){
			thrownewError('invalidattribute:'+qName)
		}
		this[this.length++]={qName:qName,value:value,offset:offset}
	},
	length:0,
	getLocalName:function(i){returnthis[i].localName},
	getOffset:function(i){returnthis[i].offset},
	getQName:function(i){returnthis[i].qName},
	getURI:function(i){returnthis[i].uri},
	getValue:function(i){returnthis[i].value}
}




function_set_proto_(thiz,parent){
	thiz.__proto__=parent;
	returnthiz;
}
if(!(_set_proto_({},_set_proto_.prototype)instanceof_set_proto_)){
	_set_proto_=function(thiz,parent){
		functionp(){};
		p.prototype=parent;
		p=newp();
		for(parentinthiz){
			p[parent]=thiz[parent];
		}
		returnp;
	}
}

functionsplit(source,start){
	varmatch;
	varbuf=[];
	varreg=/'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
	reg.lastIndex=start;
	reg.exec(source);//skip<
	while(match=reg.exec(source)){
		buf.push(match);
		if(match[1])returnbuf;
	}
}

returnXMLReader;
});

define("ace/mode/xml/dom",["require","exports","module"],function(require,exports,module){

functioncopy(src,dest){
	for(varpinsrc){
		dest[p]=src[p];
	}
}
function_extends(Class,Super){
	varpt=Class.prototype;
	if(Object.create){
		varppt=Object.create(Super.prototype)
		pt.__proto__=ppt;
	}
	if(!(ptinstanceofSuper)){
		functiont(){};
		t.prototype=Super.prototype;
		t=newt();
		copy(pt,t);
		Class.prototype=pt=t;
	}
	if(pt.constructor!=Class){
		if(typeofClass!='function'){
			console.error("unknowClass:"+Class)
		}
		pt.constructor=Class
	}
}
varhtmlns='http://www.w3.org/1999/xhtml';
varNodeType={}
varELEMENT_NODE               =NodeType.ELEMENT_NODE               =1;
varATTRIBUTE_NODE             =NodeType.ATTRIBUTE_NODE             =2;
varTEXT_NODE                  =NodeType.TEXT_NODE                  =3;
varCDATA_SECTION_NODE         =NodeType.CDATA_SECTION_NODE         =4;
varENTITY_REFERENCE_NODE      =NodeType.ENTITY_REFERENCE_NODE      =5;
varENTITY_NODE                =NodeType.ENTITY_NODE                =6;
varPROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;
varCOMMENT_NODE               =NodeType.COMMENT_NODE               =8;
varDOCUMENT_NODE              =NodeType.DOCUMENT_NODE              =9;
varDOCUMENT_TYPE_NODE         =NodeType.DOCUMENT_TYPE_NODE         =10;
varDOCUMENT_FRAGMENT_NODE     =NodeType.DOCUMENT_FRAGMENT_NODE     =11;
varNOTATION_NODE              =NodeType.NOTATION_NODE              =12;
varExceptionCode={}
varExceptionMessage={};
varINDEX_SIZE_ERR             =ExceptionCode.INDEX_SIZE_ERR             =((ExceptionMessage[1]="Indexsizeerror"),1);
varDOMSTRING_SIZE_ERR         =ExceptionCode.DOMSTRING_SIZE_ERR         =((ExceptionMessage[2]="DOMStringsizeerror"),2);
varHIERARCHY_REQUEST_ERR      =ExceptionCode.HIERARCHY_REQUEST_ERR      =((ExceptionMessage[3]="Hierarchyrequesterror"),3);
varWRONG_DOCUMENT_ERR         =ExceptionCode.WRONG_DOCUMENT_ERR         =((ExceptionMessage[4]="Wrongdocument"),4);
varINVALID_CHARACTER_ERR      =ExceptionCode.INVALID_CHARACTER_ERR      =((ExceptionMessage[5]="Invalidcharacter"),5);
varNO_DATA_ALLOWED_ERR        =ExceptionCode.NO_DATA_ALLOWED_ERR        =((ExceptionMessage[6]="Nodataallowed"),6);
varNO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=((ExceptionMessage[7]="Nomodificationallowed"),7);
varNOT_FOUND_ERR              =ExceptionCode.NOT_FOUND_ERR              =((ExceptionMessage[8]="Notfound"),8);
varNOT_SUPPORTED_ERR          =ExceptionCode.NOT_SUPPORTED_ERR          =((ExceptionMessage[9]="Notsupported"),9);
varINUSE_ATTRIBUTE_ERR        =ExceptionCode.INUSE_ATTRIBUTE_ERR        =((ExceptionMessage[10]="Attributeinuse"),10);
varINVALID_STATE_ERR       	=ExceptionCode.INVALID_STATE_ERR       	=((ExceptionMessage[11]="Invalidstate"),11);
varSYNTAX_ERR              	=ExceptionCode.SYNTAX_ERR              	=((ExceptionMessage[12]="Syntaxerror"),12);
varINVALID_MODIFICATION_ERR	=ExceptionCode.INVALID_MODIFICATION_ERR	=((ExceptionMessage[13]="Invalidmodification"),13);
varNAMESPACE_ERR           	=ExceptionCode.NAMESPACE_ERR          	=((ExceptionMessage[14]="Invalidnamespace"),14);
varINVALID_ACCESS_ERR      	=ExceptionCode.INVALID_ACCESS_ERR     	=((ExceptionMessage[15]="Invalidaccess"),15);


functionDOMException(code,message){
	if(messageinstanceofError){
		varerror=message;
	}else{
		error=this;
		Error.call(this,ExceptionMessage[code]);
		this.message=ExceptionMessage[code];
		if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException);
	}
	error.code=code;
	if(message)this.message=this.message+":"+message;
	returnerror;
};
DOMException.prototype=Error.prototype;
copy(ExceptionCode,DOMException)
functionNodeList(){
};
NodeList.prototype={
	length:0,
	item:function(index){
		returnthis[index]||null;
	}
};
functionLiveNodeList(node,refresh){
	this._node=node;
	this._refresh=refresh
	_updateLiveList(this);
}
function_updateLiveList(list){
	varinc=list._node._inc||list._node.ownerDocument._inc;
	if(list._inc!=inc){
		varls=list._refresh(list._node);
		__set__(list,'length',ls.length);
		copy(ls,list);
		list._inc=inc;
	}
}
LiveNodeList.prototype.item=function(i){
	_updateLiveList(this);
	returnthis[i];
}

_extends(LiveNodeList,NodeList);
functionNamedNodeMap(){
};

function_findNodeIndex(list,node){
	vari=list.length;
	while(i--){
		if(list[i]===node){returni}
	}
}

function_addNamedNode(el,list,newAttr,oldAttr){
	if(oldAttr){
		list[_findNodeIndex(list,oldAttr)]=newAttr;
	}else{
		list[list.length++]=newAttr;
	}
	if(el){
		newAttr.ownerElement=el;
		vardoc=el.ownerDocument;
		if(doc){
			oldAttr&&_onRemoveAttribute(doc,el,oldAttr);
			_onAddAttribute(doc,el,newAttr);
		}
	}
}
function_removeNamedNode(el,list,attr){
	vari=_findNodeIndex(list,attr);
	if(i>=0){
		varlastIndex=list.length-1
		while(i<lastIndex){
			list[i]=list[++i]
		}
		list.length=lastIndex;
		if(el){
			vardoc=el.ownerDocument;
			if(doc){
				_onRemoveAttribute(doc,el,attr);
				attr.ownerElement=null;
			}
		}
	}else{
		thrownewDOMException(NOT_FOUND_ERR,newError())
	}
}
NamedNodeMap.prototype={
	length:0,
	item:NodeList.prototype.item,
	getNamedItem:function(key){
		vari=this.length;
		while(i--){
			varattr=this[i];
			if(attr.nodeName==key){
				returnattr;
			}
		}
	},
	setNamedItem:function(attr){
		varel=attr.ownerElement;
		if(el&&el!=this._ownerElement){
			thrownewDOMException(INUSE_ATTRIBUTE_ERR);
		}
		varoldAttr=this.getNamedItem(attr.nodeName);
		_addNamedNode(this._ownerElement,this,attr,oldAttr);
		returnoldAttr;
	},
	setNamedItemNS:function(attr){//raises:WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR
		varel=attr.ownerElement,oldAttr;
		if(el&&el!=this._ownerElement){
			thrownewDOMException(INUSE_ATTRIBUTE_ERR);
		}
		oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);
		_addNamedNode(this._ownerElement,this,attr,oldAttr);
		returnoldAttr;
	},
	removeNamedItem:function(key){
		varattr=this.getNamedItem(key);
		_removeNamedNode(this._ownerElement,this,attr);
		returnattr;
		
		
	},//raises:NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR
	removeNamedItemNS:function(namespaceURI,localName){
		varattr=this.getNamedItemNS(namespaceURI,localName);
		_removeNamedNode(this._ownerElement,this,attr);
		returnattr;
	},
	getNamedItemNS:function(namespaceURI,localName){
		vari=this.length;
		while(i--){
			varnode=this[i];
			if(node.localName==localName&&node.namespaceURI==namespaceURI){
				returnnode;
			}
		}
		returnnull;
	}
};
functionDOMImplementation(/*Object*/features){
	this._features={};
	if(features){
		for(varfeatureinfeatures){
			this._features=features[feature];
		}
	}
};

DOMImplementation.prototype={
	hasFeature:function(/*string*/feature,/*string*/version){
		varversions=this._features[feature.toLowerCase()];
		if(versions&&(!version||versioninversions)){
			returntrue;
		}else{
			returnfalse;
		}
	},
	createDocument:function(namespaceURI, qualifiedName,doctype){//raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR,WRONG_DOCUMENT_ERR
		vardoc=newDocument();
		doc.implementation=this;
		doc.childNodes=newNodeList();
		doc.doctype=doctype;
		if(doctype){
			doc.appendChild(doctype);
		}
		if(qualifiedName){
			varroot=doc.createElementNS(namespaceURI,qualifiedName);
			doc.appendChild(root);
		}
		returndoc;
	},
	createDocumentType:function(qualifiedName,publicId,systemId){//raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR
		varnode=newDocumentType();
		node.name=qualifiedName;
		node.nodeName=qualifiedName;
		node.publicId=publicId;
		node.systemId=systemId;
		returnnode;
	}
};

functionNode(){
};

Node.prototype={
	firstChild:null,
	lastChild:null,
	previousSibling:null,
	nextSibling:null,
	attributes:null,
	parentNode:null,
	childNodes:null,
	ownerDocument:null,
	nodeValue:null,
	namespaceURI:null,
	prefix:null,
	localName:null,
	insertBefore:function(newChild,refChild){//raises
		return_insertBefore(this,newChild,refChild);
	},
	replaceChild:function(newChild,oldChild){//raises
		this.insertBefore(newChild,oldChild);
		if(oldChild){
			this.removeChild(oldChild);
		}
	},
	removeChild:function(oldChild){
		return_removeChild(this,oldChild);
	},
	appendChild:function(newChild){
		returnthis.insertBefore(newChild,null);
	},
	hasChildNodes:function(){
		returnthis.firstChild!=null;
	},
	cloneNode:function(deep){
		returncloneNode(this.ownerDocument||this,this,deep);
	},
	normalize:function(){
		varchild=this.firstChild;
		while(child){
			varnext=child.nextSibling;
			if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){
				this.removeChild(next);
				child.appendData(next.data);
			}else{
				child.normalize();
				child=next;
			}
		}
	},
	isSupported:function(feature,version){
		returnthis.ownerDocument.implementation.hasFeature(feature,version);
	},
    hasAttributes:function(){
    	returnthis.attributes.length>0;
    },
    lookupPrefix:function(namespaceURI){
    	varel=this;
    	while(el){
    		varmap=el._nsMap;
    		if(map){
    			for(varninmap){
    				if(map[n]==namespaceURI){
    					returnn;
    				}
    			}
    		}
    		el=el.nodeType==2?el.ownerDocument:el.parentNode;
    	}
    	returnnull;
    },
    lookupNamespaceURI:function(prefix){
    	varel=this;
    	while(el){
    		varmap=el._nsMap;
    		if(map){
    			if(prefixinmap){
    				returnmap[prefix];
    			}
    		}
    		el=el.nodeType==2?el.ownerDocument:el.parentNode;
    	}
    	returnnull;
    },
    isDefaultNamespace:function(namespaceURI){
    	varprefix=this.lookupPrefix(namespaceURI);
    	returnprefix==null;
    }
};


function_xmlEncoder(c){
	returnc=='<'&&'&lt;'||
         c=='>'&&'&gt;'||
         c=='&'&&'&amp;'||
         c=='"'&&'&quot;'||
         '&#'+c.charCodeAt()+';'
}


copy(NodeType,Node);
copy(NodeType,Node.prototype);
function_visitNode(node,callback){
	if(callback(node)){
		returntrue;
	}
	if(node=node.firstChild){
		do{
			if(_visitNode(node,callback)){returntrue}
        }while(node=node.nextSibling)
    }
}



functionDocument(){
}
function_onAddAttribute(doc,el,newAttr){
	doc&&doc._inc++;
	varns=newAttr.namespaceURI;
	if(ns=='http://www.w3.org/2000/xmlns/'){
		el._nsMap[newAttr.prefix?newAttr.localName:'']=newAttr.value
	}
}
function_onRemoveAttribute(doc,el,newAttr,remove){
	doc&&doc._inc++;
	varns=newAttr.namespaceURI;
	if(ns=='http://www.w3.org/2000/xmlns/'){
		deleteel._nsMap[newAttr.prefix?newAttr.localName:'']
	}
}
function_onUpdateChild(doc,el,newChild){
	if(doc&&doc._inc){
		doc._inc++;
		varcs=el.childNodes;
		if(newChild){
			cs[cs.length++]=newChild;
		}else{
			varchild=el.firstChild;
			vari=0;
			while(child){
				cs[i++]=child;
				child=child.nextSibling;
			}
			cs.length=i;
		}
	}
}
function_removeChild(parentNode,child){
	varprevious=child.previousSibling;
	varnext=child.nextSibling;
	if(previous){
		previous.nextSibling=next;
	}else{
		parentNode.firstChild=next
	}
	if(next){
		next.previousSibling=previous;
	}else{
		parentNode.lastChild=previous;
	}
	_onUpdateChild(parentNode.ownerDocument,parentNode);
	returnchild;
}
function_insertBefore(parentNode,newChild,nextChild){
	varcp=newChild.parentNode;
	if(cp){
		cp.removeChild(newChild);//removeandupdate
	}
	if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){
		varnewFirst=newChild.firstChild;
		if(newFirst==null){
			returnnewChild;
		}
		varnewLast=newChild.lastChild;
	}else{
		newFirst=newLast=newChild;
	}
	varpre=nextChild?nextChild.previousSibling:parentNode.lastChild;

	newFirst.previousSibling=pre;
	newLast.nextSibling=nextChild;
	
	
	if(pre){
		pre.nextSibling=newFirst;
	}else{
		parentNode.firstChild=newFirst;
	}
	if(nextChild==null){
		parentNode.lastChild=newLast;
	}else{
		nextChild.previousSibling=newLast;
	}
	do{
		newFirst.parentNode=parentNode;
	}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling))
	_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);
	if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){
		newChild.firstChild=newChild.lastChild=null;
	}
	returnnewChild;
}
function_appendSingleChild(parentNode,newChild){
	varcp=newChild.parentNode;
	if(cp){
		varpre=parentNode.lastChild;
		cp.removeChild(newChild);//removeandupdate
		varpre=parentNode.lastChild;
	}
	varpre=parentNode.lastChild;
	newChild.parentNode=parentNode;
	newChild.previousSibling=pre;
	newChild.nextSibling=null;
	if(pre){
		pre.nextSibling=newChild;
	}else{
		parentNode.firstChild=newChild;
	}
	parentNode.lastChild=newChild;
	_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);
	returnnewChild;
}
Document.prototype={
	nodeName: '#document',
	nodeType: DOCUMENT_NODE,
	doctype: null,
	documentElement: null,
	_inc:1,
	
	insertBefore: function(newChild,refChild){//raises
		if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){
			varchild=newChild.firstChild;
			while(child){
				varnext=child.nextSibling;
				this.insertBefore(child,refChild);
				child=next;
			}
			returnnewChild;
		}
		if(this.documentElement==null&&newChild.nodeType==1){
			this.documentElement=newChild;
		}
		
		return_insertBefore(this,newChild,refChild),(newChild.ownerDocument=this),newChild;
	},
	removeChild: function(oldChild){
		if(this.documentElement==oldChild){
			this.documentElement=null;
		}
		return_removeChild(this,oldChild);
	},
	importNode:function(importedNode,deep){
		returnimportNode(this,importedNode,deep);
	},
	getElementById:	function(id){
		varrtv=null;
		_visitNode(this.documentElement,function(node){
			if(node.nodeType==1){
				if(node.getAttribute('id')==id){
					rtv=node;
					returntrue;
				}
			}
		})
		returnrtv;
	},
	createElement:	function(tagName){
		varnode=newElement();
		node.ownerDocument=this;
		node.nodeName=tagName;
		node.tagName=tagName;
		node.childNodes=newNodeList();
		varattrs	=node.attributes=newNamedNodeMap();
		attrs._ownerElement=node;
		returnnode;
	},
	createDocumentFragment:	function(){
		varnode=newDocumentFragment();
		node.ownerDocument=this;
		node.childNodes=newNodeList();
		returnnode;
	},
	createTextNode:	function(data){
		varnode=newText();
		node.ownerDocument=this;
		node.appendData(data)
		returnnode;
	},
	createComment:	function(data){
		varnode=newComment();
		node.ownerDocument=this;
		node.appendData(data)
		returnnode;
	},
	createCDATASection:	function(data){
		varnode=newCDATASection();
		node.ownerDocument=this;
		node.appendData(data)
		returnnode;
	},
	createProcessingInstruction:	function(target,data){
		varnode=newProcessingInstruction();
		node.ownerDocument=this;
		node.tagName=node.target=target;
		node.nodeValue=node.data=data;
		returnnode;
	},
	createAttribute:	function(name){
		varnode=newAttr();
		node.ownerDocument	=this;
		node.name=name;
		node.nodeName	=name;
		node.localName=name;
		node.specified=true;
		returnnode;
	},
	createEntityReference:	function(name){
		varnode=newEntityReference();
		node.ownerDocument	=this;
		node.nodeName	=name;
		returnnode;
	},
	createElementNS:	function(namespaceURI,qualifiedName){
		varnode=newElement();
		varpl=qualifiedName.split(':');
		varattrs	=node.attributes=newNamedNodeMap();
		node.childNodes=newNodeList();
		node.ownerDocument=this;
		node.nodeName=qualifiedName;
		node.tagName=qualifiedName;
		node.namespaceURI=namespaceURI;
		if(pl.length==2){
			node.prefix=pl[0];
			node.localName=pl[1];
		}else{
			node.localName=qualifiedName;
		}
		attrs._ownerElement=node;
		returnnode;
	},
	createAttributeNS:	function(namespaceURI,qualifiedName){
		varnode=newAttr();
		varpl=qualifiedName.split(':');
		node.ownerDocument=this;
		node.nodeName=qualifiedName;
		node.name=qualifiedName;
		node.namespaceURI=namespaceURI;
		node.specified=true;
		if(pl.length==2){
			node.prefix=pl[0];
			node.localName=pl[1];
		}else{
			node.localName=qualifiedName;
		}
		returnnode;
	}
};
_extends(Document,Node);


functionElement(){
	this._nsMap={};
};
Element.prototype={
	nodeType:ELEMENT_NODE,
	hasAttribute:function(name){
		returnthis.getAttributeNode(name)!=null;
	},
	getAttribute:function(name){
		varattr=this.getAttributeNode(name);
		returnattr&&attr.value||'';
	},
	getAttributeNode:function(name){
		returnthis.attributes.getNamedItem(name);
	},
	setAttribute:function(name,value){
		varattr=this.ownerDocument.createAttribute(name);
		attr.value=attr.nodeValue=""+value;
		this.setAttributeNode(attr)
	},
	removeAttribute:function(name){
		varattr=this.getAttributeNode(name)
		attr&&this.removeAttributeNode(attr);
	},
	appendChild:function(newChild){
		if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){
			returnthis.insertBefore(newChild,null);
		}else{
			return_appendSingleChild(this,newChild);
		}
	},
	setAttributeNode:function(newAttr){
		returnthis.attributes.setNamedItem(newAttr);
	},
	setAttributeNodeNS:function(newAttr){
		returnthis.attributes.setNamedItemNS(newAttr);
	},
	removeAttributeNode:function(oldAttr){
		returnthis.attributes.removeNamedItem(oldAttr.nodeName);
	},
	removeAttributeNS:function(namespaceURI,localName){
		varold=this.getAttributeNodeNS(namespaceURI,localName);
		old&&this.removeAttributeNode(old);
	},
	
	hasAttributeNS:function(namespaceURI,localName){
		returnthis.getAttributeNodeNS(namespaceURI,localName)!=null;
	},
	getAttributeNS:function(namespaceURI,localName){
		varattr=this.getAttributeNodeNS(namespaceURI,localName);
		returnattr&&attr.value||'';
	},
	setAttributeNS:function(namespaceURI,qualifiedName,value){
		varattr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);
		attr.value=attr.nodeValue=""+value;
		this.setAttributeNode(attr)
	},
	getAttributeNodeNS:function(namespaceURI,localName){
		returnthis.attributes.getNamedItemNS(namespaceURI,localName);
	},
	
	getElementsByTagName:function(tagName){
		returnnewLiveNodeList(this,function(base){
			varls=[];
			_visitNode(base,function(node){
				if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName==='*'||node.tagName==tagName)){
					ls.push(node);
				}
			});
			returnls;
		});
	},
	getElementsByTagNameNS:function(namespaceURI,localName){
		returnnewLiveNodeList(this,function(base){
			varls=[];
			_visitNode(base,function(node){
				if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI==='*'||node.namespaceURI===namespaceURI)&&(localName==='*'||node.localName==localName)){
					ls.push(node);
				}
			});
			returnls;
		});
	}
};
Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;
Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;


_extends(Element,Node);
functionAttr(){
};
Attr.prototype.nodeType=ATTRIBUTE_NODE;
_extends(Attr,Node);


functionCharacterData(){
};
CharacterData.prototype={
	data:'',
	substringData:function(offset,count){
		returnthis.data.substring(offset,offset+count);
	},
	appendData:function(text){
		text=this.data+text;
		this.nodeValue=this.data=text;
		this.length=text.length;
	},
	insertData:function(offset,text){
		this.replaceData(offset,0,text);
	
	},
	appendChild:function(newChild){
			thrownewError(ExceptionMessage[3])
		returnNode.prototype.appendChild.apply(this,arguments)
	},
	deleteData:function(offset,count){
		this.replaceData(offset,count,"");
	},
	replaceData:function(offset,count,text){
		varstart=this.data.substring(0,offset);
		varend=this.data.substring(offset+count);
		text=start+text+end;
		this.nodeValue=this.data=text;
		this.length=text.length;
	}
}
_extends(CharacterData,Node);
functionText(){
};
Text.prototype={
	nodeName:"#text",
	nodeType:TEXT_NODE,
	splitText:function(offset){
		vartext=this.data;
		varnewText=text.substring(offset);
		text=text.substring(0,offset);
		this.data=this.nodeValue=text;
		this.length=text.length;
		varnewNode=this.ownerDocument.createTextNode(newText);
		if(this.parentNode){
			this.parentNode.insertBefore(newNode,this.nextSibling);
		}
		returnnewNode;
	}
}
_extends(Text,CharacterData);
functionComment(){
};
Comment.prototype={
	nodeName:"#comment",
	nodeType:COMMENT_NODE
}
_extends(Comment,CharacterData);

functionCDATASection(){
};
CDATASection.prototype={
	nodeName:"#cdata-section",
	nodeType:CDATA_SECTION_NODE
}
_extends(CDATASection,CharacterData);


functionDocumentType(){
};
DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;
_extends(DocumentType,Node);

functionNotation(){
};
Notation.prototype.nodeType=NOTATION_NODE;
_extends(Notation,Node);

functionEntity(){
};
Entity.prototype.nodeType=ENTITY_NODE;
_extends(Entity,Node);

functionEntityReference(){
};
EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;
_extends(EntityReference,Node);

functionDocumentFragment(){
};
DocumentFragment.prototype.nodeName=	"#document-fragment";
DocumentFragment.prototype.nodeType=	DOCUMENT_FRAGMENT_NODE;
_extends(DocumentFragment,Node);


functionProcessingInstruction(){
}
ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;
_extends(ProcessingInstruction,Node);
functionXMLSerializer(){}
XMLSerializer.prototype.serializeToString=function(node){
	varbuf=[];
	serializeToString(node,buf);
	returnbuf.join('');
}
Node.prototype.toString=function(){
	returnXMLSerializer.prototype.serializeToString(this);
}
functionserializeToString(node,buf){
	switch(node.nodeType){
	caseELEMENT_NODE:
		varattrs=node.attributes;
		varlen=attrs.length;
		varchild=node.firstChild;
		varnodeName=node.tagName;
		varisHTML=htmlns===node.namespaceURI
		buf.push('<',nodeName);
		for(vari=0;i<len;i++){
			serializeToString(attrs.item(i),buf);
		}
		if(child||isHTML&&!/^(?:meta|link|img|br|hr|input|button)$/i.test(nodeName)){
			buf.push('>');
			if(isHTML&&/^script$/i.test(nodeName)){
				if(child){
					buf.push(child.data);
				}
			}else{
				while(child){
					serializeToString(child,buf);
					child=child.nextSibling;
				}
			}
			buf.push('</',nodeName,'>');
		}else{
			buf.push('/>');
		}
		return;
	caseDOCUMENT_NODE:
	caseDOCUMENT_FRAGMENT_NODE:
		varchild=node.firstChild;
		while(child){
			serializeToString(child,buf);
			child=child.nextSibling;
		}
		return;
	caseATTRIBUTE_NODE:
		returnbuf.push('',node.name,'="',node.value.replace(/[<&"]/g,_xmlEncoder),'"');
	caseTEXT_NODE:
		returnbuf.push(node.data.replace(/[<&]/g,_xmlEncoder));
	caseCDATA_SECTION_NODE:
		returnbuf.push('<![CDATA[',node.data,']]>');
	caseCOMMENT_NODE:
		returnbuf.push("<!--",node.data,"-->");
	caseDOCUMENT_TYPE_NODE:
		varpubid=node.publicId;
		varsysid=node.systemId;
		buf.push('<!DOCTYPE',node.name);
		if(pubid){
			buf.push('PUBLIC"',pubid);
			if(sysid&&sysid!='.'){
				buf.push('""',sysid);
			}
			buf.push('">');
		}elseif(sysid&&sysid!='.'){
			buf.push('SYSTEM"',sysid,'">');
		}else{
			varsub=node.internalSubset;
			if(sub){
				buf.push("[",sub,"]");
			}
			buf.push(">");
		}
		return;
	casePROCESSING_INSTRUCTION_NODE:
		returnbuf.push("<?",node.target,"",node.data,"?>");
	caseENTITY_REFERENCE_NODE:
		returnbuf.push('&',node.nodeName,';');
	default:
		buf.push('??',node.nodeName);
	}
}
functionimportNode(doc,node,deep){
	varnode2;
	switch(node.nodeType){
	caseELEMENT_NODE:
		node2=node.cloneNode(false);
		node2.ownerDocument=doc;
	caseDOCUMENT_FRAGMENT_NODE:
		break;
	caseATTRIBUTE_NODE:
		deep=true;
		break;
	}
	if(!node2){
		node2=node.cloneNode(false);//false
	}
	node2.ownerDocument=doc;
	node2.parentNode=null;
	if(deep){
		varchild=node.firstChild;
		while(child){
			node2.appendChild(importNode(doc,child,deep));
			child=child.nextSibling;
		}
	}
	returnnode2;
}
functioncloneNode(doc,node,deep){
	varnode2=newnode.constructor();
	for(varninnode){
		varv=node[n];
		if(typeofv!='object'){
			if(v!=node2[n]){
				node2[n]=v;
			}
		}
	}
	if(node.childNodes){
		node2.childNodes=newNodeList();
	}
	node2.ownerDocument=doc;
	switch(node2.nodeType){
	caseELEMENT_NODE:
		varattrs	=node.attributes;
		varattrs2	=node2.attributes=newNamedNodeMap();
		varlen=attrs.length
		attrs2._ownerElement=node2;
		for(vari=0;i<len;i++){
			node2.setAttributeNode(cloneNode(doc,attrs.item(i),true));
		}
		break;;
	caseATTRIBUTE_NODE:
		deep=true;
	}
	if(deep){
		varchild=node.firstChild;
		while(child){
			node2.appendChild(cloneNode(doc,child,deep));
			child=child.nextSibling;
		}
	}
	returnnode2;
}

function__set__(object,key,value){
	object[key]=value
}
try{
	if(Object.defineProperty){
		Object.defineProperty(LiveNodeList.prototype,'length',{
			get:function(){
				_updateLiveList(this);
				returnthis.$$length;
			}
		});
		Object.defineProperty(Node.prototype,'textContent',{
			get:function(){
				returngetTextContent(this);
			},
			set:function(data){
				switch(this.nodeType){
				case1:
				case11:
					while(this.firstChild){
						this.removeChild(this.firstChild);
					}
					if(data||String(data)){
						this.appendChild(this.ownerDocument.createTextNode(data));
					}
					break;
				default:
					this.data=data;
					this.value=value;
					this.nodeValue=data;
				}
			}
		})
		
		functiongetTextContent(node){
			switch(node.nodeType){
			case1:
			case11:
				varbuf=[];
				node=node.firstChild;
				while(node){
					if(node.nodeType!==7&&node.nodeType!==8){
						buf.push(getTextContent(node));
					}
					node=node.nextSibling;
				}
				returnbuf.join('');
			default:
				returnnode.nodeValue;
			}
		}
		__set__=function(object,key,value){
			object['$$'+key]=value
		}
	}
}catch(e){//ie8
}

returnDOMImplementation;
});

define("ace/mode/xml/dom-parser",["require","exports","module","ace/mode/xml/sax","ace/mode/xml/dom"],function(require,exports,module){
	'usestrict';

	varXMLReader=require('./sax'),
		DOMImplementation=require('./dom');

functionDOMParser(options){
	this.options=options||{locator:{}};
	
}
DOMParser.prototype.parseFromString=function(source,mimeType){	
	varoptions=this.options;
	varsax= newXMLReader();
	vardomBuilder=options.domBuilder||newDOMHandler();//contentHandlerandLexicalHandler
	varerrorHandler=options.errorHandler;
	varlocator=options.locator;
	vardefaultNSMap=options.xmlns||{};
	varentityMap={'lt':'<','gt':'>','amp':'&','quot':'"','apos':"'"}
	if(locator){
		domBuilder.setDocumentLocator(locator)
	}
	
	sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);
	sax.domBuilder=options.domBuilder||domBuilder;
	if(/\/x?html?$/.test(mimeType)){
		entityMap.nbsp='\xa0';
		entityMap.copy='\xa9';
		defaultNSMap['']='http://www.w3.org/1999/xhtml';
	}
	if(source){
		sax.parse(source,defaultNSMap,entityMap);
	}else{
		sax.errorHandler.error("invaliddocumentsource");
	}
	returndomBuilder.document;
}
functionbuildErrorHandler(errorImpl,domBuilder,locator){
	if(!errorImpl){
		if(domBuilderinstanceofDOMHandler){
			returndomBuilder;
		}
		errorImpl=domBuilder;
	}
	varerrorHandler={}
	varisCallback=errorImplinstanceofFunction;
	locator=locator||{}
	functionbuild(key){
		varfn=errorImpl[key];
		if(!fn){
			if(isCallback){
				fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl;
			}else{
				vari=arguments.length;
				while(--i){
					if(fn=errorImpl[arguments[i]]){
						break;
					}
				}
			}
		}
		errorHandler[key]=fn&&function(msg){
			fn(msg+_locator(locator),msg,locator);
		}||function(){};
	}
	build('warning','warn');
	build('error','warn','warning');
	build('fatalError','warn','warning','error');
	returnerrorHandler;
}
functionDOMHandler(){
    this.cdata=false;
}
functionposition(locator,node){
	node.lineNumber=locator.lineNumber;
	node.columnNumber=locator.columnNumber;
}
DOMHandler.prototype={
	startDocument:function(){
    	this.document=newDOMImplementation().createDocument(null,null,null);
    	if(this.locator){
        	this.document.documentURI=this.locator.systemId;
    	}
	},
	startElement:function(namespaceURI,localName,qName,attrs){
		vardoc=this.document;
	   varel=doc.createElementNS(namespaceURI,qName||localName);
	   varlen=attrs.length;
	   appendElement(this,el);
	   this.currentElement=el;
	   
		this.locator&&position(this.locator,el)
	   for(vari=0;i<len;i++){
	       varnamespaceURI=attrs.getURI(i);
	       varvalue=attrs.getValue(i);
	       varqName=attrs.getQName(i);
			varattr=doc.createAttributeNS(namespaceURI,qName);
			if(attr.getOffset){
				position(attr.getOffset(1),attr)
			}
			attr.value=attr.nodeValue=value;
			el.setAttributeNode(attr)
	   }
	},
	endElement:function(namespaceURI,localName,qName){
		varcurrent=this.currentElement
	   vartagName=current.tagName;
	   this.currentElement=current.parentNode;
	},
	startPrefixMapping:function(prefix,uri){
	},
	endPrefixMapping:function(prefix){
	},
	processingInstruction:function(target,data){
	   varins=this.document.createProcessingInstruction(target,data);
	   this.locator&&position(this.locator,ins)
	   appendElement(this,ins);
	},
	ignorableWhitespace:function(ch,start,length){
	},
	characters:function(chars,start,length){
		chars=_toString.apply(this,arguments)
		if(this.currentElement&&chars){
			if(this.cdata){
				varcharNode=this.document.createCDATASection(chars);
				this.currentElement.appendChild(charNode);
			}else{
				varcharNode=this.document.createTextNode(chars);
				this.currentElement.appendChild(charNode);
			}
			this.locator&&position(this.locator,charNode)
		}
	},
	skippedEntity:function(name){
	},
	endDocument:function(){
		this.document.normalize();
	},
	setDocumentLocator:function(locator){
	   if(this.locator=locator){//&&!('lineNumber'inlocator)){
	   	locator.lineNumber=0;
	   }
	},
	comment:function(chars,start,length){
		chars=_toString.apply(this,arguments)
	   varcomm=this.document.createComment(chars);
	   this.locator&&position(this.locator,comm)
	   appendElement(this,comm);
	},
	
	startCDATA:function(){
	   this.cdata=true;
	},
	endCDATA:function(){
	   this.cdata=false;
	},
	
	startDTD:function(name,publicId,systemId){
		varimpl=this.document.implementation;
	   if(impl&&impl.createDocumentType){
	       vardt=impl.createDocumentType(name,publicId,systemId);
	       this.locator&&position(this.locator,dt)
	       appendElement(this,dt);
	   }
	},
	warning:function(error){
		console.warn(error,_locator(this.locator));
	},
	error:function(error){
		console.error(error,_locator(this.locator));
	},
	fatalError:function(error){
		console.error(error,_locator(this.locator));
	   throwerror;
	}
}
function_locator(l){
	if(l){
		return'\n@'+(l.systemId||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'
	}
}
function_toString(chars,start,length){
	if(typeofchars=='string'){
		returnchars.substr(start,length)
	}else{//javasaxconnectwidthxmldomonrhino(whatabout:"?&&!(charsinstanceofString)")
		if(chars.length>=start+length||start){
			returnnewjava.lang.String(chars,start,length)+'';
		}
		returnchars;
	}
}
"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g,function(key){
	DOMHandler.prototype[key]=function(){returnnull}
})
functionappendElement(hander,node){
    if(!hander.currentElement){
        hander.document.appendChild(node);
    }else{
        hander.currentElement.appendChild(node);
    }
}//appendChildandsetAttributeNSarepreformancekey

return{
		DOMParser:DOMParser
	};
});

define("ace/mode/xml_worker",["require","exports","module","ace/lib/oop","ace/lib/lang","ace/worker/mirror","ace/mode/xml/dom-parser"],function(require,exports,module){
"usestrict";

varoop=require("../lib/oop");
varlang=require("../lib/lang");
varMirror=require("../worker/mirror").Mirror;
varDOMParser=require("./xml/dom-parser").DOMParser;

varWorker=exports.Worker=function(sender){
    Mirror.call(this,sender);
    this.setTimeout(400);
    this.context=null;
};

oop.inherits(Worker,Mirror);

(function(){

    this.setOptions=function(options){
        this.context=options.context;
    };

    this.onUpdate=function(){
        varvalue=this.doc.getValue();
        if(!value)
            return;
        varparser=newDOMParser();
        varerrors=[];
        parser.options.errorHandler={
            fatalError:function(fullMsg,errorMsg,locator){
                errors.push({
                    row:locator.lineNumber,
                    column:locator.columnNumber,
                    text:errorMsg,
                    type:"error"
                });
            },
            error:function(fullMsg,errorMsg,locator){
                errors.push({
                    row:locator.lineNumber,
                    column:locator.columnNumber,
                    text:errorMsg,
                    type:"error"
                });
            },
            warning:function(fullMsg,errorMsg,locator){
                errors.push({
                    row:locator.lineNumber,
                    column:locator.columnNumber,
                    text:errorMsg,
                    type:"warning"
                });
            }
        };
        
        parser.parseFromString(value);
        this.sender.emit("error",errors);
    };

}).call(Worker.prototype);

});

define("ace/lib/es5-shim",["require","exports","module"],function(require,exports,module){

functionEmpty(){}

if(!Function.prototype.bind){
    Function.prototype.bind=functionbind(that){//.lengthis1
        vartarget=this;
        if(typeoftarget!="function"){
            thrownewTypeError("Function.prototype.bindcalledonincompatible"+target);
        }
        varargs=slice.call(arguments,1);//fornormalcall
        varbound=function(){

            if(thisinstanceofbound){

                varresult=target.apply(
                    this,
                    args.concat(slice.call(arguments))
                );
                if(Object(result)===result){
                    returnresult;
                }
                returnthis;

            }else{
                returntarget.apply(
                    that,
                    args.concat(slice.call(arguments))
                );

            }

        };
        if(target.prototype){
            Empty.prototype=target.prototype;
            bound.prototype=newEmpty();
            Empty.prototype=null;
        }
        returnbound;
    };
}
varcall=Function.prototype.call;
varprototypeOfArray=Array.prototype;
varprototypeOfObject=Object.prototype;
varslice=prototypeOfArray.slice;
var_toString=call.bind(prototypeOfObject.toString);
varowns=call.bind(prototypeOfObject.hasOwnProperty);
vardefineGetter;
vardefineSetter;
varlookupGetter;
varlookupSetter;
varsupportsAccessors;
if((supportsAccessors=owns(prototypeOfObject,"__defineGetter__"))){
    defineGetter=call.bind(prototypeOfObject.__defineGetter__);
    defineSetter=call.bind(prototypeOfObject.__defineSetter__);
    lookupGetter=call.bind(prototypeOfObject.__lookupGetter__);
    lookupSetter=call.bind(prototypeOfObject.__lookupSetter__);
}
if([1,2].splice(0).length!=2){
    if(function(){//testIE<9tosplicebug-seeissue#138
        functionmakeArray(l){
            vara=newArray(l+2);
            a[0]=a[1]=0;
            returna;
        }
        vararray=[],lengthBefore;
        
        array.splice.apply(array,makeArray(20));
        array.splice.apply(array,makeArray(26));

        lengthBefore=array.length;//46
        array.splice(5,0,"XXX");//addoneelement

        lengthBefore+1==array.length

        if(lengthBefore+1==array.length){
            returntrue;//hasrightspliceimplementationwithoutbugs
        }
    }()){//IE6/7
        vararray_splice=Array.prototype.splice;
        Array.prototype.splice=function(start,deleteCount){
            if(!arguments.length){
                return[];
            }else{
                returnarray_splice.apply(this,[
                    start===void0?0:start,
                    deleteCount===void0?(this.length-start):deleteCount
                ].concat(slice.call(arguments,2)))
            }
        };
    }else{//IE8
        Array.prototype.splice=function(pos,removeCount){
            varlength=this.length;
            if(pos>0){
                if(pos>length)
                    pos=length;
            }elseif(pos==void0){
                pos=0;
            }elseif(pos<0){
                pos=Math.max(length+pos,0);
            }

            if(!(pos+removeCount<length))
                removeCount=length-pos;

            varremoved=this.slice(pos,pos+removeCount);
            varinsert=slice.call(arguments,2);
            varadd=insert.length;           
            if(pos===length){
                if(add){
                    this.push.apply(this,insert);
                }
            }else{
                varremove=Math.min(removeCount,length-pos);
                vartailOldPos=pos+remove;
                vartailNewPos=tailOldPos+add-remove;
                vartailCount=length-tailOldPos;
                varlengthAfterRemove=length-remove;

                if(tailNewPos<tailOldPos){//caseA
                    for(vari=0;i<tailCount;++i){
                        this[tailNewPos+i]=this[tailOldPos+i];
                    }
                }elseif(tailNewPos>tailOldPos){//caseB
                    for(i=tailCount;i--;){
                        this[tailNewPos+i]=this[tailOldPos+i];
                    }
                }//else,add==remove(nothingtodo)

                if(add&&pos===lengthAfterRemove){
                    this.length=lengthAfterRemove;//truncatearray
                    this.push.apply(this,insert);
                }else{
                    this.length=lengthAfterRemove+add;//reservesspace
                    for(i=0;i<add;++i){
                        this[pos+i]=insert[i];
                    }
                }
            }
            returnremoved;
        };
    }
}
if(!Array.isArray){
    Array.isArray=functionisArray(obj){
        return_toString(obj)=="[objectArray]";
    };
}
varboxedString=Object("a"),
    splitString=boxedString[0]!="a"||!(0inboxedString);

if(!Array.prototype.forEach){
    Array.prototype.forEach=functionforEach(fun/*,thisp*/){
        varobject=toObject(this),
            self=splitString&&_toString(this)=="[objectString]"?
                this.split(""):
                object,
            thisp=arguments[1],
            i=-1,
            length=self.length>>>0;
        if(_toString(fun)!="[objectFunction]"){
            thrownewTypeError();//TODOmessage
        }

        while(++i<length){
            if(iinself){
                fun.call(thisp,self[i],i,object);
            }
        }
    };
}
if(!Array.prototype.map){
    Array.prototype.map=functionmap(fun/*,thisp*/){
        varobject=toObject(this),
            self=splitString&&_toString(this)=="[objectString]"?
                this.split(""):
                object,
            length=self.length>>>0,
            result=Array(length),
            thisp=arguments[1];
        if(_toString(fun)!="[objectFunction]"){
            thrownewTypeError(fun+"isnotafunction");
        }

        for(vari=0;i<length;i++){
            if(iinself)
                result[i]=fun.call(thisp,self[i],i,object);
        }
        returnresult;
    };
}
if(!Array.prototype.filter){
    Array.prototype.filter=functionfilter(fun/*,thisp*/){
        varobject=toObject(this),
            self=splitString&&_toString(this)=="[objectString]"?
                this.split(""):
                    object,
            length=self.length>>>0,
            result=[],
            value,
            thisp=arguments[1];
        if(_toString(fun)!="[objectFunction]"){
            thrownewTypeError(fun+"isnotafunction");
        }

        for(vari=0;i<length;i++){
            if(iinself){
                value=self[i];
                if(fun.call(thisp,value,i,object)){
                    result.push(value);
                }
            }
        }
        returnresult;
    };
}
if(!Array.prototype.every){
    Array.prototype.every=functionevery(fun/*,thisp*/){
        varobject=toObject(this),
            self=splitString&&_toString(this)=="[objectString]"?
                this.split(""):
                object,
            length=self.length>>>0,
            thisp=arguments[1];
        if(_toString(fun)!="[objectFunction]"){
            thrownewTypeError(fun+"isnotafunction");
        }

        for(vari=0;i<length;i++){
            if(iinself&&!fun.call(thisp,self[i],i,object)){
                returnfalse;
            }
        }
        returntrue;
    };
}
if(!Array.prototype.some){
    Array.prototype.some=functionsome(fun/*,thisp*/){
        varobject=toObject(this),
            self=splitString&&_toString(this)=="[objectString]"?
                this.split(""):
                object,
            length=self.length>>>0,
            thisp=arguments[1];
        if(_toString(fun)!="[objectFunction]"){
            thrownewTypeError(fun+"isnotafunction");
        }

        for(vari=0;i<length;i++){
            if(iinself&&fun.call(thisp,self[i],i,object)){
                returntrue;
            }
        }
        returnfalse;
    };
}
if(!Array.prototype.reduce){
    Array.prototype.reduce=functionreduce(fun/*,initial*/){
        varobject=toObject(this),
            self=splitString&&_toString(this)=="[objectString]"?
                this.split(""):
                object,
            length=self.length>>>0;
        if(_toString(fun)!="[objectFunction]"){
            thrownewTypeError(fun+"isnotafunction");
        }
        if(!length&&arguments.length==1){
            thrownewTypeError("reduceofemptyarraywithnoinitialvalue");
        }

        vari=0;
        varresult;
        if(arguments.length>=2){
            result=arguments[1];
        }else{
            do{
                if(iinself){
                    result=self[i++];
                    break;
                }
                if(++i>=length){
                    thrownewTypeError("reduceofemptyarraywithnoinitialvalue");
                }
            }while(true);
        }

        for(;i<length;i++){
            if(iinself){
                result=fun.call(void0,result,self[i],i,object);
            }
        }

        returnresult;
    };
}
if(!Array.prototype.reduceRight){
    Array.prototype.reduceRight=functionreduceRight(fun/*,initial*/){
        varobject=toObject(this),
            self=splitString&&_toString(this)=="[objectString]"?
                this.split(""):
                object,
            length=self.length>>>0;
        if(_toString(fun)!="[objectFunction]"){
            thrownewTypeError(fun+"isnotafunction");
        }
        if(!length&&arguments.length==1){
            thrownewTypeError("reduceRightofemptyarraywithnoinitialvalue");
        }

        varresult,i=length-1;
        if(arguments.length>=2){
            result=arguments[1];
        }else{
            do{
                if(iinself){
                    result=self[i--];
                    break;
                }
                if(--i<0){
                    thrownewTypeError("reduceRightofemptyarraywithnoinitialvalue");
                }
            }while(true);
        }

        do{
            if(iinthis){
                result=fun.call(void0,result,self[i],i,object);
            }
        }while(i--);

        returnresult;
    };
}
if(!Array.prototype.indexOf||([0,1].indexOf(1,2)!=-1)){
    Array.prototype.indexOf=functionindexOf(sought/*,fromIndex*/){
        varself=splitString&&_toString(this)=="[objectString]"?
                this.split(""):
                toObject(this),
            length=self.length>>>0;

        if(!length){
            return-1;
        }

        vari=0;
        if(arguments.length>1){
            i=toInteger(arguments[1]);
        }
        i=i>=0?i:Math.max(0,length+i);
        for(;i<length;i++){
            if(iinself&&self[i]===sought){
                returni;
            }
        }
        return-1;
    };
}
if(!Array.prototype.lastIndexOf||([0,1].lastIndexOf(0,-3)!=-1)){
    Array.prototype.lastIndexOf=functionlastIndexOf(sought/*,fromIndex*/){
        varself=splitString&&_toString(this)=="[objectString]"?
                this.split(""):
                toObject(this),
            length=self.length>>>0;

        if(!length){
            return-1;
        }
        vari=length-1;
        if(arguments.length>1){
            i=Math.min(i,toInteger(arguments[1]));
        }
        i=i>=0?i:length-Math.abs(i);
        for(;i>=0;i--){
            if(iinself&&sought===self[i]){
                returni;
            }
        }
        return-1;
    };
}
if(!Object.getPrototypeOf){
    Object.getPrototypeOf=functiongetPrototypeOf(object){
        returnobject.__proto__||(
            object.constructor?
            object.constructor.prototype:
            prototypeOfObject
        );
    };
}
if(!Object.getOwnPropertyDescriptor){
    varERR_NON_OBJECT="Object.getOwnPropertyDescriptorcalledona"+
                         "non-object:";
    Object.getOwnPropertyDescriptor=functiongetOwnPropertyDescriptor(object,property){
        if((typeofobject!="object"&&typeofobject!="function")||object===null)
            thrownewTypeError(ERR_NON_OBJECT+object);
        if(!owns(object,property))
            return;

        vardescriptor,getter,setter;
        descriptor= {enumerable:true,configurable:true};
        if(supportsAccessors){
            varprototype=object.__proto__;
            object.__proto__=prototypeOfObject;

            vargetter=lookupGetter(object,property);
            varsetter=lookupSetter(object,property);
            object.__proto__=prototype;

            if(getter||setter){
                if(getter)descriptor.get=getter;
                if(setter)descriptor.set=setter;
                returndescriptor;
            }
        }
        descriptor.value=object[property];
        returndescriptor;
    };
}
if(!Object.getOwnPropertyNames){
    Object.getOwnPropertyNames=functiongetOwnPropertyNames(object){
        returnObject.keys(object);
    };
}
if(!Object.create){
    varcreateEmpty;
    if(Object.prototype.__proto__===null){
        createEmpty=function(){
            return{"__proto__":null};
        };
    }else{
        createEmpty=function(){
            varempty={};
            for(variinempty)
                empty[i]=null;
            empty.constructor=
            empty.hasOwnProperty=
            empty.propertyIsEnumerable=
            empty.isPrototypeOf=
            empty.toLocaleString=
            empty.toString=
            empty.valueOf=
            empty.__proto__=null;
            returnempty;
        }
    }

    Object.create=functioncreate(prototype,properties){
        varobject;
        if(prototype===null){
            object=createEmpty();
        }else{
            if(typeofprototype!="object")
                thrownewTypeError("typeofprototype["+(typeofprototype)+"]!='object'");
            varType=function(){};
            Type.prototype=prototype;
            object=newType();
            object.__proto__=prototype;
        }
        if(properties!==void0)
            Object.defineProperties(object,properties);
        returnobject;
    };
}

functiondoesDefinePropertyWork(object){
    try{
        Object.defineProperty(object,"sentinel",{});
        return"sentinel"inobject;
    }catch(exception){
    }
}
if(Object.defineProperty){
    vardefinePropertyWorksOnObject=doesDefinePropertyWork({});
    vardefinePropertyWorksOnDom=typeofdocument=="undefined"||
        doesDefinePropertyWork(document.createElement("div"));
    if(!definePropertyWorksOnObject||!definePropertyWorksOnDom){
        vardefinePropertyFallback=Object.defineProperty;
    }
}

if(!Object.defineProperty||definePropertyFallback){
    varERR_NON_OBJECT_DESCRIPTOR="Propertydescriptionmustbeanobject:";
    varERR_NON_OBJECT_TARGET="Object.definePropertycalledonnon-object:"
    varERR_ACCESSORS_NOT_SUPPORTED="getters&setterscannotbedefined"+
                                      "onthisjavascriptengine";

    Object.defineProperty=functiondefineProperty(object,property,descriptor){
        if((typeofobject!="object"&&typeofobject!="function")||object===null)
            thrownewTypeError(ERR_NON_OBJECT_TARGET+object);
        if((typeofdescriptor!="object"&&typeofdescriptor!="function")||descriptor===null)
            thrownewTypeError(ERR_NON_OBJECT_DESCRIPTOR+descriptor);
        if(definePropertyFallback){
            try{
                returndefinePropertyFallback.call(Object,object,property,descriptor);
            }catch(exception){
            }
        }
        if(owns(descriptor,"value")){

            if(supportsAccessors&&(lookupGetter(object,property)||
                                      lookupSetter(object,property)))
            {
                varprototype=object.__proto__;
                object.__proto__=prototypeOfObject;
                deleteobject[property];
                object[property]=descriptor.value;
                object.__proto__=prototype;
            }else{
                object[property]=descriptor.value;
            }
        }else{
            if(!supportsAccessors)
                thrownewTypeError(ERR_ACCESSORS_NOT_SUPPORTED);
            if(owns(descriptor,"get"))
                defineGetter(object,property,descriptor.get);
            if(owns(descriptor,"set"))
                defineSetter(object,property,descriptor.set);
        }

        returnobject;
    };
}
if(!Object.defineProperties){
    Object.defineProperties=functiondefineProperties(object,properties){
        for(varpropertyinproperties){
            if(owns(properties,property))
                Object.defineProperty(object,property,properties[property]);
        }
        returnobject;
    };
}
if(!Object.seal){
    Object.seal=functionseal(object){
        returnobject;
    };
}
if(!Object.freeze){
    Object.freeze=functionfreeze(object){
        returnobject;
    };
}
try{
    Object.freeze(function(){});
}catch(exception){
    Object.freeze=(functionfreeze(freezeObject){
        returnfunctionfreeze(object){
            if(typeofobject=="function"){
                returnobject;
            }else{
                returnfreezeObject(object);
            }
        };
    })(Object.freeze);
}
if(!Object.preventExtensions){
    Object.preventExtensions=functionpreventExtensions(object){
        returnobject;
    };
}
if(!Object.isSealed){
    Object.isSealed=functionisSealed(object){
        returnfalse;
    };
}
if(!Object.isFrozen){
    Object.isFrozen=functionisFrozen(object){
        returnfalse;
    };
}
if(!Object.isExtensible){
    Object.isExtensible=functionisExtensible(object){
        if(Object(object)===object){
            thrownewTypeError();//TODOmessage
        }
        varname='';
        while(owns(object,name)){
            name+='?';
        }
        object[name]=true;
        varreturnValue=owns(object,name);
        deleteobject[name];
        returnreturnValue;
    };
}
if(!Object.keys){
    varhasDontEnumBug=true,
        dontEnums=[
            "toString",
            "toLocaleString",
            "valueOf",
            "hasOwnProperty",
            "isPrototypeOf",
            "propertyIsEnumerable",
            "constructor"
        ],
        dontEnumsLength=dontEnums.length;

    for(varkeyin{"toString":null}){
        hasDontEnumBug=false;
    }

    Object.keys=functionkeys(object){

        if(
            (typeofobject!="object"&&typeofobject!="function")||
            object===null
        ){
            thrownewTypeError("Object.keyscalledonanon-object");
        }

        varkeys=[];
        for(varnameinobject){
            if(owns(object,name)){
                keys.push(name);
            }
        }

        if(hasDontEnumBug){
            for(vari=0,ii=dontEnumsLength;i<ii;i++){
                vardontEnum=dontEnums[i];
                if(owns(object,dontEnum)){
                    keys.push(dontEnum);
                }
            }
        }
        returnkeys;
    };

}
if(!Date.now){
    Date.now=functionnow(){
        returnnewDate().getTime();
    };
}
varws="\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003"+
    "\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028"+
    "\u2029\uFEFF";
if(!String.prototype.trim||ws.trim()){
    ws="["+ws+"]";
    vartrimBeginRegexp=newRegExp("^"+ws+ws+"*"),
        trimEndRegexp=newRegExp(ws+ws+"*$");
    String.prototype.trim=functiontrim(){
        returnString(this).replace(trimBeginRegexp,"").replace(trimEndRegexp,"");
    };
}

functiontoInteger(n){
    n=+n;
    if(n!==n){//isNaN
        n=0;
    }elseif(n!==0&&n!==(1/0)&&n!==-(1/0)){
        n=(n>0||-1)*Math.floor(Math.abs(n));
    }
    returnn;
}

functionisPrimitive(input){
    vartype=typeofinput;
    return(
        input===null||
        type==="undefined"||
        type==="boolean"||
        type==="number"||
        type==="string"
    );
}

functiontoPrimitive(input){
    varval,valueOf,toString;
    if(isPrimitive(input)){
        returninput;
    }
    valueOf=input.valueOf;
    if(typeofvalueOf==="function"){
        val=valueOf.call(input);
        if(isPrimitive(val)){
            returnval;
        }
    }
    toString=input.toString;
    if(typeoftoString==="function"){
        val=toString.call(input);
        if(isPrimitive(val)){
            returnval;
        }
    }
    thrownewTypeError();
}
vartoObject=function(o){
    if(o==null){//thismatchesbothnullandundefined
        thrownewTypeError("can'tconvert"+o+"toobject");
    }
    returnObject(o);
};

});
