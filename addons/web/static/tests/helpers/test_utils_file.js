flectra.define('web.test_utils_file',function(){
"usestrict";

/**
 *FILETestUtils
 *
 *Thismoduledefinesvariousutilityfunctionstohelpsimulateeventswith
 *files,suchasdrag-and-drop.
 *
 *Notethatallmethodsdefinedinthismoduleareexportedinthemain
 *testUtilsfile.
 */


//------------------------------------------------------------------------------
//Privatefunctions
//------------------------------------------------------------------------------

/**
 *Createafakeobject'dataTransfer',linkedtosomefiles,whichispassedto
 *draganddropevents.
 *
 *@param{Object[]}files
 *@returns{Object}
 */
function_createFakeDataTransfer(files){
    return{
        dropEffect:'all',
        effectAllowed:'all',
        files,
        getData:function(){
            returnfiles;
        },
        items:[],
        types:['Files'],
    };
}

//------------------------------------------------------------------------------
//Publicfunctions
//------------------------------------------------------------------------------

/**
 *Createafileobject,whichcanbeusedfordrag-and-drop.
 *
 *@param{Object}data
 *@param{string}data.name
 *@param{string}data.content
 *@param{string}data.contentType
 *@returns{Promise<Object>}resolvedwithfilecreated
 */
functioncreateFile(data){
    //Note:thisisonlysupportedbyChrome,anddoesnotworkinIncognitomode
    returnnewPromise(function(resolve,reject){
        varrequestFileSystem=window.requestFileSystem||window.webkitRequestFileSystem;
        if(!requestFileSystem){
            thrownewError('FileSystemAPIisnotsupported');
        }
        requestFileSystem(window.TEMPORARY,1024*1024,function(fileSystem){
            fileSystem.root.getFile(data.name,{create:true},function(fileEntry){
                fileEntry.createWriter(function(fileWriter){
                    fileWriter.onwriteend=function(e){
                        fileSystem.root.getFile(data.name,{},function(fileEntry){
                            fileEntry.file(function(file){
                                resolve(file);
                            });
                        });
                    };
                    fileWriter.write(newBlob([data.content],{type:data.contentType}));
                });
            });
        });
    });
}

/**
 *DragafileoveraDOMelement
 *
 *@param{$.Element}$el
 *@param{Object}filemusthavebeencreatedbeforehand(@seecreateFile)
 */
functiondragoverFile($el,file){
    varev=newEvent('dragover',{bubbles:true});
    Object.defineProperty(ev,'dataTransfer',{
        value:_createFakeDataTransfer(file),
    });
    $el[0].dispatchEvent(ev);
}

/**
 *DropafileonaDOMelement.
 *
 *@param{$.Element}$el
 *@param{Object}filemusthavebeencreatedbeforehand(@seecreateFile)
 */
functiondropFile($el,file){
    varev=newEvent('drop',{bubbles:true,});
    Object.defineProperty(ev,'dataTransfer',{
        value:_createFakeDataTransfer([file]),
    });
    $el[0].dispatchEvent(ev);
}

/**
 *DropsomefilesonaDOMelement.
 *
 *@param{$.Element}$el
 *@param{Object[]}filesmusthavebeencreatedbeforehand(@seecreateFile)
 */
functiondropFiles($el,files){
    varev=newEvent('drop',{bubbles:true,});
    Object.defineProperty(ev,'dataTransfer',{
        value:_createFakeDataTransfer(files),
    });
    $el[0].dispatchEvent(ev);
}

/**
 *Setfilesinafileinput
 *
 *@param{DOM.Element}el
 *@param{Object[]}filesmusthavebeencreatedbeforehand
 *  @seetestUtils.file.createFile
 */
functioninputFiles(el,files){
    //couldnotuse_createFakeDataTransferasel.filesassignationwillonly
    //workwitharealFileListobject.
    constdataTransfer=newwindow.DataTransfer();
    for(constfileoffiles){
        dataTransfer.items.add(file);
    }
    el.files=dataTransfer.files;
    /**
     *Changingfilesprogramaticallyisnotsupposedtotriggertheeventbut
     *itdoesinChromeversionsbefore73(whichisonrunbot),sointhat
     *casethereisnoneedtomakeamanualdispatch,becauseitwouldleadto
     *thefilesbeingaddedtwice.
     */
    constversionRaw=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);
    constchromeVersion=versionRaw?parseInt(versionRaw[2],10):false;
    if(!chromeVersion||chromeVersion>=73){
        el.dispatchEvent(newEvent('change'));
    }
}

//------------------------------------------------------------------------------
//ExposedAPI
//------------------------------------------------------------------------------

return{
    createFile:createFile,
    dragoverFile:dragoverFile,
    dropFile:dropFile,
    dropFiles,
    inputFiles,
};

});
