flectra.define('sale_stock.QtyAtDateWidget',function(require){
"usestrict";

varcore=require('web.core');
varQWeb=core.qweb;

varWidget=require('web.Widget');
varwidget_registry=require('web.widget_registry');
varutils=require('web.utils');

var_t=core._t;
vartime=require('web.time');

varQtyAtDateWidget=Widget.extend({
    template:'sale_stock.qtyAtDate',
    events:_.extend({},Widget.prototype.events,{
        'click.fa-area-chart':'_onClickButton',
    }),

    /**
     *@override
     *@param{Widget|null}parent
     *@param{Object}params
     */
    init:function(parent,params){
        this.data=params.data;
        this.fields=params.fields;
        this._updateData();
        this._super(parent);
    },

    start:function(){
        varself=this;
        returnthis._super.apply(this,arguments).then(function(){
            self._setPopOver();
        });
    },

    _updateData:function(){
        //addsomedatatosimplifythetemplate
        if(this.data.scheduled_date){
            //Thedigitinfoneedtogetfromfree_qty_todayinmaster(insteadofvirtual_available_at_date)
            varqty_considered=this.data.state==='sale'?this.data.free_qty_today:this.data.virtual_available_at_date;
            this.data.will_be_fulfilled=utils.round_decimals(qty_considered,this.fields.virtual_available_at_date.digits[1])>=utils.round_decimals(this.data.qty_to_deliver,this.fields.qty_to_deliver.digits[1]);
            this.data.will_be_late=this.data.forecast_expected_date&&this.data.forecast_expected_date>this.data.scheduled_date;
            if(['draft','sent'].includes(this.data.state)){
                //Movesaren'tcreatedyet,thentheforecastedisonlybasedonvirtual_availableofquant
                this.data.forecasted_issue=!this.data.will_be_fulfilled&&!this.data.is_mto;
            }else{
                //Movesarecreated,usingtheforecasteddataofrelatedmoves
                this.data.forecasted_issue=!this.data.will_be_fulfilled||this.data.will_be_late;
            }
        }
    },
    
    updateState:function(state){
        this.$el.popover('dispose');
        varcandidate=state.data[this.getParent().currentRow];
        if(candidate){
            this.data=candidate.data;
            this._updateData();
            this.renderElement();
            this._setPopOver();
        }
    },
    /**
     *Redirecttotheproductgraphview.
     *
     *@private
     *@param{MouseEvent}event
     *@returns{Promise}actionloaded
     */
    async_openForecast(ev){
        ev.stopPropagation();
        //TODO:incaseofkitproduct,theforecastviewshouldshowthekit'scomponents(get_component)
        //Theforecast_reportdoesn'tnotallowfornowmultipleproducts
        varaction=awaitthis._rpc({
            model:'product.product',
            method:'action_product_forecast_report',
            args:[[this.data.product_id.data.id]]
        });
        action.context={
            active_model:'product.product',
            active_id:this.data.product_id.data.id,
            warehouse:this.data.warehouse_id&&this.data.warehouse_id.res_id
        };
        returnthis.do_action(action);
    },

    _getContent(){
        if(!this.data.scheduled_date){
            return;
        }
        this.data.delivery_date=this.data.scheduled_date.clone().add(this.getSession().getTZOffset(this.data.scheduled_date),'minutes').format(time.getLangDateFormat());
        if(this.data.forecast_expected_date){
            this.data.forecast_expected_date_str=this.data.forecast_expected_date.clone().add(this.getSession().getTZOffset(this.data.forecast_expected_date),'minutes').format(time.getLangDateFormat());
        }
        const$content=$(QWeb.render('sale_stock.QtyDetailPopOver',{
            data:this.data,
        }));
        $content.on('click','.action_open_forecast',this._openForecast.bind(this));
        return$content;
    },
    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------
    /**
     *SetabootstrappopoveronthecurrentQtyAtDatewidgetthatdisplayavailable
     *quantity.
     */
    _setPopOver(){
        const$content=this._getContent();
        if(!$content){
            return;
        }
        constoptions={
            content:$content,
            html:true,
            placement:'left',
            title:_t('Availability'),
            trigger:'focus',
            delay:{'show':0,'hide':100},
        };
        this.$el.popover(options);
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------
    _onClickButton:function(){
        //Weaddthepropertyspecialclickonthewidgetlink.
        //Thishackallowsustotriggerthepopover(see_setPopOver)without
        //triggeringthe_onRowClickedthatopenstheorderlineformview.
        this.$el.find('.fa-area-chart').prop('special_click',true);
    },
});

widget_registry.add('qty_at_date_widget',QtyAtDateWidget);

returnQtyAtDateWidget;
});
