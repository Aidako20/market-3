flectra.define('mrp.mrp_bom_report',function(require){
'usestrict';

varcore=require('web.core');
varframework=require('web.framework');
varstock_report_generic=require('stock.stock_report_generic');

varQWeb=core.qweb;
var_t=core._t;

varMrpBomReport=stock_report_generic.extend({
    events:{
        'click.o_mrp_bom_unfoldable':'_onClickUnfold',
        'click.o_mrp_bom_foldable':'_onClickFold',
        'click.o_mrp_bom_action':'_onClickAction',
        'click.o_mrp_show_attachment_action':'_onClickShowAttachment',
    },
    get_html:function(){
        varself=this;
        varargs=[
            this.given_context.active_id,
            this.given_context.searchQty||false,
            this.given_context.searchVariant,
        ];
        returnthis._rpc({
                model:'report.mrp.report_bom_structure',
                method:'get_html',
                args:args,
                context:this.given_context,
            })
            .then(function(result){
                self.data=result;
                if(!self.given_context.searchVariant){
                    self.given_context.searchVariant=result.is_variant_applied&&Object.keys(result.variants)[0];
                }
            });
    },
    set_html:function(){
        varself=this;
        returnthis._super().then(function(){
            self.$('.o_content').html(self.data.lines);
            self.renderSearch();
            self.update_cp();
        });
    },
    render_html:function(event,$el,result){
        if(result.indexOf('mrp.document')>0){
            if(this.$('.o_mrp_has_attachments').length===0){
                varcolumn=$('<th/>',{
                    class:'o_mrp_has_attachments',
                    title:'FilesattachedtotheproductAttachments',
                    text:'Attachments',
                });
                this.$('tabletheadth:last-child').after(column);
            }
        }
        $el.after(result);
        $(event.currentTarget).toggleClass('o_mrp_bom_foldableo_mrp_bom_unfoldablefa-caret-rightfa-caret-down');
        this._reload_report_type();
    },
    get_bom:function(event){
      varself=this;
      var$parent=$(event.currentTarget).closest('tr');
      varactiveID=$parent.data('id');
      varproductID=$parent.data('product_id');
      varlineID=$parent.data('line');
      varqty=$parent.data('qty');
      varlevel=$parent.data('level')||0;
      returnthis._rpc({
              model:'report.mrp.report_bom_structure',
              method:'get_bom',
              args:[
                  activeID,
                  productID,
                  parseFloat(qty),
                  lineID,
                  level+1,
              ]
          })
          .then(function(result){
              self.render_html(event,$parent,result);
          });
    },
    get_operations:function(event){
      varself=this;
      var$parent=$(event.currentTarget).closest('tr');
      varactiveID=$parent.data('bom-id');
      varqty=$parent.data('qty');
      varlevel=$parent.data('level')||0;
      returnthis._rpc({
              model:'report.mrp.report_bom_structure',
              method:'get_operations',
              args:[
                  activeID,
                  parseFloat(qty),
                  level+1
              ]
          })
          .then(function(result){
              self.render_html(event,$parent,result);
          });
    },
    update_cp:function(){
        varstatus={
            cp_content:{
                $buttons:this.$buttonPrint,
                $searchview:this.$searchView
            },
        };
        returnthis.updateControlPanel(status);
    },
    renderSearch:function(){
        this.$buttonPrint=$(QWeb.render('mrp.button',{'is_variant_applied':this.data.is_variant_applied}));
        this.$buttonPrint.find('.o_mrp_bom_print').on('click',this._onClickPrint.bind(this));
        this.$buttonPrint.find('.o_mrp_bom_print_all_variants').on('click',this._onClickPrint.bind(this));
        this.$buttonPrint.find('.o_mrp_bom_print_unfolded').on('click',this._onClickPrint.bind(this));
        this.$searchView=$(QWeb.render('mrp.report_bom_search',_.omit(this.data,'lines')));
        this.$searchView.find('.o_mrp_bom_report_qty').on('change',this._onChangeQty.bind(this)).change();
        this.$searchView.find('.o_mrp_bom_report_variants').on('change',this._onChangeVariants.bind(this)).change();
        this.$searchView.find('.o_mrp_bom_report_type').on('change',this._onChangeType.bind(this));
    },
    _onClickPrint:function(ev){
        varchildBomIDs=_.map(this.$el.find('.o_mrp_bom_foldable').closest('tr'),function(el){
            return$(el).data('id');
        });
        framework.blockUI();
        varreportname='mrp.report_bom_structure?docids='+this.given_context.active_id+
                         '&report_type='+this.given_context.report_type+
                         '&quantity='+(this.given_context.searchQty||1);
        if(!$(ev.currentTarget).hasClass('o_mrp_bom_print_unfolded')){
            reportname+='&childs='+JSON.stringify(childBomIDs);
        }
        if($(ev.currentTarget).hasClass('o_mrp_bom_print_all_variants')){
            reportname+='&all_variants='+1;
        }elseif(this.given_context.searchVariant){
            reportname+='&variant='+this.given_context.searchVariant;
        }
        varaction={
            'type':'ir.actions.report',
            'report_type':'qweb-pdf',
            'report_name':reportname,
            'report_file':'mrp.report_bom_structure',
        };
        returnthis.do_action(action).then(function(){
            framework.unblockUI();
        });
    },
    _onChangeQty:function(ev){
        varqty=$(ev.currentTarget).val().trim();
        if(qty){
            this.given_context.searchQty=parseFloat(qty);
            this._reload();
        }
    },
    _onChangeType:function(ev){
        varreport_type=$("option:selected",$(ev.currentTarget)).data('type');
        this.given_context.report_type=report_type;
        this._reload_report_type();
    },
    _onChangeVariants:function(ev){
        this.given_context.searchVariant=$(ev.currentTarget).val();
        this._reload();
    },
    _onClickUnfold:function(ev){
        varredirect_function=$(ev.currentTarget).data('function');
        this[redirect_function](ev);
    },
    _onClickFold:function(ev){
        this._removeLines($(ev.currentTarget).closest('tr'));
        $(ev.currentTarget).toggleClass('o_mrp_bom_foldableo_mrp_bom_unfoldablefa-caret-rightfa-caret-down');
    },
    _onClickAction:function(ev){
        ev.preventDefault();
        returnthis.do_action({
            type:'ir.actions.act_window',
            res_model:$(ev.currentTarget).data('model'),
            res_id:$(ev.currentTarget).data('res-id'),
            context:{
                'active_id':$(ev.currentTarget).data('res-id')
            },
            views:[[false,'form']],
            target:'current'
        });
    },
    _onClickShowAttachment:function(ev){
        ev.preventDefault();
        varids=$(ev.currentTarget).data('res-id');
        returnthis.do_action({
            name:_t('Attachments'),
            type:'ir.actions.act_window',
            res_model:$(ev.currentTarget).data('model'),
            domain:[['id','in',ids]],
            views:[[false,'kanban'],[false,'list'],[false,'form']],
            view_mode:'kanban,list,form',
            target:'current',
        });
    },
    _reload:function(){
        varself=this;
        returnthis.get_html().then(function(){
            self.$('.o_content').html(self.data.lines);
            self._reload_report_type();
        });
    },
    _reload_report_type:function(){
        this.$('.o_mrp_bom_cost.o_hidden,.o_mrp_prod_cost.o_hidden').toggleClass('o_hidden');
        if(this.given_context.report_type==='bom_structure'){
           this.$('.o_mrp_bom_cost,.o_mrp_prod_cost').toggleClass('o_hidden');
        }
    },
    _removeLines:function($el){
        varself=this;
        varactiveID=$el.data('id');
        _.each(this.$('tr[parent_id='+activeID+']'),function(parent){
            var$parent=self.$(parent);
            var$el=self.$('tr[parent_id='+$parent.data('id')+']');
            if($el.length){
                self._removeLines($parent);
            }
            $parent.remove();
        });
    },
});

core.action_registry.add('mrp_bom_report',MrpBomReport);
returnMrpBomReport;

});
