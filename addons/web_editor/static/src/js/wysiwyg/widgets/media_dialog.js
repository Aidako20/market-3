flectra.define('wysiwyg.widgets.MediaDialog',function(require){
'usestrict';

varcore=require('web.core');
varMediaModules=require('wysiwyg.widgets.media');
varDialog=require('wysiwyg.widgets.Dialog');

var_t=core._t;

/**
 *Letstheuserselectamedia.Themediacanbeexistingornewlyuploaded.
 *
 *Themediacanbeoneofthefollowingtypes:image,document,videoor
 *fontawesomeicon(onlyexistingicons).
 *
 *Theusermaychangeamediaintoanotheronedependingonthegivenoptions.
 */
varMediaDialog=Dialog.extend({
    template:'wysiwyg.widgets.media',
    xmlDependencies:Dialog.prototype.xmlDependencies.concat(
        ['/web_editor/static/src/xml/wysiwyg.xml']
    ),
    events:_.extend({},Dialog.prototype.events,{
        'click#editor-media-image-tab':'_onClickImageTab',
        'click#editor-media-document-tab':'_onClickDocumentTab',
        'click#editor-media-icon-tab':'_onClickIconTab',
        'click#editor-media-video-tab':'_onClickVideoTab',
    }),
    custom_events:_.extend({},Dialog.prototype.custom_events||{},{
        save_request:'_onSaveRequest',
        show_parent_dialog_request:'_onShowRequest',
        hide_parent_dialog_request:'_onHideRequest',
    }),

    /**
     *@constructor
     *@param{Element}media
     */
    init:function(parent,options,media){
        var$media=$(media);
        media=$media[0];
        this.media=media;

        options=_.extend({},options);
        varonlyImages=options.onlyImages||this.multiImages||(media&&($media.parent().data('oeField')==='image'||$media.parent().data('oeType')==='image'));
        options.noDocuments=onlyImages||options.noDocuments;
        options.noIcons=onlyImages||options.noIcons;
        options.noVideos=onlyImages||options.noVideos;

        this._super(parent,_.extend({},{
            title:_t("SelectaMedia"),
            save_text:_t("Add"),
        },options));

        this.trigger_up('getRecordInfo',{
            recordInfo:options,
            type:'media',
            callback:function(recordInfo){
                _.defaults(options,recordInfo);
            },
        });

        if(!options.noImages){
            this.imageWidget=newMediaModules.ImageWidget(this,media,options);
        }
        if(!options.noDocuments){
            this.documentWidget=newMediaModules.DocumentWidget(this,media,options);
        }
        if(!options.noIcons){
            this.iconWidget=newMediaModules.IconWidget(this,media,options);
        }
        if(!options.noVideos){
            this.videoWidget=newMediaModules.VideoWidget(this,media,options);
        }

        if(this.imageWidget&&$media.is('img')){
            this.activeWidget=this.imageWidget;
        }elseif(this.documentWidget&&$media.is('a.o_image')){
            this.activeWidget=this.documentWidget;
        }elseif(this.videoWidget&&$media.is('.media_iframe_video,.o_bg_video_iframe')){
            this.activeWidget=this.videoWidget;
        }elseif(this.iconWidget&&$media.is('span,i')){
            this.activeWidget=this.iconWidget;
        }else{
            this.activeWidget=[this.imageWidget,this.documentWidget,this.videoWidget,this.iconWidget].find(w=>!!w);
        }
        this.initiallyActiveWidget=this.activeWidget;
    },
    /**
     *Addstheappropriateclasstothecurrentmodalandappendsthemedia
     *widgetstotheirrespectivetabs.
     *
     *@override
     */
    start:function(){
        varpromises=[this._super.apply(this,arguments)];
        this.$modal.find('.modal-dialog').addClass('o_select_media_dialog');

        if(this.imageWidget){
            promises.push(this.imageWidget.appendTo(this.$("#editor-media-image")));
        }
        if(this.documentWidget){
            promises.push(this.documentWidget.appendTo(this.$("#editor-media-document")));
        }
        if(this.iconWidget){
            promises.push(this.iconWidget.appendTo(this.$("#editor-media-icon")));
        }
        if(this.videoWidget){
            promises.push(this.videoWidget.appendTo(this.$("#editor-media-video")));
        }

        this.opened(()=>this.$('input.o_we_search:visible:first').focus());

        returnPromise.all(promises);
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *Returnswhetherthedocumentwidgetiscurrentlyactive.
     *
     *@returns{boolean}
     */
    isDocumentActive:function(){
        returnthis.activeWidget===this.documentWidget;
    },
    /**
     *Returnswhethertheiconwidgetiscurrentlyactive.
     *
     *@returns{boolean}
     */
    isIconActive:function(){
        returnthis.activeWidget===this.iconWidget;
    },
    /**
     *Returnswhethertheimagewidgetiscurrentlyactive.
     *
     *@returns{boolean}
     */
    isImageActive:function(){
        returnthis.activeWidget===this.imageWidget;
    },
    /**
     *Returnswhetherthevideowidgetiscurrentlyactive.
     *
     *@returns{boolean}
     */
    isVideoActive:function(){
        returnthis.activeWidget===this.videoWidget;
    },
    /**
     *Savesthecurrentlyselectedmediafromthecurrentlyactivewidget.
     *
     *Thesaveeventdata`final_data`willbeoneElementingeneral,butit
     *willbeanArrayofElementif`multiImages`isset.
     *
     *@override
     */
    save:function(){
        varself=this;
        var_super=this._super;
        varargs=arguments;
        returnthis.activeWidget.save().then(function(data){
            if(self.activeWidget.error){
                self.displayNotification({
                    type:'danger',
                    message:self.activeWidget.error,
                });
                return;
            }
            if(self.activeWidget!==self.initiallyActiveWidget){
                self._clearWidgets();
            }
            //Restoreclassesifthemediawasreplaced(whenchangingtype)
            if(self.media!==data){
                varoldClasses=self.media&&_.toArray(self.media.classList);
                if(oldClasses){
                    data.className=_.union(_.toArray(data.classList),oldClasses).join('');
                }
            }
            self.final_data=data;
            _super.apply(self,args);
            $(data).trigger('content_changed');
        });
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *CallclearonallthewidgetsexcepttheactiveWidget.
     *Weclearbecauseeverywidgetsaremodifyingthe"media"element.
     *Allwidgethavetheresponsibilitytoclearapreviouselementthat
     *wascreatedfromthem.
     */
    _clearWidgets:function(){
        [  this.imageWidget,
            this.documentWidget,
            this.iconWidget,
            this.videoWidget
        ].forEach((widget)=>{
            if(widget!==this.activeWidget){
                widget&&widget.clear();
            }
        });
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *Setsthedocumentwidgetastheactivewidget.
     *
     *@private
     */
    _onClickDocumentTab:function(){
        this.activeWidget=this.documentWidget;
    },
    /**
     *Setstheiconwidgetastheactivewidget.
     *
     *@private
     */
    _onClickIconTab:function(){
        this.activeWidget=this.iconWidget;
    },
    /**
     *Setstheimagewidgetastheactivewidget.
     *
     *@private
     */
    _onClickImageTab:function(){
        this.activeWidget=this.imageWidget;
    },
    /**
     *Setsthevideowidgetastheactivewidget.
     *
     *@private
     */
    _onClickVideoTab:function(){
        this.activeWidget=this.videoWidget;
    },
    /**
     *Handleshiderequestfromchildwidgets.
     *
     *Thisisforusability,toallowhidingthemodalforexamplewhenanother
     *smallermodalwouldbedisplayedontop.
     *
     *@private
     *@param{FlectraEvent}ev
     */
    _onHideRequest:function(ev){
        this.$modal.addClass('d-none');
    },
    /**
     *Handlessaverequestfromthechildwidgets.
     *
     *Thisisforusability,toallowtheusertosavefromotherwaysthan
     *clickonthemodalbutton,suchasdoubleclickingamediatoselectit.
     *
     *@private
     *@param{FlectraEvent}ev
     */
    _onSaveRequest:function(ev){
        ev.stopPropagation();
        this.save();
    },
    /**
     *Handlesshowrequestfromthechildwidgets.
     *
     *Thisisforusability,itisthecounterpartof@see_onHideRequest.
     *
     *@private
     *@param{FlectraEvent}ev
     */
    _onShowRequest:function(ev){
        this.$modal.removeClass('d-none');
    },
});

returnMediaDialog;
});
