flectra.define('wysiwyg.widgets.LinkDialog',function(require){
'usestrict';

varcore=require('web.core');
varDialog=require('wysiwyg.widgets.Dialog');

vardom=$.summernote.core.dom;
varrange=$.summernote.core.range;

var_t=core._t;

/**
 *Allowstocustomizelinkcontentandstyle.
 */
varLinkDialog=Dialog.extend({
    template:'wysiwyg.widgets.link',
    xmlDependencies:(Dialog.prototype.xmlDependencies||[]).concat([
        '/web_editor/static/src/xml/wysiwyg.xml'
    ]),
    events:_.extend({},Dialog.prototype.events||{},{
        'input':'_onAnyChange',
        'change[name="link_style_color"]':'_onTypeChange',
        'change':'_onAnyChange',
        'inputinput[name="url"]':'_onURLInput',
    }),

    /**
     *@constructor
     *@param{Boolean}linkInfo.isButton-whetherifthetargetisabuttonelement.
     */
    init:function(parent,options,editable,linkInfo){
        this.options=options||{};
        this._super(parent,_.extend({
            title:_t("Linkto"),
        },this.options));

        this.trigger_up('getRecordInfo',{
            recordInfo:this.options,
            callback:recordInfo=>{
                _.defaults(this.options,recordInfo);
            },
        });

        this.data=linkInfo||{};
        this.isButton=this.data.isButton;
        constisButtonLink=this.isButton||(this.data.range&&this.data.range.isOnAnchor()&&this.data.className.includes("btn-link"));
        //Usingexplicittype'link'topreservestylewhenthetargetis<buttonclass="...btn-link"/>.
        this.colorsData=[
            {type:isButtonLink?'link':'',label:_t("Link"),btnPreview:'link'},
            {type:'primary',label:_t("Primary"),btnPreview:'primary'},
            {type:'secondary',label:_t("Secondary"),btnPreview:'secondary'},
            //Note:bycompatibilitythedialogshouldbeabletoremoveold
            //colorsthatweresuggestedliketheBSstatuscolorsorthe
            //alpha->epsilonclasses.Thisiscurrentlydonebyremoving
            //allbtn-*classesanyway.
        ];

        this.editable=editable;
        this.data.className="";
        this.data.iniClassName="";

        varr=this.data.range;
        this.needLabel=!r||(r.sc===r.ec&&r.so===r.eo);

        if(this.data.range){
            const$el=$(this.data.range.sc).filter(this.isButton?"button":"a");
            this.data.iniClassName=$el.attr("class")||"";
            this.colorCombinationClass=false;
            let$node=$el;
            while($node.length&&!$node.is('body')){
                constclassName=$node.attr('class')||'';
                constm=className.match(/\b(o_cc\d+)\b/g);
                if(m){
                    this.colorCombinationClass=m[0];
                    break;
                }
                $node=$node.parent();
            }
            this.data.className=this.data.iniClassName.replace(/(^|\s+)btn(-[a-z0-9_-]*)?/gi,'');

            varis_link=this.data.range.isOnAnchor();

            varsc=r.sc;
            varso=r.so;
            varec=r.ec;
            vareo=r.eo;

            varnodes;
            if(!is_link){
                if(sc.tagName){
                    sc=dom.firstChild(so?sc.childNodes[so]:sc);
                    so=0;
                }elseif(so!==sc.textContent.length){
                    if(sc===ec){
                        ec=sc=sc.splitText(so);
                        eo-=so;
                    }else{
                        sc=sc.splitText(so);
                    }
                    so=0;
                }
                if(ec.tagName){
                    ec=dom.lastChild(eo?ec.childNodes[eo-1]:ec);
                    eo=ec.textContent.length;
                }elseif(eo!==ec.textContent.length){
                    ec.splitText(eo);
                }

                nodes=dom.listBetween(sc,ec);

                //browserscan'ttargetapictureorvoidnode
                if(dom.isVoid(sc)||dom.isImg(sc)){
                    so=dom.listPrev(sc).length-1;
                    sc=sc.parentNode;
                }
                if(dom.isBR(ec)){
                    eo=dom.listPrev(ec).length-1;
                    ec=ec.parentNode;
                }elseif(dom.isVoid(ec)||dom.isImg(sc)){
                    eo=dom.listPrev(ec).length;
                    ec=ec.parentNode;
                }

                this.data.range=range.create(sc,so,ec,eo);
                $(editable).data("range",this.data.range);
                this.data.range.select();
            }else{
                nodes=dom.ancestor(sc,dom.isAnchor).childNodes;
            }

            if(dom.isImg(sc)&&nodes.indexOf(sc)===-1){
                nodes.push(sc);
            }
            if(nodes.length>1||dom.ancestor(nodes[0],dom.isImg)){
                vartext="";
                this.data.images=[];
                for(vari=0;i<nodes.length;i++){
                    if(dom.ancestor(nodes[i],dom.isImg)){
                        this.data.images.push(dom.ancestor(nodes[i],dom.isImg));
                        text+='[IMG]';
                    }elseif(!is_link&&nodes[i].nodeType===1){
                        //justusetextnodesfromlistBetween
                    }elseif(!is_link&&i===0){
                        text+=nodes[i].textContent.slice(so,Infinity);
                    }elseif(!is_link&&i===nodes.length-1){
                        text+=nodes[i].textContent.slice(0,eo);
                    }else{
                        text+=nodes[i].textContent;
                    }
                }
                this.data.text=text;
            }
        }

        this.data.text=this.data.text.replace(/[\t\r\n]+/g,'');

        varallBtnClassSuffixes=/(^|\s+)btn(-[a-z0-9_-]*)?/gi;
        varallBtnShapes=/\s*(rounded-circle|flat)\s*/gi;
        this.data.className=this.data.iniClassName
            .replace(allBtnClassSuffixes,'')
            .replace(allBtnShapes,'');
        //'o_submit'classwillforceanchortobehandledasabuttoninlinkdialog.
        if(/(?:s_website_form_send|o_submit)/.test(this.data.className)){
            this.isButton=true;
        }
    },
    /**
     *@override
     */
    start:function(){
        this.buttonOptsCollapseEl=this.el.querySelector('#o_link_dialog_button_opts_collapse');

        this.$styleInputs=this.$('input.link-style');
        this.$styleInputs.prop('checked',false).filter('[value=""]').prop('checked',true);
        if(this.data.iniClassName){
            _.each(this.$('input[name="link_style_color"],select[name="link_style_size"]>option,select[name="link_style_shape"]>option'),el=>{
                const$option=$(el);
                constvalue=$option.val();
                if(!value){
                    return;
                }
                constsubValues=value.split(',');
                letactive=true;
                for(leti=0;i<subValues.length;i++){
                    constclassPrefix=newRegExp('(^|btn-||btn-outline-|btn-fill-)'+subValues[i]);
                    active=active&&classPrefix.test(this.data.iniClassName);
                }
                if(active){
                    if($option.is("input")){
                        $option.prop("checked",true);
                    }else{
                        $option.parent().find('option').removeAttr('selected').removeProp('selected');
                        $option.parent().val($option.val());
                        $option.attr('selected','selected').prop('selected','selected');
                    }
                }
            });
        }
        if(this.data.url){
            varmatch=/mailto:(.+)/.exec(this.data.url);
            this.$('input[name="url"]').val(match?match[1]:this.data.url);
            this._onURLInput();
        }

        this._updateOptionsUI();
        this._adaptPreview();

        this.$('input:visible:first').focus();

        returnthis._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    save:function(){
        vardata=this._getData();
        if(data===null){
            var$url=this.$('input[name="url"]');
            $url.closest('.form-group').addClass('o_has_error').find('.form-control,.custom-select').addClass('is-invalid');
            $url.focus();
            returnPromise.reject();
        }
        this.data.text=data.label;
        this.data.url=data.url;
        varallWhitespace=/\s+/gi;
        varallStartAndEndSpace=/^\s+|\s+$/gi;
        varallBtnTypes=/(^|[])(btn-secondary|btn-success|btn-primary|btn-info|btn-warning|btn-danger)([]|$)/gi;
        this.data.className=data.classes.replace(allWhitespace,'').replace(allStartAndEndSpace,'');
        if(data.classes.replace(allBtnTypes,'')){
            this.data.style={
                'background-color':'',
                'color':'',
            };
        }
        this.data.isNewWindow=data.isNewWindow;
        this.final_data=this.data;
        returnthis._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *Adaptthelinkpreviewtochanges.
     *
     *@private
     */
    _adaptPreview:function(){
        vardata=this._getData();
        if(data===null){
            return;
        }
        constattrs={
            target:data.isNewWindow?'_blank':'',
            href:data.url&&data.url.length?data.url:'#',
            class:`${data.classes.replace(/float-\w+/,'')}o_btn_preview`,
        };
        this.$("#link-preview").attr(attrs).html((data.label&&data.label.length)?data.label:data.url);
    },
    /**
     *Getthelink'sdata(url,labelandstyles).
     *
     *@private
     *@returns{Object}{label:String,url:String,classes:String,isNewWindow:Boolean}
     */
    _getData:function(){
        var$url=this.$('input[name="url"]');
        varurl=$url.val();
        varlabel=_.escape(this.$('input[name="label"]').val()||url);

        if(label&&this.data.images){
            for(vari=0;i<this.data.images.length;i++){
                label=label.replace(/\[IMG\]/,this.data.images[i].outerHTML);
            }
        }

        if(!this.isButton&&$url.prop('required')&&(!url||!$url[0].checkValidity())){
            returnnull;
        }

        consttype=this.$('input[name="link_style_color"]:checked').val()||'';
        constsize=this.$('select[name="link_style_size"]').val()||'';
        constshape=this.$('select[name="link_style_shape"]').val()||'';
        constshapes=shape?shape.split(','):[];
        conststyle=['outline','fill'].includes(shapes[0])?`${shapes[0]}-`:'';
        constshapeClasses=shapes.slice(style?1:0).join('');
        constclasses=(this.data.className||'')+
            (type?(`btnbtn-${style}${type}`):'')+
            (shapeClasses?(`${shapeClasses}`):'')+
            (size?('btn-'+size):'');
        varisNewWindow=this.$('input[name="is_new_window"]').prop('checked');
        if(url.indexOf('@')>=0&&url.indexOf('mailto:')<0&&!url.match(/^http[s]?/i)){
            url=('mailto:'+url);
        }elseif(url.indexOf(location.origin)===0&&this.$('#o_link_dialog_url_strip_domain').prop("checked")){
            url=url.slice(location.origin.length);
        }
        varallWhitespace=/\s+/gi;
        varallStartAndEndSpace=/^\s+|\s+$/gi;
        return{
            label:label,
            url:url,
            classes:classes.replace(allWhitespace,'').replace(allStartAndEndSpace,''),
            isNewWindow:isNewWindow,
        };
    },
    /**
     *@private
     */
    _updateOptionsUI:function(){
        constel=this.el.querySelector('[name="link_style_color"]:checked');
        $(this.buttonOptsCollapseEl).collapse(el&&el.value?'show':'hide');
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *@private
     */
    _onAnyChange:function(){
        this._adaptPreview();
    },
    /**
     *@private
     */
    _onTypeChange(){
        this._updateOptionsUI();
    },
    /**
     *@private
     */
    _onURLInput:function(){
        var$linkUrlInput=this.$('#o_link_dialog_url_input');
        $linkUrlInput.closest('.form-group').removeClass('o_has_error').find('.form-control,.custom-select').removeClass('is-invalid');
        letvalue=$linkUrlInput.val();
        letisLink=value.indexOf('@')<0;
        this.$('input[name="is_new_window"]').closest('.form-group').toggleClass('d-none',!isLink);
        this.$('.o_strip_domain').toggleClass('d-none',value.indexOf(window.location.origin)!==0);
    },
});

returnLinkDialog;
});
