flectra.define('wysiwyg.widgets.media',function(require){
'usestrict';

varconcurrency=require('web.concurrency');
constconfig=require('web.config');
varcore=require('web.core');
varDialog=require('web.Dialog');
vardom=require('web.dom');
varfonts=require('wysiwyg.fonts');
varutils=require('web.utils');
varWidget=require('web.Widget');
varsession=require('web.session');
const{removeOnImageChangeAttrs}=require('web_editor.image_processing');
const{getCSSVariableValue,DEFAULT_PALETTE}=require('web_editor.utils');

varQWeb=core.qweb;
var_t=core._t;

varMediaWidget=Widget.extend({
    xmlDependencies:['/web_editor/static/src/xml/wysiwyg.xml'],

    /**
     *@constructor
     *@param{Element}media:thetargetElementforwhichweselectamedia
     *@param{Object}options:usefulparameterssuchasres_id,res_model,
     * context,user_id,...
     */
    init:function(parent,media,options){
        this._super.apply(this,arguments);
        this.media=media;
        this.$media=$(media);
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *@todocomment
     */
    clear:function(){
        if(!this.media){
            return;
        }
        this._clear();
    },
    /**
     *Savesthecurrentlyconfiguredmediaonthetargetmedia.
     *
     *@abstract
     *@returns{Promise}
     */
    save:function(){},

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@abstract
     */
    _clear:function(){},
});

varSearchableMediaWidget=MediaWidget.extend({
    events:_.extend({},MediaWidget.prototype.events||{},{
        'input.o_we_search':'_onSearchInput',
    }),

    /**
     *@constructor
     */
    init:function(){
        this._super.apply(this,arguments);
        this._onSearchInput=_.debounce(this._onSearchInput,500);
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *Findsanddisplaysexistingattachmentsrelatedtothetargetmedia.
     *
     *@abstract
     *@param{string}needle:onlyreturnattachmentsmatchingthisparameter
     *@returns{Promise}
     */
    search:function(needle){},

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *Rendersthumbnailsfortheattachments.
     *
     *@abstract
     *@returns{Promise}
     */
    _renderThumbnails:function(){},

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *@private
     */
    _onSearchInput:function(ev){
        this.attachments=[];
        this.search($(ev.currentTarget).val()||'').then(()=>this._renderThumbnails());
        this.hasSearched=true;
    },
});

/**
 *Letuserschooseafile,includinguploadinganewfileinflectra.
 */
varFileWidget=SearchableMediaWidget.extend({
    events:_.extend({},SearchableMediaWidget.prototype.events||{},{
        'click.o_upload_media_button':'_onUploadButtonClick',
        'change.o_file_input':'_onFileInputChange',
        'click.o_upload_media_url_button':'_onUploadURLButtonClick',
        'input.o_we_url_input':'_onURLInputChange',
        'click.o_existing_attachment_cell':'_onAttachmentClick',
        'click.o_existing_attachment_remove':'_onRemoveClick',
        'click.o_load_more':'_onLoadMoreClick',
    }),
    existingAttachmentsTemplate:undefined,

    IMAGE_MIMETYPES:['image/gif','image/jpe','image/jpeg','image/jpg','image/gif','image/png','image/svg+xml'],
    NUMBER_OF_ATTACHMENTS_TO_DISPLAY:30,
    MAX_DB_ATTACHMENTS:5,

    /**
     *@constructor
     */
    init:function(parent,media,options){
        this._super.apply(this,arguments);
        this._mutex=newconcurrency.Mutex();

        this.numberOfAttachmentsToDisplay=this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY;

        this.options=_.extend({
            mediaWidth:media&&media.parentElement&&$(media.parentElement).width(),
            useMediaLibrary:true,
        },options||{});

        this.attachments=[];
        this.selectedAttachments=[];
        this.libraryMedia=[];
        this.selectedMedia=[];

        this._onUploadURLButtonClick=dom.makeAsyncHandler(this._onUploadURLButtonClick);
    },
    /**
     *@override
     */
    start:function(){
        vardef=this._super.apply(this,arguments);
        varself=this;
        this.$urlInput=this.$('.o_we_url_input');
        this.$form=this.$('form');
        this.$fileInput=this.$('.o_file_input');
        this.$uploadButton=this.$('.o_upload_media_button');
        this.$addUrlButton=this.$('.o_upload_media_url_button');
        this.$urlSuccess=this.$('.o_we_url_success');
        this.$urlWarning=this.$('.o_we_url_warning');
        this.$urlError=this.$('.o_we_url_error');
        this.$errorText=this.$('.o_we_error_text');

        //Ifthereisalreadyanattachmentonthetarget,selectbydefault
        //thatattachmentifitisamongtheloadedimages.
        varo={
            url:null,
            alt:null,
        };
        if(this.$media.is('img')){
            o.url=this.$media.attr('src');
        }elseif(this.$media.is('a.o_image')){
            o.url=this.$media.attr('href').replace(/[?].*/,'');
            o.id=+o.url.match(/\/web\/content\/(\d+)/,'')[1];
        }

        returnthis.search('').then(async()=>{
            awaitthis._renderThumbnails();
            if(o.url){
                self._selectAttachement(_.find(self.attachments,function(attachment){
                    returno.url===attachment.image_src;
                })||o);
            }
            returndef;
        });
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *Savesthecurrentlyselectedimageonthetargetmedia.Ifnewfilesare
     *currentlybeingadded,delaysthesaveuntilallfileshavebeenadded.
     *
     *@override
     */
    save:function(){
        returnthis._mutex.exec(this._save.bind(this));
    },
    /**
     *@override
     */
    search:function(needle){
        this.needle=needle;
        returnthis.fetchAttachments(this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY,0);
    },
    /**
     *@param{Number}number-thenumberofattachmentstofetch
     *@param{Number}offset-fromwhichresulttostartfetching
     */
    fetchAttachments:function(number,offset){
        returnthis._rpc({
            model:'ir.attachment',
            method:'search_read',
            args:[],
            kwargs:{
                domain:this._getAttachmentsDomain(this.needle),
                fields:['name','mimetype','description','checksum','url','type','res_id','res_model','public','access_token','image_src','image_width','image_height','original_id'],
                order:[{name:'id',asc:false}],
                context:this.options.context,
                //Trytofetchfirstrecordofnextpagejusttoknowwhetherthereisanextpage.
                limit:number+1,
                offset:offset,
            },
        }).then(attachments=>{
            this.attachments=this.attachments.slice();
            Array.prototype.splice.apply(this.attachments,[offset,attachments.length].concat(attachments));
        });
    },
    /**
     *Computeswhetherthereiscontenttodisplayinthetemplate.
     */
    hasContent(){
        returnthis.attachments.length;
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    _clear:function(){
        this.media.className=this.media.className&&this.media.className.replace(/(^|\s+)(o_image)(?=\s|$)/g,'');
    },
    /**
     *Returnsthedomainforattachmentsusedinmediadialog.
     *Welookforattachmentsrelatedtothecurrentdocument.Ifthereisavalueforthemodel
     *field,itisusedtosearchattachments,andtheattachmentsfromthecurrentdocumentare
     *filteredtodisplayonlyuser-createddocuments.
     *Inthecaseofawizardsuchasmail,wehavethedocumentsuploadedandthoseofthemodel
     *
     *@private
     *@params{string}needle
     *@returns{Array}"ir.attachment"flectradomain.
     */
    _getAttachmentsDomain:function(needle){
        vardomain=this.options.attachmentIDs&&this.options.attachmentIDs.length?['|',['id','in',this.options.attachmentIDs]]:[];

        varattachedDocumentDomain=[
            '&',
            ['res_model','=',this.options.res_model],
            ['res_id','=',this.options.res_id|0]
        ];
        //ifthedocumentisnotyetcreated,donotseethedocumentsofotherusers
        if(!this.options.res_id){
            attachedDocumentDomain.unshift('&');
            attachedDocumentDomain.push(['create_uid','=',this.options.user_id]);
        }
        if(this.options.data_res_model){
            varrelatedDomain=['&',
                ['res_model','=',this.options.data_res_model],
                ['res_id','=',this.options.data_res_id|0]];
            if(!this.options.data_res_id){
                relatedDomain.unshift('&');
                relatedDomain.push(['create_uid','=',session.uid]);
            }
            domain=domain.concat(['|'],attachedDocumentDomain,relatedDomain);
        }else{
            domain=domain.concat(attachedDocumentDomain);
        }
        domain=['|',['public','=',true]].concat(domain);
        domain=domain.concat(this.options.mimetypeDomain);
        if(needle&&needle.length){
            domain.push(['name','ilike',needle]);
        }
        if(!this.options.useMediaLibrary){
            domain.push('|',['url','=',false],'!',['url','=ilike','/web_editor/shape/%']);
        }
        domain.push('!',['name','=like','%.crop']);
        domain.push('|',['type','=','binary'],'!',['url','=like','/%/static/%']);
        returndomain;
    },
    /**
     *@private
     */
    _highlightSelected:function(){
        varself=this;
        this.$('.o_existing_attachment_cell.o_we_attachment_selected').removeClass("o_we_attachment_selected");
        _.each(this.selectedAttachments,function(attachment){
            self.$('.o_existing_attachment_cell[data-id='+attachment.id+']')
                .addClass("o_we_attachment_selected").css('display','');
        });
    },
    /**
     *@private
     *@param{object}attachment
     */
    _handleNewAttachment:function(attachment){
        this.attachments=this.attachments.filter(att=>att.id!==attachment.id);
        this.attachments.unshift(attachment);
        this._renderThumbnails();
        this._selectAttachement(attachment);
    },
    /**
     *@private
     *@returns{Promise}
     */
    _loadMoreImages:function(forceSearch){
        returnthis.fetchAttachments(10,this.numberOfAttachmentsToDisplay).then(()=>{
            this.numberOfAttachmentsToDisplay+=10;
            if(!forceSearch){
                this._renderThumbnails();
                returnPromise.resolve();
            }else{
                returnthis.search(this.$('.o_we_search').val()||'');
            }
        });
    },
    /**
     *Renderstheexistingattachmentsandreturnstheresultasastring.
     *
     *@param{Object[]}attachments
     *@returns{string}
     */
    _renderExisting:function(attachments){
        returnQWeb.render(this.existingAttachmentsTemplate,{
            attachments:attachments,
            widget:this,
        });
    },
    /**
     *@private
     */
    _renderThumbnails:function(){
        varattachments=this.attachments.slice(0,this.numberOfAttachmentsToDisplay);

        //Rendermenu&content
        this.$('.o_we_existing_attachments').replaceWith(
            this._renderExisting(attachments)
        );

        this._highlightSelected();

        //adaptloadmore
        this.$('.o_we_load_more').toggleClass('d-none',!this.hasContent());
        varnoLoadMoreButton=this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY>=this.attachments.length;
        varnoMoreImgToLoad=this.numberOfAttachmentsToDisplay>=this.attachments.length;
        this.$('.o_load_done_msg').toggleClass('d-none',noLoadMoreButton||!noMoreImgToLoad);
        this.$('.o_load_more').toggleClass('d-none',noMoreImgToLoad);
    },
    /**
     *@private
     *@returns{Promise}
     */
    _save:asyncfunction(){
        //Createallmedia-libraryattachments.
        consttoSave=Object.fromEntries(this.selectedMedia.map(media=>[
            media.id,{
                query:media.query||'',
                is_dynamic_svg:!!media.isDynamicSVG,
            }
        ]));
        letmediaAttachments=[];
        if(Object.keys(toSave).length!==0){
            mediaAttachments=awaitthis._rpc({
                route:'/web_editor/save_library_media',
                params:{
                    media:toSave,
                },
            });
        }
        constselected=this.selectedAttachments.concat(mediaAttachments).map(attachment=>{
            //Color-customizedynamicSVGswiththeprimarythemecolor
            if(attachment.image_src&&attachment.image_src.startsWith('/web_editor/shape/')){
                constcolorCustomizedURL=newURL(attachment.image_src,window.location.origin);
                colorCustomizedURL.searchParams.set('c1',getCSSVariableValue('o-color-1'));
                attachment.image_src=colorCustomizedURL.pathname+colorCustomizedURL.search;
            }
            returnattachment;
        });
        if(this.options.multiImages){
            returnselected;
        }

        constimg=selected[0];
        if(!img||!img.id||this.$media.attr('src')===img.image_src){
            returnthis.media;
        }

        if(!img.public&&!img.access_token){
            awaitthis._rpc({
                model:'ir.attachment',
                method:'generate_access_token',
                args:[[img.id]]
            }).then(function(access_token){
                img.access_token=access_token[0];
            });
        }

        if(img.image_src){
            varsrc=img.image_src;
            if(!img.public&&img.access_token){
                src+=_.str.sprintf('?access_token=%s',encodeURIComponent(img.access_token));
            }
            if(!this.$media.is('img')){

                //Note:bydefaulttheimagesreceivethebootstrapopt-in
                //img-fluidclass.Wecannotmakethemallresponsive
                //bydesignbecauseoflibrariesandclientdatabasesimg.
                this.$media=$('<img/>',{class:'img-fluido_we_custom_image'});
                this.media=this.$media[0];
            }
            this.$media.attr('src',src);
        }else{
            if(!this.$media.is('a')){
                $('.note-control-selection').hide();
                this.$media=$('<a/>');
                this.media=this.$media[0];
            }
            varhref='/web/content/'+img.id+'?';
            if(!img.public&&img.access_token){
                href+=_.str.sprintf('access_token=%s&',img.access_token);
            }
            href+='unique='+img.checksum+'&download=true';
            this.$media.attr('href',href);
            this.$media.addClass('o_image').attr('title',img.name);
        }

        this.$media.attr('alt',img.alt||img.description||'');
        varstyle=this.style;
        if(style){
            this.$media.css(style);
        }

        //Removeimagemodificationattributes
        removeOnImageChangeAttrs.forEach(attr=>{
            deletethis.media.dataset[attr];
        });
        //Addmimetypefordocuments
        if(!img.image_src){
            this.media.dataset.mimetype=img.mimetype;
        }
        this.media.classList.remove('o_modified_image_to_save');
        this.$media.trigger('image_changed');
        returnthis.media;
    },
    /**
     *@param{object}attachment
     *@param{boolean}[save=true]tosavethegivenattachmentintheDOMand
     * andtoclosethemediadialog
     *@private
     */
    _selectAttachement:function(attachment,save,{type='attachment'}={}){
        constpossibleProps={
            'attachment':'selectedAttachments',
            'media':'selectedMedia'
        };
        constprop=possibleProps[type];
        if(this.options.multiImages){
            //iftheclickedattachmentisalreadyselectedthenunselectit
            //unlessitwasasaverequest(thenkeepthecurrentselection)
            constindex=this[prop].indexOf(attachment);
            if(index!==-1){
                if(!save){
                    this[prop].splice(index,1);
                }
            }else{
                //iftheclickedattachmentisnotselected,addittoselected
                this[prop].push(attachment);
            }
        }else{
            Object.values(possibleProps).forEach(prop=>{
                this[prop]=[];
            });
            //selecttheclickedattachment
            this[prop]=[attachment];
        }
        this._highlightSelected();
        if(save){
            this.trigger_up('save_request');
        }
    },
    /**
     *UpdatestheaddbyURLUI.
     *
     *@private
     *@param{boolean}emptyValue
     *@param{boolean}isURL
     *@param{boolean}isImage
     */
    _updateAddUrlUi:function(emptyValue,isURL,isImage){
        this.$addUrlButton.toggleClass('btn-secondary',emptyValue)
            .toggleClass('btn-primary',!emptyValue)
            .prop('disabled',!isURL);
        this.$urlSuccess.toggleClass('d-none',!isURL);
        this.$urlError.toggleClass('d-none',emptyValue||isURL);
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *@private
     */
    _onAttachmentClick:function(ev){
        constattachment=ev.currentTarget;
        const{id:attachmentID,mediaId}=attachment.dataset;
        if(attachmentID){
            constattachment=this.attachments.find(attachment=>attachment.id===parseInt(attachmentID));
            this._selectAttachement(attachment,!this.options.multiImages);
        }elseif(mediaId){
            constmedia=this.libraryMedia.find(media=>media.id===parseInt(mediaId));
            this._selectAttachement(media,!this.options.multiImages,{type:'media'});
        }
    },
    /**
     *Handleschangeofthefileinput:createattachmentswiththenewfiles
     *andopenthePreviewdialogforeachofthem.Locksthesavebuttonuntil
     *allnewfileshavebeenprocessed.
     *
     *@private
     *@returns{Promise}
     */
    _onFileInputChange:function(){
        returnthis._mutex.exec(this._addData.bind(this));
    },
    /**
     *Uploadsthefilesthatarecurrentlyselectedonthefileinput,which
     *createsnewattachments.Theninsertsthemonthemediadialogand
     *selectsthem.IfmultiImagesisnotset,alsotriggersupthe
     *save_requesteventtoinserttheattachmentintheDOM.
     *
     *@private
     *@returns{Promise}
     */
    async_addData(){
        letfiles=this.$fileInput[0].files;
        if(!files.length){
            //Caseiftheinputisemptied,returnresolvedpromise
            return;
        }

        varself=this;
        varuploadMutex=newconcurrency.Mutex();

        //Uploadthesmallestfilefirsttoblocktheusertheleastpossible.
        files=_.sortBy(files,'size');
        _.each(files,function(file){
            //Uploadonefileatatime:noneedtoparallelasuploadis
            //limitedbybandwidth.
            uploadMutex.exec(function(){
                returnutils.getDataURLFromFile(file).then(function(result){
                    returnself._rpc({
                        route:'/web_editor/attachment/add_data',
                        params:{
                            'name':file.name,
                            'data':result.split(',')[1],
                            'res_id':self.options.res_id,
                            'res_model':self.options.res_model,
                            'width':0,
                            'quality':0,
                            'generate_access_token':true,
                        },
                    }).then(function(attachment){
                        self.trigger_up('wysiwyg_attachment',attachment);
                        self._handleNewAttachment(attachment);
                    });
                });
            });
        });

        returnuploadMutex.getUnlockedDef().then(function(){
            if(!self.options.multiImages&&!self.noSave){
                self.trigger_up('save_request');
            }
            self.noSave=false;
        });
    },
    /**
     *@private
     */
    _onRemoveClick:function(ev){
        varself=this;
        ev.stopPropagation();
        Dialog.confirm(this,_t("Areyousureyouwanttodeletethisfile?"),{
            confirm_callback:function(){
                var$a=$(ev.currentTarget).closest('.o_existing_attachment_cell');
                varid=parseInt($a.data('id'),10);
                varattachment=_.findWhere(self.attachments,{id:id});
                 returnself._rpc({
                    route:'/web_editor/attachment/remove',
                    params:{
                        ids:[id],
                    },
                }).then(function(prevented){
                    if(_.isEmpty(prevented)){
                        self.attachments=_.without(self.attachments,attachment);
                        self.attachments.filter(at=>at.original_id[0]===attachment.id).forEach(at=>deleteat.original_id);
                        if(!self.attachments.length){
                            self._renderThumbnails();//renderthemessageandimageifempty
                        }else{
                            $a.closest('.o_existing_attachment_cell').remove();
                        }
                        return;
                    }
                    self.$errorText.replaceWith(QWeb.render('wysiwyg.widgets.image.existing.error',{
                        views:prevented[id],
                        widget:self,
                    }));
                });
            }
        });
    },
    /**
     *@private
     */
    _onURLInputChange:function(){
        varinputValue=this.$urlInput.val();
        varemptyValue=(inputValue==='');

        varisURL=/^.+\..+$/.test(inputValue);//TODOimprove
        varisImage=_.any(['.gif','.jpeg','.jpe','.jpg','.png'],function(format){
            returninputValue.endsWith(format);
        });

        this._updateAddUrlUi(emptyValue,isURL,isImage);
    },
    /**
     *@private
     */
    _onUploadButtonClick:function(){
        this.$fileInput.click();
    },
    /**
     *@private
     */
    _onUploadURLButtonClick:function(){
        if(this.$urlInput.is('.o_we_horizontal_collapse')){
            this.$urlInput.removeClass('o_we_horizontal_collapse');
            this.$addUrlButton.attr('disabled','disabled');
            return;
        }
        returnthis._mutex.exec(this._addUrl.bind(this));
    },
    /**
     *@private
     *@returns{Promise}
     */
    _addUrl:function(){
        varself=this;
        returnthis._rpc({
            route:'/web_editor/attachment/add_url',
            params:{
                'url':this.$urlInput.val(),
                'res_id':this.options.res_id,
                'res_model':this.options.res_model,
            },
        }).then(function(attachment){
            self.$urlInput.val('');
            self._onURLInputChange();
            self._handleNewAttachment(attachment);
            if(!self.options.multiImages){
                self.trigger_up('save_request');
            }
        });
    },
    /**
     *@private
     */
    _onLoadMoreClick:function(){
        this._loadMoreImages();
    },
    /**
     *@override
     */
    _onSearchInput:function(){
        this.attachments=[];
        this.numberOfAttachmentsToDisplay=this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY;
        this._super.apply(this,arguments);
    },
});

/**
 *Letuserschooseanimage,includinguploadinganewimageinflectra.
 */
varImageWidget=FileWidget.extend({
    template:'wysiwyg.widgets.image',
    existingAttachmentsTemplate:'wysiwyg.widgets.image.existing.attachments',
    events:Object.assign({},FileWidget.prototype.events,{
        'changeinput.o_we_show_optimized':'_onShowOptimizedChange',
        'change.o_we_search_select':'_onSearchSelect',
    }),
    MIN_ROW_HEIGHT:128,

    /**
     *@constructor
     */
    init:function(parent,media,options){
        this.searchService='all';
        options=_.extend({
            accept:'image/*',
            mimetypeDomain:[['mimetype','in',this.IMAGE_MIMETYPES]],
        },options||{});
        //Bindingsowecanadd/removeitasanaddEventListener
        this._onAttachmentImageLoad=this._onAttachmentImageLoad.bind(this);
        this._super(parent,media,options);
    },
    /**
     *@override
     */
    start:asyncfunction(){
        awaitthis._super(...arguments);
        this.el.addEventListener('load',this._onAttachmentImageLoad,true);
    },
    /**
     *@override
     */
    destroy:function(){
        this.el.removeEventListener('load',this._onAttachmentImageLoad,true);
        returnthis._super(...arguments);
    },
    /**
     *@override
     */
    asyncfetchAttachments(number,offset){
        if(this.needle&&this.searchService!=='database'){
            number=this.MAX_DB_ATTACHMENTS;
            offset=0;
        }
        constresult=awaitthis._super(number,offset);
        //Color-substitutionfordynamicSVGattachment
        constprimaryColor=getCSSVariableValue('o-color-1');
        this.attachments.forEach(attachment=>{
            if(attachment.image_src.startsWith('/')){
                constnewURL=newURL(attachment.image_src,window.location.origin);
                //SetthemaincolorofdynamicSVGstoo-color-1
                if(attachment.image_src.startsWith('/web_editor/shape/')){
                    newURL.searchParams.set('c1',primaryColor);
                }else{
                    //Setheightsothatdbimagesloadfaster
                    newURL.searchParams.set('height',2*this.MIN_ROW_HEIGHT);
                }
                attachment.thumbnail_src=newURL.pathname+newURL.search;
            }
        });
        if(this.needle&&this.options.useMediaLibrary){
            try{
                constresponse=awaitthis._rpc({
                    route:'/web_editor/media_library_search',
                    params:{
                        'query':this.needle,
                        'offset':this.libraryMedia.length,
                    },
                });
                constnewMedia=response.media;
                this.nbMediaResults=response.results;
                this.libraryMedia.push(...newMedia);
            }catch(e){
                //EitherAPIendpointdoesn'texistorismisconfigured.
                console.error(`Couldn'treachAPIendpoint.`);
            }
        }
        returnresult;
    },
    /**
     *@override
     */
    hasContent(){
        if(this.searchService==='all'){
            returnthis._super(...arguments)||this.libraryMedia.length;
        }elseif(this.searchService==='media-library'){
            return!!this.libraryMedia.length;
        }
        returnthis._super(...arguments);
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    _updateAddUrlUi:function(emptyValue,isURL,isImage){
        this._super.apply(this,arguments);
        this.$addUrlButton.text((isURL&&!isImage)?_t("Addasdocument"):_t("Addimage"));
        constwarning=isURL&&!isImage;
        this.$urlWarning.toggleClass('d-none',!warning);
        if(warning){
            this.$urlSuccess.addClass('d-none');
        }
    },
    /**
     *@override
     */
    _renderThumbnails:function(){
        constalreadyLoaded=this.$('.o_existing_attachment_cell[data-loaded="true"]');
        this._super(...arguments);
        //Hideimagesuntilthey'reloaded
        this.$('.o_existing_attachment_cell').addClass('d-none');
        //Replaceimagesthathadbeenpreviouslyloadedifanytopreventscrollresettingtotop
        alreadyLoaded.each((index,el)=>{
            consttoReplace=this.$(`.o_existing_attachment_cell[data-id="${el.dataset.id}"],.o_existing_attachment_cell[data-media-id="${el.dataset.mediaId}"]`);
            if(toReplace.length){
                toReplace.replaceWith(el);
            }
        });
        this._toggleOptimized(this.$('input.o_we_show_optimized')[0].checked);
        //Placeholdershavea3:2aspectratiolikemostphotos.
        constplaceholderWidth=3/2*this.MIN_ROW_HEIGHT;
        this.$('.o_we_attachment_placeholder').css({
            flexGrow:placeholderWidth,
            flexBasis:placeholderWidth,
        });
        if(this.needle&&['media-library','all'].includes(this.searchService)){
            constnoMoreImgToLoad=this.libraryMedia.length===this.nbMediaResults;
            constnoLoadMoreButton=noMoreImgToLoad&&this.libraryMedia.length<=15;
            this.$('.o_load_done_msg').toggleClass('d-none',noLoadMoreButton||!noMoreImgToLoad);
            this.$('.o_load_more').toggleClass('d-none',noMoreImgToLoad);
        }
    },
    /**
     *@override
     */
    _renderExisting:function(attachments){
        if(this.needle&&this.searchService!=='database'){
            attachments=attachments.slice(0,this.MAX_DB_ATTACHMENTS);
        }
        returnQWeb.render(this.existingAttachmentsTemplate,{
            attachments:attachments,
            libraryMedia:this.libraryMedia,
            widget:this,
        });
    },
    /**
     *@private
     *
     *@param{boolean}valuewhethertotoggleoptimizedattachmentsonoroff
     */
    _toggleOptimized:function(value){
        this.$('.o_we_attachment_optimized').each((i,cell)=>cell.style.setProperty('display',value?null:'none','important'));
    },
    /**
     *@override
     */
    _highlightSelected:function(){
        this._super(...arguments);
        this.selectedMedia.forEach(media=>{
            this.$(`.o_existing_attachment_cell[data-media-id=${media.id}]`)
                .addClass("o_we_attachment_selected");
        });
    },
    /**
     *@override
     */
    _getAttachmentsDomain(needle){
        constdomain=this._super(...arguments);

        //Optimizedimages(meaningtheyarerelatedtoan`original_id`)can
        //onlybeshownindebugmodeasthetogglertomakethoseimages
        //appearishiddenwhennotindebugmode.
        //Thereisthusnopointtofetchthoseoptimizedimagesoutsidedebug
        //mode.Worst,itleadstobugs:itmightfetchonlyoptimizedimages
        //whenclickingon"loadmore"whichwilllooklikeit'sbuggedasno
        //imageswillappearonscreen(theyallwillbehidden).
        if(!config.isDebug()){
            constsubDomain=[false];

            //Particularexception:iftheeditedimageisanoptimized
            //image,weneedtofetchittoosoit'sdisplayedasthe
            //selectedimagewhenopeningthemediadialog.
            //Wemightgetafewmoreoptimizedimagethannecessaryifthe
            //originalimagehasmultipleoptimizedimagesbutit'snota
            //bigdeal.
            constoriginalId=this.$media.length&&this.$media[0].dataset.originalId;
            if(originalId){
                subDomain.push(originalId);
            }

            domain.push(['original_id','in',subDomain]);
        }

        returndomain;
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    _onAttachmentImageLoad:asyncfunction(ev){
        constimg=ev.target;
        constcell=img.closest('.o_existing_attachment_cell');
        if(!cell){
            return;
        }
        if(cell.dataset.mediaId&&!img.src.startsWith('blob')){
            constmediaUrl=img.src;
            try{
                constresponse=awaitfetch(mediaUrl);
                if(response.headers.get('content-type')==='image/svg+xml'){
                    constsvg=awaitresponse.text();
                    constcolorRegex=newRegExp(DEFAULT_PALETTE['1'],'gi');
                    if(colorRegex.test(svg)){
                        constfileName=mediaUrl.split('/').pop();
                        constfile=newFile([svg.replace(colorRegex,getCSSVariableValue('o-color-1'))],fileName,{
                            type:"image/svg+xml",
                        });
                        img.src=URL.createObjectURL(file);
                        constmedia=this.libraryMedia.find(media=>media.id===parseInt(cell.dataset.mediaId));
                        if(media){
                            media.isDynamicSVG=true;
                        }
                        //Wechangedthesrc:waitforthenextloadeventtodothestyling
                        return;
                    }
                }
            }catch(e){
                console.error('CORSismisconfiguredontheAPIserver,imagewillbetreatedasnon-dynamic.');
            }
        }
        letaspectRatio=img.naturalWidth/img.naturalHeight;
        //SpecialcaseforSVGswithnoinstrinsicsizesonfirefox
        //Seehttps://github.com/whatwg/html/issues/3510#issuecomment-369982529
        if(img.naturalHeight===0){
            img.width=1000;
            //Positionfixedsothattheimagedoesn'taffectlayoutwhilerendering
            img.style.position='fixed';
            //Makeinvisiblesotheimagedoesn'tbrieflyappearonthescreen
            img.style.opacity='0';
            //ImageneedstobeintheDOMfordimensionstobecorrectafterrender
            constoriginalParent=img.parentElement;
            document.body.appendChild(img);

            aspectRatio=img.width/img.height;
            originalParent.appendChild(img);
            img.removeAttribute('width');
            img.style.removeProperty('position');
            img.style.removeProperty('opacity');
        }
        constwidth=aspectRatio*this.MIN_ROW_HEIGHT;
        cell.style.flexGrow=width;
        cell.style.flexBasis=`${width}px`;
        cell.classList.remove('d-none');
        cell.classList.add('d-flex');
        cell.dataset.loaded='true';
    },
    /**
     *@override
     */
    _onShowOptimizedChange:function(ev){
        this._toggleOptimized(ev.target.checked);
    },
    /**
     *@override
     */
    _onSearchSelect:function(ev){
        const{value}=ev.target;
        this.searchService=value;
        this.$('.o_we_search').trigger('input');
    },
    /**
     *@private
     */
    _onSearchInput:function(ev){
        this.libraryMedia=[];
        this._super(...arguments);
    },
    /**
     *@override
     */
    _clear:function(type){
        //Notcalling_super:wedon'twanttocallthedocumentwidget's_clearmethodonimages
        varallImgClasses=/(^|\s+)(img|img-\S*|o_we_custom_image|rounded-circle|rounded|thumbnail|shadow|w-25|w-50|w-75|w-100|o_modified_image_to_save)(?=\s|$)/g;
        this.media.className=this.media.className&&this.media.className.replace(allImgClasses,'');
    },
});


/**
 *Letuserschooseadocument,includinguploadinganewdocumentinflectra.
 */
varDocumentWidget=FileWidget.extend({
    template:'wysiwyg.widgets.document',
    existingAttachmentsTemplate:'wysiwyg.widgets.document.existing.attachments',

    /**
     *@constructor
     */
    init:function(parent,media,options){
        options=_.extend({
            accept:'*/*',
            mimetypeDomain:[['mimetype','notin',this.IMAGE_MIMETYPES]],
        },options||{});
        this._super(parent,media,options);
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    _updateAddUrlUi:function(emptyValue,isURL,isImage){
        this._super.apply(this,arguments);
        this.$addUrlButton.text((isURL&&isImage)?_t("Addasimage"):_t("Adddocument"));
        constwarning=isURL&&isImage;
        this.$urlWarning.toggleClass('d-none',!warning);
        if(warning){
            this.$urlSuccess.addClass('d-none');
        }
    },
    /**
     *@override
     */
    _getAttachmentsDomain:function(needle){
        vardomain=this._super.apply(this,arguments);
        //theassetsshouldnotbepartofthedocuments
        returndomain.concat('!',utils.assetsDomain());
    },
});

/**
 *Letuserschooseafontawesomeicon,supportallfontawesomeloadedinthe
 *cssfiles.
 */
varIconWidget=SearchableMediaWidget.extend({
    template:'wysiwyg.widgets.font-icons',
    events:_.extend({},SearchableMediaWidget.prototype.events||{},{
        'click.font-icons-icon':'_onIconClick',
    }),

    /**
     *@constructor
     */
    init:function(parent,media){
        this._super.apply(this,arguments);

        fonts.computeFonts();
        this.iconsParser=fonts.fontIcons;
        this.alias=_.flatten(_.map(this.iconsParser,function(data){
            returndata.alias;
        }));
    },
    /**
     *@override
     */
    start:function(){
        this.$icons=this.$('.font-icons-icon');
        varclasses=(this.media&&this.media.className||'').split(/\s+/);
        for(vari=0;i<classes.length;i++){
            varcls=classes[i];
            if(_.contains(this.alias,cls)){
                this.selectedIcon=cls;
                this.initialIcon=cls;
                this._highlightSelectedIcon();
            }
        }
        //Keptforcompatinstable,nolongerinuse:removeinmaster
        this.nonIconClasses=_.without(classes,'media_iframe_video',this.selectedIcon);

        returnthis._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    save:function(){
        varstyle=this.$media.attr('style')||'';
        variconFont=this._getFont(this.selectedIcon)||{base:'fa',font:''};
        if(!this.$media.is('span,i')){
            var$span=$('<span/>');
            $span.data(this.$media.data());
            this.$media=$span;
            this.media=this.$media[0];
            style=style.replace(/\s*width:[^;]+/,'');
        }
        this.$media.removeClass(this.initialIcon).addClass([iconFont.base,iconFont.font]);
        this.$media.attr('style',style||null);
        returnPromise.resolve(this.media);
    },
    /**
     *@override
     */
    search:function(needle){
        variconsParser=this.iconsParser;
        if(needle&&needle.length){
            iconsParser=[];
            _.filter(this.iconsParser,function(data){
                varcssData=_.filter(data.cssData,function(cssData){
                    return_.find(cssData.names,function(alias){
                        returnalias.indexOf(needle)>=0;
                    });
                });
                if(cssData.length){
                    iconsParser.push({
                        base:data.base,
                        cssData:cssData,
                    });
                }
            });
        }
        this.$('div.font-icons-icons').html(
            QWeb.render('wysiwyg.widgets.font-icons.icons',{iconsParser:iconsParser,widget:this})
        );
        returnPromise.resolve();
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    _clear:function(){
        varallFaClasses=/(^|\s)(fa|(text-|bg-|fa-)\S*|rounded-circle|rounded|thumbnail|img-thumbnail|shadow)(?=\s|$)/g;
        this.media.className=this.media.className&&this.media.className.replace(allFaClasses,'');
    },
    /**
     *@private
     */
    _getFont:function(classNames){
        if(!(classNamesinstanceofArray)){
            classNames=(classNames||"").split(/\s+/);
        }
        varfontIcon,cssData;
        for(vark=0;k<this.iconsParser.length;k++){
            fontIcon=this.iconsParser[k];
            for(vars=0;s<fontIcon.cssData.length;s++){
                cssData=fontIcon.cssData[s];
                if(_.intersection(classNames,cssData.names).length){
                    return{
                        base:fontIcon.base,
                        parser:fontIcon.parser,
                        font:cssData.names[0],
                    };
                }
            }
        }
        returnnull;
    },
    /**
     *@private
     */
    _highlightSelectedIcon:function(){
        varself=this;
        this.$icons.removeClass('o_we_attachment_selected');
        this.$icons.filter(function(i,el){
            return_.contains($(el).data('alias').split(','),self.selectedIcon);
        }).addClass('o_we_attachment_selected');
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *@private
     */
    _onIconClick:function(ev){
        ev.preventDefault();
        ev.stopPropagation();

        this.selectedIcon=$(ev.currentTarget).data('id');
        this._highlightSelectedIcon();
        this.trigger_up('save_request');
    },
});

/**
 *Letuserschooseavideo,supportallsummernotevideo,andembediframe.
 */
varVideoWidget=MediaWidget.extend({
    template:'wysiwyg.widgets.video',
    events:_.extend({},MediaWidget.prototype.events||{},{
        'change.o_video_dialog_optionsinput':'_onUpdateVideoOption',
        'inputtextarea#o_video_text':'_onVideoCodeInput',
        'changetextarea#o_video_text':'_onVideoCodeChange',
    }),

    /**
     *@constructor
     */
    init:function(parent,media,options){
        this._super.apply(this,arguments);
        this.isForBgVideo=!!options.isForBgVideo;
        this._onVideoCodeInput=_.debounce(this._onVideoCodeInput,1000);
    },
    /**
     *@override
     */
    start:function(){
        this.$content=this.$('.o_video_dialog_iframe');

        if(this.media){
            var$media=$(this.media);
            varsrc=$media.data('oe-expression')||$media.data('src')||($media.is('iframe')?$media.attr('src'):'')||'';
            this.$('textarea#o_video_text').val(src);

            this.$('input#o_video_autoplay').prop('checked',src.indexOf('autoplay=1')>=0);
            this.$('input#o_video_hide_controls').prop('checked',src.indexOf('controls=0')>=0);
            this.$('input#o_video_loop').prop('checked',src.indexOf('loop=1')>=0);
            this.$('input#o_video_hide_fullscreen').prop('checked',src.indexOf('fs=0')>=0);
            this.$('input#o_video_hide_yt_logo').prop('checked',src.indexOf('modestbranding=1')>=0);
            this.$('input#o_video_hide_dm_logo').prop('checked',src.indexOf('ui-logo=0')>=0);
            this.$('input#o_video_hide_dm_share').prop('checked',src.indexOf('sharing-enable=0')>=0);

            this._updateVideo();
        }

        returnthis._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    save:function(){
        this._updateVideo();
        if(this.isForBgVideo){
            returnPromise.resolve({bgVideoSrc:this.$content.attr('src')});
        }
        if(this.$('.o_video_dialog_iframe').is('iframe')){
            this.$media=$(
                '<divclass="media_iframe_video"data-oe-expression="'+this.$content.attr('src')+'">'+
                    '<divclass="css_editable_mode_display">&nbsp;</div>'+
                    '<divclass="media_iframe_video_size"contenteditable="false">&nbsp;</div>'+
                    '<iframesrc="'+this.$content.attr('src')+'"frameborder="0"contenteditable="false"allowfullscreen="allowfullscreen"></iframe>'+
                '</div>'
            );
            this.media=this.$media[0];
        }
        returnPromise.resolve(this.media);
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    _clear:function(){
        if(this.media.dataset.src){
            try{
                deletethis.media.dataset.src;
            }catch(e){
                this.media.dataset.src=undefined;
            }
        }
        varallVideoClasses=/(^|\s)media_iframe_video(\s|$)/g;
        varisVideo=this.media.className&&this.media.className.match(allVideoClasses);
        if(isVideo){
            this.media.className=this.media.className.replace(allVideoClasses,'');
            this.media.innerHTML='';
        }
    },
    /**
     *CreatesavideonodeaccordingtothegivenURLandoptions.Ifnot
     *possible,returnsanerrorcode.
     *
     *@private
     *@param{string}url
     *@param{Object}options
     *@returns{Object}
     *         $video->thecreatedvideojQuerynode
     *         type->thetypeofthecreatedvideo
     *         errorCode->ifdefined,either'0'forinvalidURLor'1'for
     *             unsupportedvideoprovider
     */
    _createVideoNode:function(url,options){
        options=options||{};
        constvideoData=this._getVideoURLData(url,options);
        if(videoData.error){
            return{errorCode:0};
        }
        if(!videoData.type){
            return{errorCode:1};
        }
        const$video=$('<iframe>').width(1280).height(720)
            .attr('frameborder',0)
            .attr('src',videoData.embedURL)
            .addClass('o_video_dialog_iframe');

        return{$video:$video,type:videoData.type};
    },
    /**
     *Updatesthevideopreviewaccordingtovideocodeandenabledoptions.
     *
     *@private
     */
    _updateVideo:function(){
        //Resetthefeedback
        this.$content.empty();
        this.$('#o_video_form_group').removeClass('o_has_erroro_has_success').find('.form-control,.custom-select').removeClass('is-invalidis-valid');
        this.$('.o_video_dialog_optionsdiv').addClass('d-none');

        //Checkvideocode
        var$textarea=this.$('textarea#o_video_text');
        varcode=$textarea.val().trim();
        if(!code){
            return;
        }

        //DetectifwehaveanembedcoderatherthananURL
        varembedMatch=code.match(/(src|href)=["']?([^"']+)?/);
        if(embedMatch&&embedMatch[2].length>0&&embedMatch[2].indexOf('instagram')){
            embedMatch[1]=embedMatch[2];//Instagramembedcodeisdifferent
        }
        varurl=embedMatch?embedMatch[1]:code;

        varquery=this._createVideoNode(url,{
            'autoplay':this.isForBgVideo||this.$('input#o_video_autoplay').is(':checked'),
            'hide_controls':this.isForBgVideo||this.$('input#o_video_hide_controls').is(':checked'),
            'loop':this.isForBgVideo||this.$('input#o_video_loop').is(':checked'),
            'hide_fullscreen':this.isForBgVideo||this.$('input#o_video_hide_fullscreen').is(':checked'),
            'hide_yt_logo':this.isForBgVideo||this.$('input#o_video_hide_yt_logo').is(':checked'),
            'hide_dm_logo':this.isForBgVideo||this.$('input#o_video_hide_dm_logo').is(':checked'),
            'hide_dm_share':this.isForBgVideo||this.$('input#o_video_hide_dm_share').is(':checked'),
        });

        var$optBox=this.$('.o_video_dialog_options');

        //Show/Hidepreviewelements
        this.$el.find('.o_video_dialog_preview_text,.media_iframe_video_size').add($optBox).toggleClass('d-none',!query.$video);
        //Togglevalidationclasses
        this.$el.find('#o_video_form_group')
            .toggleClass('o_has_error',!query.$video).find('.form-control,.custom-select').toggleClass('is-invalid',!query.$video)
            .end()
            .toggleClass('o_has_success',!!query.$video).find('.form-control,.custom-select').toggleClass('is-valid',!!query.$video);

        //Individuallyshow/hideoptionsbaseonthevideoprovider
        $optBox.find('div.o_'+query.type+'_option').removeClass('d-none');

        //Hidetheentireoptionsboxifnooptionsareavailableorifthe
        //dialogisopenedforabackground-video
        $optBox.toggleClass('d-none',this.isForBgVideo||$optBox.find('div:not(.d-none)').length===0);

        if(query.type==='youtube'){
            //Youtubeonly:If'hidecontrols'ischecked,hide'fullscreen'
            //and'youtubelogo'optionstoo
            this.$('input#o_video_hide_fullscreen,input#o_video_hide_yt_logo').closest('div').toggleClass('d-none',this.$('input#o_video_hide_controls').is(':checked'));
        }

        this.error=false;
        var$content=query.$video;
        if(!$content){
            switch(query.errorCode){
                case0:
                    this.error=_t("Theprovidedurlisnotvalid");
                    $content=$('<div/>',{
                        class:'alertalert-dangero_video_dialog_iframemb-2mt-2',
                        text:this.error,
                    });
                    break;
                case1:
                    this.error=_t("Theprovidedurldoesnotreferenceanysupportedvideo");
                    $content=$('<div/>',{
                        class:'alertalert-warningo_video_dialog_iframemb-2mt-2',
                        text:this.error,
                    });
                    break;
            }
        }
        this.$content.replaceWith($content);
        this.$content=$content;
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *Calledwhenavideooptionchanges->Updatesthevideopreview.
     *
     *@private
     */
    _onUpdateVideoOption:function(){
        this._updateVideo();
    },
    /**
     *Calledwhenthevideocode(URL/Iframe)changeisconfirmed->Updates
     *thevideopreviewimmediately.
     *
     *@private
     */
    _onVideoCodeChange:function(){
        this._updateVideo();
    },
    /**
     *Calledwhenthevideocode(URL/Iframe)changes->Updatesthevideo
     *preview(note:thisfunctionisautomaticallydebounced).
     *
     *@private
     */
    _onVideoCodeInput:function(){
        this._updateVideo();
    },
    /**
     *ParsesaURLandreturnstheprovidertypeandanemebedableURL.
     *
     *@private
     */
    _getVideoURLData:function(url,options){
        if(!url.match(/^(http:\/\/|https:\/\/|\/\/)[a-z0-9]+([-.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/i)){
            return{
                error:true,
                message:'Theprovidedurlisinvalid',
            };
        }
        constregexes={
            youtube:/^(?:(?:https?:)?\/\/)?(?:www\.)?(?:youtu\.be\/|youtube(-nocookie)?\.com\/(?:embed\/|v\/|watch\?v=|watch\?.+&v=))((?:\w|-){11})(?:\S+)?$/,
            instagram:/(.*)instagram.com\/p\/(.[a-zA-Z0-9]*)/,
            vine:/\/\/vine.co\/v\/(.[a-zA-Z0-9]*)/,
            vimeo:/\/\/(player.)?vimeo.com\/([a-z]*\/)*([0-9]{6,11})[?]?.*/,
            dailymotion:/.+dailymotion.com\/(video|hub|embed)\/([^_?]+)[^#]*(#video=([^_&]+))?/,
            youku:/(.*).youku\.com\/(v_show\/id_|embed\/)(.+)/,
        };
        constmatches=_.mapObject(regexes,regex=>url.match(regex));
        constautoplay=options.autoplay?'?autoplay=1&mute=1':'?autoplay=0';
        constcontrols=options.hide_controls?'&controls=0':'';
        constloop=options.loop?'&loop=1':'';

        letembedURL;
        lettype;
        if(matches.youtube&&matches.youtube[2].length===11){
            constfullscreen=options.hide_fullscreen?'&fs=0':'';
            constytLoop=loop?loop+`&playlist=${encodeURIComponent(matches.youtube[2])}`:'';
            constlogo=options.hide_yt_logo?'&modestbranding=1':'';
            //Theyoutubejsapiisneededforautoplayonmobile.Note:this
            //wasaddedasafix,oldcustomersmayhaveautoplayvideos
            //withoutthis,whichwillmaketheirvideoautoplayondesktop
            //butnotinmobile(sonobehaviorchangewasdoneinstable,
            //thisshouldnotbemigrated).
            constenablejsapi=options.autoplay?'&enablejsapi=1':'';
            embedURL=`//www.youtube${matches.youtube[1]||''}.com/embed/${matches.youtube[2]}${autoplay}${enablejsapi}&rel=0${ytLoop}${controls}${fullscreen}${logo}`;
            type='youtube';
        }elseif(matches.instagram&&matches.instagram[2].length){
            embedURL=`//www.instagram.com/p/${matches.instagram[2]}/embed/`;
            type='instagram';
        }elseif(matches.vine&&matches.vine[0].length){
            embedURL=`${matches.vine[0]}/embed/simple`;
            type='vine';
        }elseif(matches.vimeo&&matches.vimeo[3].length){
            constvimeoAutoplay=autoplay.replace('mute','muted')
                .replace('autoplay=1','autoplay=1&autopause=0');
            embedURL=`//player.vimeo.com/video/${matches.vimeo[3]}${vimeoAutoplay}${loop}${controls}`;
            type='vimeo';
        }elseif(matches.dailymotion&&matches.dailymotion[2].length){
            constvideoId=matches.dailymotion[2].replace('video/','');
            constlogo=options.hide_dm_logo?'&ui-logo=0':'';
            constshare=options.hide_dm_share?'&sharing-enable=0':'';
            embedURL=`//www.dailymotion.com/embed/video/${videoId}${autoplay}${controls}${logo}${share}`;
            type='dailymotion';
        }elseif(matches.youku&&matches.youku[3].length){
            constvideoId=matches.youku[3].indexOf('.html?')>=0?matches.youku[3].substring(0,matches.youku[3].indexOf('.html?')):matches.youku[3];
            embedURL=`//player.youku.com/embed/${videoId}`;
            type='youku';
        }

        return{type:type,embedURL:embedURL};
    },
});

return{
    MediaWidget:MediaWidget,
    SearchableMediaWidget:SearchableMediaWidget,
    FileWidget:FileWidget,
    ImageWidget:ImageWidget,
    DocumentWidget:DocumentWidget,
    IconWidget:IconWidget,
    VideoWidget:VideoWidget,
};
});
