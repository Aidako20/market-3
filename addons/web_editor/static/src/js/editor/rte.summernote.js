flectra.define('web_editor.rte.summernote',function(require){
'usestrict';

varClass=require('web.Class');
constconcurrency=require('web.concurrency');
varcore=require('web.core');
//Usethetopwindow'score.busfordialogeventssothattheytakethewholewindow
//insteadofbeingconfinedtoaniframe.Thismeansthattheeventtriggeredon
//thebusbysummernoteinaniframewillbecaughtbythewysiwyg'sSummernoteManager
//outsidetheiframe.
consttopBus=window.top.flectra.__DEBUG__.services['web.core'].bus;
const{ColorpickerWidget}=require('web.Colorpicker');
varColorPaletteWidget=require('web_editor.ColorPalette').ColorPaletteWidget;
varmixins=require('web.mixins');
varfonts=require('wysiwyg.fonts');
varrte=require('web_editor.rte');
varServicesMixin=require('web.ServicesMixin');
varweWidgets=require('wysiwyg.widgets');

var_t=core._t;

//SummernoteLib(neekchangetomakeaccessible:methodandobject)
vardom=$.summernote.core.dom;
varrange=$.summernote.core.range;
vareventHandler=$.summernote.eventHandler;
varrenderer=$.summernote.renderer;

//SummernoteusesexecCommandand,worth,obsoletequeryCommandStatefunction
//tocustomizetheeditedcontent.Herewetrytohackthefunctiontosolve
//someproblemsbymakingtheDOMandstyleeasiertounderstandforthe
//basefunctionforthedurationoftheirexecutions.Thiswon'tobviously
//solvesallproblemsbutthisisanimprovementwhilewaitingforthenew
//Flectraeditorcominginfutureversions.
functionprotectCommand(callback){
    returnfunction(){
        varrng=range.create();
        var$sc=(rng&&rng.sc)?$(rng.sc).parents(':o_editable').last():$();
        var$ec=(rng&&rng.ec)?$(rng.ec).parents(':o_editable').last():$();
        $sc.addClass('o_we_command_protector');
        $ec.addClass('o_we_command_protector');
        varrestore=function(){
            $sc.removeClass('o_we_command_protector');
            $ec.removeClass('o_we_command_protector');
        };
        varresult;
        try{
            result=callback.apply(this,arguments);
        }catch(err){
            restore();
            throwerr;
        }
        restore();
        returnresult;
    };
}
document.execCommand=protectCommand(document.execCommand);
document.queryCommandState=protectCommand(document.queryCommandState);

vartplButton=renderer.getTemplate().button;
vartplIconButton=renderer.getTemplate().iconButton;
vartplDropdown=renderer.getTemplate().dropdown;

constprocessAndApplyColor=function(target,eventName,color,preview){
    if(!color){
        color='inherit';
    }elseif(!ColorpickerWidget.isCSSColor(color)){
        color=(eventName==="foreColor"?'text-':'bg-')+color;
    }
    varlayoutInfo=dom.makeLayoutInfo(target);
    $.summernote.pluginEvents[eventName](undefined,eventHandler.modules.editor,layoutInfo,color,preview);
};
//Updateandchangethepopoverscontent,andaddhistorybutton
renderer.createPalette=function($container,options){
    const$dropdownContent=$container.find(".colorPalette");
    //Theeditor'srootwidgetcanbewebsiteorweb'srootwidgetandcannotbeproperlyretrieved...
    constparent=flectra.__DEBUG__.services['root.widget'];
    _.each($dropdownContent,elem=>{
        consteventName=elem.dataset.eventName;
        letcolorpicker=null;
        constmutex=newconcurrency.MutexedDropPrevious();
        const$dropdown=$(elem).closest('.btn-group,.dropdown');
        letmanualOpening=false;
        //Preventdropdownclosingoncolorpickerclick
        $dropdown.on('hide.bs.dropdown',ev=>{
            return!(ev.clickEvent&&ev.clickEvent.originalEvent&&ev.clickEvent.originalEvent.__isColorpickerClick);
        });
        $dropdown.on('show.bs.dropdown',()=>{
            if(manualOpening){
                returntrue;
            }
            mutex.exec(()=>{
                constoldColorpicker=colorpicker;
                consthookEl=oldColorpicker?oldColorpicker.el:elem;

                constr=range.create();
                consttargetNode=r.sc;
                consttargetElement=targetNode.nodeType===Node.ELEMENT_NODE?targetNode:targetNode.parentNode;
                colorpicker=newColorPaletteWidget(parent,{
                    excluded:['transparent_grayscale'],
                    $editable:rte.Class.prototype.editable(),//Ourparentistherootwidget,wecan'tretrievetheeditablesectionfromit...
                    selectedColor:$(targetElement).css(eventName==="foreColor"?'color':'backgroundColor'),
                });
                colorpicker.on('custom_color_pickedcolor_picked',null,ev=>{
                    processAndApplyColor(ev.data.target,eventName,ev.data.color);
                });
                colorpicker.on('color_hovercolor_leave',null,ev=>{
                    processAndApplyColor(ev.data.target,eventName,ev.data.color,true);
                });
                colorpicker.on('enter_key_color_colorpicker',null,()=>{
                    $dropdown.children('.dropdown-toggle').dropdown('hide');
                });
                returncolorpicker.replace(hookEl).then(()=>{
                    if(oldColorpicker){
                        oldColorpicker.destroy();
                    }
                    manualOpening=true;
                    $dropdown.children('.dropdown-toggle').dropdown('show');
                    manualOpening=false;
                });
            });
            returnfalse;
        });
    });
};

varfn_tplPopovers=renderer.tplPopovers;
renderer.tplPopovers=function(lang,options){
    var$popover=$(fn_tplPopovers.call(this,lang,options));

    var$imagePopover=$popover.find('.note-image-popover');
    var$linkPopover=$popover.find('.note-link-popover');
    var$airPopover=$popover.find('.note-air-popover');

    ////////////////imagepopover

    //addcenterbuttonforimages
    $(tplIconButton('fafa-align-center',{
        title:_t('Center'),
        event:'floatMe',
        value:'center'
    })).insertAfter($imagePopover.find('[data-event="floatMe"][data-value="left"]'));
    $imagePopover.find('button[data-event="removeMedia"]').parent().remove();
    $imagePopover.find('button[data-event="floatMe"][data-value="none"]').remove();

    //paddingbutton
    var$padding=$('<divclass="btn-group"/>');
    $padding.insertBefore($imagePopover.find('.btn-group:first'));
    vardropdown_content=[
        '<li><aclass="dropdown-item"data-event="padding"href="#"data-value="">'+_t('None')+'</a></li>',
        '<li><aclass="dropdown-item"data-event="padding"href="#"data-value="small">'+_t('Small')+'</a></li>',
        '<li><aclass="dropdown-item"data-event="padding"href="#"data-value="medium">'+_t('Medium')+'</a></li>',
        '<li><aclass="dropdown-item"data-event="padding"href="#"data-value="large">'+_t('Large')+'</a></li>',
        '<li><aclass="dropdown-item"data-event="padding"href="#"data-value="xl">'+_t('Xl')+'</a></li>',
    ];
    $(tplIconButton('fafa-plus-square-o',{
        title:_t('Padding'),
        dropdown:tplDropdown(dropdown_content)
    })).appendTo($padding);

    //circle,boxed...optionsbecametoggled
    $imagePopover.find('[data-event="imageShape"]:not([data-value])').remove();
    var$button=$(tplIconButton('fafa-sun-o',{
        title:_t('Shadow'),
        event:'imageShape',
        value:'shadow'
    })).insertAfter($imagePopover.find('[data-event="imageShape"][data-value="rounded-circle"]'));

    //addspinforfa
    var$spin=$('<divclass="btn-groupd-noneonly_fa"/>').insertAfter($button.parent());
    $(tplIconButton('fafa-refresh',{
            title:_t('Spin'),
            event:'imageShape',
            value:'fa-spin'
        })).appendTo($spin);

    //resizeforfa
    var$resizefa=$('<divclass="btn-groupd-noneonly_fa"/>')
        .insertAfter($imagePopover.find('.btn-group:has([data-event="resize"])'));
    for(varsize=1;size<=5;size++){
        $(tplButton('<spanclass="note-fontsize-10">'+size+'x</span>',{
          title:size+"x",
          event:'resizefa',
          value:size+''
        })).appendTo($resizefa);
    }
    var$colorfa=$airPopover.find('.note-color').clone();
    $colorfa.find(".dropdown-menu").css('min-width','172px');
    $resizefa.after($colorfa);

    //showdialogboxanddelete
    var$imageprop=$('<divclass="btn-group"/>');
    $imageprop.appendTo($imagePopover.find('.popover-body'));
    $(tplIconButton('fafa-file-image-o',{
            title:_t('Edit'),
            event:'showImageDialog'
        })).appendTo($imageprop);
    $(tplIconButton('fafa-trash-o',{
            title:_t('Remove'),
            event:'delete'
        })).appendTo($imageprop);

    $(tplIconButton('fafa-crop',{
        title:_t('CropImage'),
        event:'cropImage',
    })).insertAfter($imagePopover.find('[data-event="imageShape"][data-value="img-thumbnail"]'));

    $imagePopover.find('.popover-body').append($airPopover.find(".note-history").clone());

    $imagePopover.find('[data-event="showImageDialog"]').before($airPopover.find('[data-event="showLinkDialog"]').clone());

    var$alt=$('<divclass="btn-group"/>');
    $alt.appendTo($imagePopover.find('.popover-body'));
    $alt.append('<buttonclass="btnbtn-secondary"data-event="alt"><strong>'+_t('Description')+':</strong><spanclass="o_image_alt"/></button>');

    ////////////////linkpopover

    $linkPopover.find('.popover-body').append($airPopover.find(".note-history").clone());

    $linkPopover.find('button[data-event="showLinkDialog"]i').attr("class","fafa-link");
    $linkPopover.find('button[data-event="unlink"]').before($airPopover.find('button[data-event="showImageDialog"]').clone());

    ////////////////text/airpopover

    ////highlightthetextformat
    $airPopover.find('.note-style.dropdown-toggle').on('mousedown',function(){
        var$format=$airPopover.find('[data-event="formatBlock"]');
        varnode=range.create().sc;
        varformats=$format.map(function(){return$(this).data("value");}).get();
        while(node&&(!node.tagName||(!node.tagName||formats.indexOf(node.tagName.toLowerCase())===-1))){
            node=node.parentNode;
        }
        $format.removeClass('active');
        $format.filter('[data-value="'+(node?node.tagName.toLowerCase():"p")+'"]')
            .addClass("active");
    });

    ////////////////tooltip

    setTimeout(function(){
        $airPopover.add($linkPopover).add($imagePopover).find("button")
            .tooltip('dispose')
            .tooltip({
                container:'body',
                trigger:'hover',
                placement:'bottom'
            }).on('click',function(){$(this).tooltip('hide');});
    });

    return$popover;
};

varfn_boutton_update=eventHandler.modules.popover.button.update;
eventHandler.modules.popover.button.update=function($container,oStyle){
    //stopanimationwheneditcontent
    varprevious=$(".note-control-selection").data('target');
    if(previous){
        var$previous=$(previous);
        $previous.css({"-webkit-animation-play-state":"","animation-play-state":"","-webkit-transition":"","transition":"","-webkit-animation":"","animation":""});
        $previous.find('.o_we_selected_image').addBack('.o_we_selected_image').removeClass('o_we_selected_image');
    }
    //end

    fn_boutton_update.call(this,$container,oStyle);

    $container.find('.note-color').removeClass('d-none');

    if(oStyle.image){
        $container.find('[data-event]').removeClass("active");

        $container.find('a[data-event="padding"][data-value="small"]').toggleClass("active",$(oStyle.image).hasClass("padding-small"));
        $container.find('a[data-event="padding"][data-value="medium"]').toggleClass("active",$(oStyle.image).hasClass("padding-medium"));
        $container.find('a[data-event="padding"][data-value="large"]').toggleClass("active",$(oStyle.image).hasClass("padding-large"));
        $container.find('a[data-event="padding"][data-value="xl"]').toggleClass("active",$(oStyle.image).hasClass("padding-xl"));
        $container.find('a[data-event="padding"][data-value=""]').toggleClass("active",!$container.find('lia.active[data-event="padding"]').length);

        $(oStyle.image).addClass('o_we_selected_image');

        if(dom.isImgFont(oStyle.image)){
            $container.find('.note-fore-color-preview>button>.caret').css('border-bottom-color',$(oStyle.image).css('color'));
            $container.find('.note-back-color-preview>button>.caret').css('border-bottom-color',$(oStyle.image).css('background-color'));

            $container.find('.btn-group:not(.only_fa):has(button[data-event="resize"],button[data-value="img-thumbnail"])').addClass('d-none');
            $container.find('.only_fa').removeClass('d-none');
            $container.find('button[data-event="resizefa"][data-value="2"]').toggleClass("active",$(oStyle.image).hasClass("fa-2x"));
            $container.find('button[data-event="resizefa"][data-value="3"]').toggleClass("active",$(oStyle.image).hasClass("fa-3x"));
            $container.find('button[data-event="resizefa"][data-value="4"]').toggleClass("active",$(oStyle.image).hasClass("fa-4x"));
            $container.find('button[data-event="resizefa"][data-value="5"]').toggleClass("active",$(oStyle.image).hasClass("fa-5x"));
            $container.find('button[data-event="resizefa"][data-value="1"]').toggleClass("active",!$container.find('.active[data-event="resizefa"]').length);
            $container.find('button[data-event="cropImage"]').addClass('d-none');

            $container.find('button[data-event="imageShape"][data-value="fa-spin"]').toggleClass("active",$(oStyle.image).hasClass("fa-spin"));
            $container.find('button[data-event="imageShape"][data-value="shadow"]').toggleClass("active",$(oStyle.image).hasClass("shadow"));
            $container.find('.btn-group:has(button[data-event="imageShape"])').removeClass("d-none");

        }else{
            $container.find('.d-none:not(.only_fa,.note-recent-color)').removeClass('d-none');
            $container.find('button[data-event="cropImage"]').removeClass('d-none');
            $container.find('.only_fa').addClass('d-none');
            varwidth=($(oStyle.image).attr('style')||'').match(/(^|;|\s)width:\s*([0-9]+%)/);
            if(width){
                width=width[2];
            }
            $container.find('button[data-event="resize"][data-value="auto"]').toggleClass("active",width!=="100%"&&width!=="50%"&&width!=="25%");
            $container.find('button[data-event="resize"][data-value="1"]').toggleClass("active",width==="100%");
            $container.find('button[data-event="resize"][data-value="0.5"]').toggleClass("active",width==="50%");
            $container.find('button[data-event="resize"][data-value="0.25"]').toggleClass("active",width==="25%");

            $container.find('button[data-event="imageShape"][data-value="shadow"]').toggleClass("active",$(oStyle.image).hasClass("shadow"));

            if(!$(oStyle.image).is("img")){
                $container.find('.btn-group:has(button[data-event="imageShape"])').addClass('d-none');
            }

            $container.find('.note-color').addClass('d-none');
        }

        $container.find('button[data-event="floatMe"][data-value="left"]').toggleClass("active",$(oStyle.image).hasClass("float-left"));
        $container.find('button[data-event="floatMe"][data-value="center"]').toggleClass("active",$(oStyle.image).hasClass("d-blockmx-auto"));
        $container.find('button[data-event="floatMe"][data-value="right"]').toggleClass("active",$(oStyle.image).hasClass("float-right"));

        $(oStyle.image).trigger('attributes_change');
    }else{
        $container.find('.note-fore-color-preview>button>.caret').css('border-bottom-color',oStyle.color);
        $container.find('.note-back-color-preview>button>.caret').css('border-bottom-color',oStyle['background-color']);
    }
};

varfn_toolbar_boutton_update=eventHandler.modules.toolbar.button.update;
eventHandler.modules.toolbar.button.update=function($container,oStyle){
    fn_toolbar_boutton_update.call(this,$container,oStyle);

    $container.find('button[data-event="insertUnorderedList"]').toggleClass("active",$(oStyle.ancestors).is('ul:not(.o_checklist)'));
    $container.find('button[data-event="insertOrderedList"]').toggleClass("active",$(oStyle.ancestors).is('ol'));
    $container.find('button[data-event="insertCheckList"]').toggleClass("active",$(oStyle.ancestors).is('ul.o_checklist'));
};

varfn_popover_update=eventHandler.modules.popover.update;
eventHandler.modules.popover.update=function($popover,oStyle,isAirMode){
    var$imagePopover=$popover.find('.note-image-popover');
    var$linkPopover=$popover.find('.note-link-popover');
    var$airPopover=$popover.find('.note-air-popover');

    fn_popover_update.call(this,$popover,oStyle,isAirMode);

    if(oStyle.image){
        if(oStyle.image.parentNode.className.match(/(^|\s)media_iframe_video(\s|$)/i)){
            oStyle.image=oStyle.image.parentNode;
        }
        varalt= $(oStyle.image).attr("alt");

        $imagePopover.find('.o_image_alt').text((alt||"").replace(/&quot;/g,'"')).parent().toggle(oStyle.image.tagName==="IMG");
        $imagePopover.show();

        //forvideotag(non-void)weselecttherangeoverthetag,
        //forothermediatypeswegetthefirstdescendantleafelement
        vartarget_node=oStyle.image;
        if(!oStyle.image.className.match(/(^|\s)media_iframe_video(\s|$)/i)){
            target_node=dom.firstChild(target_node);
        }
        range.createFromNode(target_node).select();
        //saverangeontheeditorsoitisnotlostifrestored
        eventHandler.modules.editor.saveRange(dom.makeLayoutInfo(target_node).editable());
    }else{
        $(".note-control-selection").hide();
    }

    if(oStyle.image||(oStyle.range&&(!oStyle.range.isCollapsed()||(oStyle.range.sc.tagName&&!dom.isAnchor(oStyle.range.sc))))||(oStyle.image&&!$(oStyle.image).closest('a').length)){
        $linkPopover.hide();
        oStyle.anchor=false;
    }

    if(oStyle.image||oStyle.anchor||(oStyle.range
        &&(!$(oStyle.range.sc).closest('.note-editable').length
        ||!$(oStyle.range.sc).parent().is(':o_editable')))){
        $airPopover.hide();
    }else{
        $airPopover.show();
    }

    const$externalHistoryButtons=$('.o_we_external_history_buttons');
    if($externalHistoryButtons.length){
        const$noteHistory=$('.note-history');
        $noteHistory.addClass('d-none');
        $externalHistoryButtons.find(':first-child').prop('disabled',$noteHistory.find('[data-event=undo]').prop('disabled'));
        $externalHistoryButtons.find(':last-child').prop('disabled',$noteHistory.find('[data-event=redo]').prop('disabled'));
    }
    $popover.trigger('summernote_popover_update_call');
};

varfn_handle_update=eventHandler.modules.handle.update;
eventHandler.modules.handle.update=function($handle,oStyle,isAirMode){
    fn_handle_update.call(this,$handle,oStyle,isAirMode);
    if(oStyle.image){
        $handle.find('.note-control-selection').hide();
    }
};

//Hackforimageandlinkeditor
functiongetImgTarget($editable){
    var$handle=$editable?dom.makeLayoutInfo($editable).handle():undefined;
    return$(".note-control-selection",$handle).data('target');
}
eventHandler.modules.editor.padding=function($editable,sValue){
    var$target=$(getImgTarget($editable));
    varpaddings="smallmediumlargexl".split(/\s+/);
    $editable.data('NoteHistory').recordUndo();
    if(sValue.length){
        paddings.splice(paddings.indexOf(sValue),1);
        $target.toggleClass('padding-'+sValue);
    }
    $target.removeClass("padding-"+paddings.join("padding-"));
};
eventHandler.modules.editor.resize=function($editable,sValue){
    var$target=$(getImgTarget($editable));
    $editable.data('NoteHistory').recordUndo();
    varwidth=($target.attr('style')||'').match(/(^|;|\s)width:\s*([0-9]+)%/);
    if(width){
        width=width[2]/100;
    }
    $target.css('width',(width!==sValue&&sValue!=="auto")?(sValue*100)+'%':'');
};
eventHandler.modules.editor.resizefa=function($editable,sValue){
    var$target=$(getImgTarget($editable));
    $editable.data('NoteHistory').recordUndo();
    $target.attr('class',$target.attr('class').replace(/\s*fa-[0-9]+x/g,''));
    if(+sValue>1){
        $target.addClass('fa-'+sValue+'x');
    }
};
eventHandler.modules.editor.floatMe=function($editable,sValue){
    var$target=$(getImgTarget($editable));
    $editable.data('NoteHistory').recordUndo();
    switch(sValue){
        case'center':$target.toggleClass('d-blockmx-auto').removeClass('float-rightfloat-leftml-auto');break;
        case'left':$target.toggleClass('float-left').removeClass('float-rightd-blockmx-automl-auto');break;
        case'right':$target.toggleClass('ml-autofloat-right').removeClass('float-leftd-blockmx-auto');break;
    }
};
eventHandler.modules.editor.imageShape=function($editable,sValue){
    var$target=$(getImgTarget($editable));
    $editable.data('NoteHistory').recordUndo();
    $target.toggleClass(sValue);
};

eventHandler.modules.linkDialog.showLinkDialog=function($editable,$dialog,linkInfo){
    $editable.data('range').select();
    $editable.data('NoteHistory').recordUndo();

    varcommonAncestor=linkInfo.range.commonAncestor();
    if(commonAncestor&&commonAncestor.closest){
        varlink=commonAncestor.closest('a');
        linkInfo.className=link&&link.className;
    }

    vardef=new$.Deferred();
    topBus.trigger('link_dialog_demand',{
        $editable:$editable,
        linkInfo:linkInfo,
        onSave:function(linkInfo){
            linkInfo.range.select();
            $editable.data('range',linkInfo.range);
            def.resolve(linkInfo);
            $editable.trigger('keyup');
            $('.note-popover.note-link-popover').show();
        },
        onCancel:def.reject.bind(def),
    });
    returndef;
};
varoriginalShowImageDialog=eventHandler.modules.imageDialog.showImageDialog;
eventHandler.modules.imageDialog.showImageDialog=function($editable){
    varoptions=$editable.closest('.o_editable,.note-editor').data('options');
    if(options.disableFullMediaDialog){
        returnoriginalShowImageDialog.apply(this,arguments);
    }
    varr=$editable.data('range');
    if(r.sc.tagName&&r.sc.childNodes.length){
        r.sc=r.sc.childNodes[r.so];
    }
    varmedia=$(r.sc).parents().addBack().filter(function(i,el){
        returndom.isImg(el);
    })[0];
    topBus.trigger('media_dialog_demand',{
        $editable:$editable,
        media:media,
        options:{
            onUpload:$editable.data('callbacks').onUpload,
            noVideos:options&&options.noVideos,
        },
        onSave:function(newMedia){
            if(!newMedia){
                return;
            }
            if(media){
                $(media).replaceWith(newMedia);
            }else{
                r.insertNode(newMedia);
            }
        },
    });
    returnnew$.Deferred().reject();
};
$.summernote.pluginEvents.alt=function(event,editor,layoutInfo,sorted){
    var$editable=layoutInfo.editable();
    var$selection=layoutInfo.handle().find('.note-control-selection');
    topBus.trigger('alt_dialog_demand',{
        $editable:$editable,
        media:$selection.data('target'),
    });
};
$.summernote.pluginEvents.cropImage=function(event,editor,layoutInfo,sorted){
    var$editable=layoutInfo.editable();
    var$selection=layoutInfo.handle().find('.note-control-selection');
    topBus.trigger('crop_image_demand',{
        $editable:$editable,
        media:$selection.data('target'),
    });
};

//Utils
varfn_is_void=dom.isVoid||function(){};
dom.isVoid=function(node){
    returnfn_is_void(node)||dom.isImgFont(node)||(node&&node.className&&node.className.match(/(^|\s)media_iframe_video(\s|$)/i));
};
varfn_is_img=dom.isImg||function(){};
dom.isImg=function(node){
    returnfn_is_img(node)||dom.isImgFont(node)||(node&&(node.nodeName==="IMG"||(node.className&&node.className.match(/(^|\s)(media_iframe_video|o_image)(\s|$)/i))));
};
varfn_is_forbidden_node=dom.isForbiddenNode||function(){};
dom.isForbiddenNode=function(node){
    if(node.tagName==="BR"){
        returnfalse;
    }
    returnfn_is_forbidden_node(node)||$(node).is(".media_iframe_video");
};
varfn_is_img_font=dom.isImgFont||function(){};
dom.isImgFont=function(node){
    if(fn_is_img_font(node))returntrue;

    varnodeName=node&&node.nodeName.toUpperCase();
    varclassName=(node&&node.className||"");
    if(node&&(nodeName==="SPAN"||nodeName==="I")&&className.length){
        varclassNames=className.split(/\s+/);
        for(vark=0;k<fonts.fontIcons.length;k++){
            if(_.intersection(fonts.fontIcons[k].alias,classNames).length){
                returntrue;
            }
        }
    }
    returnfalse;
};
varfn_is_font=dom.isFont;//re-overwritefonttoincludethemeicons
dom.isFont=function(node){
    returnfn_is_font(node)||dom.isImgFont(node);
};

varfn_visible=$.summernote.pluginEvents.visible;
$.summernote.pluginEvents.visible=function(event,editor,layoutInfo){
    varres=fn_visible.apply(this,arguments);
    varrng=range.create();
    if(!rng)returnres;
    var$node=$(dom.node(rng.sc));
    if(($node.is('[data-oe-type="html"]')||$node.is('[data-oe-field="arch"]'))&&
        $node.hasClass("o_editable")&&
        !$node[0].children.length&&
        "h1h2h3h4h5h6pbboldiucodesupstrongsmallprethtdspanlabel".toUpperCase().indexOf($node[0].nodeName)===-1){
        varp=$('<p><br/></p>')[0];
        $node.append(p);
        range.createFromNode(p.firstChild).select();
    }
    returnres;
};

functionprettify_html(html){
    html=html.trim();
    varresult='',
        level=0,
        get_space=function(level){
            vari=level,space='';
            while(i--)space+=' ';
            returnspace;
        },
        reg=/^<\/?(a|span|font|u|em|i|strong|b)(\s|>)/i,
        inline_level=Infinity,
        tokens=_.compact(_.flatten(_.map(html.split(/</),function(value){
            value=value.replace(/\s+/g,'').split(/>/);
            value[0]=/\S/.test(value[0])?'<'+value[0]+'>':'';
            returnvalue;
        })));

    //reduce=>mergeinlinestyle+text

    for(vari=0,l=tokens.length;i<l;i++){
        vartoken=tokens[i];
        varinline_tag=reg.test(token);
        varinline=inline_tag||inline_level<=level;

        if(token[0]==='<'&&token[1]==='/'){
            if(inline_tag&&inline_level===level){
                inline_level=Infinity;
            }
            level--;
        }

        if(!inline&&!/\S/.test(token)){
            continue;
        }
        if(!inline||(token[1]!=='/'&&inline_level>level)){
            result+=get_space(level);
        }

        if(token[0]==='<'&&token[1]!=='/'){
            level++;
            if(inline_tag&&inline_level>level){
                inline_level=level;
            }
        }

        if(token.match(/^<(img|hr|br)/)){
            level--;
        }

        //don'ttriminlinecontent(whichcouldchangeappearance)
        if(!inline){
            token=token.trim();
        }

        result+=token.replace(/\s+/,'');

        if(inline_level>level){
            result+='\n';
        }
    }
    returnresult;
}

/*
 *Thisoverridewhenclickingonthe'CodeView'buttonhastwoaims:
 *
 *-haveourowncodeviewimplementationforFieldTextHtml
 *-addan'enable'paramatertocallthefunctiondirectlyandallowusto
 *  disable(false)orenable(true)thecodeviewmode.
 */
$.summernote.pluginEvents.codeview=function(event,editor,layoutInfo,enable){
    if(!layoutInfo){
        return;
    }
    if(layoutInfo.toolbar){
        //ifeditorinline(FieldTextHtmlSimple)
        varis_activated=$.summernote.eventHandler.modules.codeview.isActivated(layoutInfo);
        if(is_activated===enable){
            return;
        }
        returneventHandler.modules.codeview.toggle(layoutInfo);
    }else{
        //ifeditoriframe(FieldTextHtml)
        var$editor=layoutInfo.editor();
        var$textarea=$editor.prev('textarea');
        if($textarea.is('textarea')===enable){
            return;
        }

        if(!$textarea.length){
            //initandcreatetexarea
            varhtml=prettify_html($editor.prop("innerHTML"));
            $editor.parent().css({
                'position':'absolute',
                'top':0,
                'bottom':0,
                'left':0,
                'right':0
            });
            $textarea=$('<textarea/>').css({
                'margin':'0-4px',
                'padding':'04px',
                'border':0,
                'top':'51px',
                'left':'620px',
                'width':'100%',
                'font-family':'sans-serif',
                'font-size':'13px',
                'height':'98%',
                'white-space':'pre',
                'word-wrap':'normal'
            }).val(html).data('init',html);
            $editor.before($textarea);
            $editor.hide();
        }else{
            //savechanges
            $editor.prop('innerHTML',$textarea.val().replace(/\s*\n\s*/g,'')).trigger('content_changed');
            $textarea.remove();
            $editor.show();
        }
    }
};

//Fixieandre-rangetodon'tbreaksnippet
varlast_div;
varlast_div_change;
varlast_editable;
varinitial_data={};
functionreRangeSelectKey(event){
    initial_data.range=null;
    if(event.shiftKey&&event.keyCode>=37&&event.keyCode<=40&&!$(event.target).is("input,textarea,select")){
        varr=range.create();
        if(r){
            varrng=r.reRange(event.keyCode<=38);
            if(r!==rng){
                rng.select();
            }
        }
    }
}
functionreRangeSelect(event,dx,dy){
    varr=range.create();
    if(!r||r.isCollapsed())return;

    //checkiftheusermovethecaretonupordown
    vardata=r.reRange(dy<0||(dy===0&&dx<0));

    if(data.sc!==r.sc||data.so!==r.so||data.ec!==r.ec||data.eo!==r.eo){
        setTimeout(function(){
            data.select();
            $(data.sc.parentNode).closest('.note-popover');
        },0);
    }

    $(data.sc).closest('.o_editable').data('range',r);
    returnr;
}
functionsummernote_mouseup(event){
    if($(event.target).closest("#web_editor-top-navbar,.note-popover").length){
        return;
    }
    //don'trerangeifsimpleclick
    if(initial_data.event){
        vardx=event.clientX-(event.shiftKey&&initial_data.rect?initial_data.rect.left:initial_data.event.clientX);
        vardy=event.clientY-(event.shiftKey&&initial_data.rect?initial_data.rect.top:initial_data.event.clientY);
        if(10<Math.pow(dx,2)+Math.pow(dy,2)){
            reRangeSelect(event,dx,dy);
        }
    }

    if(!$(event.target).closest(".o_editable").length){
        return;
    }
    if(!initial_data.range||!event.shiftKey){
        setTimeout(function(){
            initial_data.range=range.create();
        },0);
    }
}
varremember_selection;
functionsummernote_mousedown(event){
    rte.history.splitNext();

    var$editable=$(event.target).closest(".o_editable,.note-editor");
    varr;

    if(document.documentMode){
        summernote_ie_fix(event,function(node){returnnode.tagName==="DIV"||node.tagName==="IMG"||(node.dataset&&node.dataset.oeModel);});
    }elseif(last_div&&event.target!==last_div){
        if(last_div.tagName==="A"){
            summernote_ie_fix(event,function(node){returnnode.dataset&&node.dataset.oeModel;});
        }elseif($editable.length){
            if(summernote_ie_fix(event,function(node){returnnode.tagName==="A";})){
                r=range.create();
                r.select();
            }
        }
    }

    //restorerangeifrangelostafterclickingonnon-editablearea
    try{
        r=range.create();
    }catch(e){
        //Ifthiscodeisrunninginsideaniframe-editorandthattherange
        //isoutsideofthisiframe,thiswillfailastheiframedoesnothave
        //thepermissiontochecktheoutsidecontentthisway.Inthatcase,
        //wesimplyignoretheexceptionasitisasiftherewasnorange.
        return;
    }
    vareditables=$(".o_editable[contenteditable],.note-editable[contenteditable]");
    varr_editable=editables.has((r||{}).sc).addBack(editables.filter((r||{}).sc));
    if(!r_editable.closest('.note-editor').is($editable)&&!r_editable.filter('.o_editable').is(editables)){
        varsaved_editable=editables.has((remember_selection||{}).sc);
        if($editable.length&&!saved_editable.closest('.o_editable,.note-editor').is($editable)){
            remember_selection=range.create(dom.firstChild($editable[0]),0);
        }elseif(!saved_editable.length){
            remember_selection=undefined;
        }
        if(remember_selection){
            try{
                remember_selection.select();
            }catch(e){
                console.warn(e);
            }
        }
    }elseif(r_editable.length){
        remember_selection=r;
    }

    initial_data.event=event;

    //keepselectionwhenclickwithshift
    if(event.shiftKey&&$editable.length){
        if(initial_data.range){
            initial_data.range.select();
        }
        varrect=r&&r.getClientRects();
        initial_data.rect=rect&&rect.length?rect[0]:{top:0,left:0};
    }
}

functionsummernote_ie_fix(event,pred){
    vareditable;
    vardiv;
    varnode=event.target;
    while(node.parentNode){
        if(!div&&pred(node)){
            div=node;
        }
        if(last_div!==node&&(node.getAttribute('contentEditable')==='false'||node.className&&(node.className.indexOf('o_not_editable')!==-1))){
            break;
        }
        if(node.className&&node.className.indexOf('o_editable')!==-1){
            if(!div){
                div=node;
            }
            editable=node;
            break;
        }
        node=node.parentNode;
    }

    if(!editable){
        $(last_div_change).removeAttr("contentEditable").removeProp("contentEditable");
        $(last_editable).attr("contentEditable","true").prop("contentEditable","true");
        last_div_change=null;
        last_editable=null;
        return;
    }

    if(div===last_div){
        return;
    }

    last_div=div;

    $(last_div_change).removeAttr("contentEditable").removeProp("contentEditable");

    if(last_editable!==editable){
        if($(editable).is("[contentEditable='true']")){
           $(editable).removeAttr("contentEditable").removeProp("contentEditable");
            last_editable=editable;
        }else{
            last_editable=null;
        }
    }
    if(!$(div).attr("contentEditable")&&!$(div).is("[data-oe-type='many2one'],[data-oe-type='contact']")){
        $(div).attr("contentEditable","true").prop("contentEditable","true");
        last_div_change=div;
    }else{
        last_div_change=null;
    }
    returneditable!==div?div:null;
}

varfn_attach=eventHandler.attach;
eventHandler.attach=function(oLayoutInfo,options){
    fn_attach.call(this,oLayoutInfo,options);

    oLayoutInfo.editor().on('dragstart','img',function(e){e.preventDefault();});
    $(document).on('mousedown',summernote_mousedown).on('mouseup',summernote_mouseup);
    oLayoutInfo.editor().off('click').on('click',function(e){e.preventDefault();});//ifthecontenteditableisalink
    oLayoutInfo.editor().find('.note-image-dialog').on('click','.note-image-input',function(e){
        e.stopPropagation();//letbrowserdefaulthappenforimagefileinput
    });

    /**
     *OpenMediaDialogondoubleclickonanimage/video/icon.
     *Showsatooltiponclicktosaytotheuserhecandoubleclick.
     */
    create_dblclick_feature("img,.media_iframe_video,i.fa,span.fa,a.o_image",function(){
        eventHandler.modules.imageDialog.show(oLayoutInfo);
    });

    /**
     *OpenLinkDialogondoubleclickonalink/button.
     *Showsatooltiponclicktosaytotheuserhecandoubleclick.
     */
    create_dblclick_feature("a[href],a.btn,button.btn",function(){
        eventHandler.modules.linkDialog.show(oLayoutInfo);
    });

    oLayoutInfo.editable().on('mousedown',function(e){
        if(dom.isImg(e.target)&&dom.isContentEditable(e.target)){
            range.createFromNode(e.target).select();
        }
    });
    $(document).on("keyup",reRangeSelectKey);

    varclone_data=false;

    if(options.model){
        oLayoutInfo.editable().data({'oe-model':options.model,'oe-id':options.id});
    }
    if(options.getMediaDomain){
        oLayoutInfo.editable().data('oe-media-domain',options.getMediaDomain);
    }

    var$node=oLayoutInfo.editor();
    if($node.data('oe-model')||$node.data('oe-translation-id')){
        $node.on('content_changed',function(){
            var$nodes=$('[data-oe-model],[data-oe-translation-id]')
                .filter(function(){returnthis!==$node[0];});

            if($node.data('oe-model')){
                $nodes=$nodes.filter('[data-oe-model="'+$node.data('oe-model')+'"]')
                    .filter('[data-oe-id="'+$node.data('oe-id')+'"]')
                    .filter('[data-oe-field="'+$node.data('oe-field')+'"]');
            }
            if($node.data('oe-translation-id'))$nodes=$nodes.filter('[data-oe-translation-id="'+$node.data('oe-translation-id')+'"]');
            if($node.data('oe-type'))$nodes=$nodes.filter('[data-oe-type="'+$node.data('oe-type')+'"]');
            if($node.data('oe-expression'))$nodes=$nodes.filter('[data-oe-expression="'+$node.data('oe-expression')+'"]');
            if($node.data('oe-xpath'))$nodes=$nodes.filter('[data-oe-xpath="'+$node.data('oe-xpath')+'"]');
            if($node.data('oe-contact-options'))$nodes=$nodes.filter('[data-oe-contact-options="'+$node.data('oe-contact-options')+'"]');

            varnodes=$node.get();

            if($node.data('oe-type')==="many2one"){
                $nodes=$nodes.add($('[data-oe-model]')
                    .filter(function(){returnthis!==$node[0]&&nodes.indexOf(this)===-1;})
                    .filter('[data-oe-many2one-model="'+$node.data('oe-many2one-model')+'"]')
                    .filter('[data-oe-many2one-id="'+$node.data('oe-many2one-id')+'"]')
                    .filter('[data-oe-type="many2one"]'));

                $nodes=$nodes.add($('[data-oe-model]')
                    .filter(function(){returnthis!==$node[0]&&nodes.indexOf(this)===-1;})
                    .filter('[data-oe-model="'+$node.data('oe-many2one-model')+'"]')
                    .filter('[data-oe-id="'+$node.data('oe-many2one-id')+'"]')
                    .filter('[data-oe-field="name"]'));
            }

            if(!clone_data){
                clone_data=true;
                $nodes.html(this.innerHTML);
                clone_data=false;
            }
        });
    }

    varcustom_toolbar=oLayoutInfo.toolbar?oLayoutInfo.toolbar():undefined;
    var$toolbar=$(oLayoutInfo.popover()).add(custom_toolbar);
    $('button[data-event="undo"],button[data-event="redo"]',$toolbar).attr('disabled',true);

    $(oLayoutInfo.editor())
        .add(oLayoutInfo.handle())
        .add(oLayoutInfo.popover())
        .add(custom_toolbar)
        .on('clickcontent_changed',function(){
            $('button[data-event="undo"]',$toolbar).attr('disabled',!oLayoutInfo.editable().data('NoteHistory').hasUndo());
            $('button[data-event="redo"]',$toolbar).attr('disabled',!oLayoutInfo.editable().data('NoteHistory').hasRedo());
        });

    functioncreate_dblclick_feature(selector,callback){
        varshow_tooltip=true;

        oLayoutInfo.editor().on("dblclick",selector,function(e){
            var$target=$(e.target);
            if(!dom.isContentEditable($target)){
                //Preventeditionofnoneditableparts
                return;
            }

            show_tooltip=false;
            callback();
            e.stopImmediatePropagation();
        });

        oLayoutInfo.editor().on("click",selector,function(e){
            var$target=$(e.target);
            if(!dom.isContentEditable($target)){
                //Preventeditionofnoneditableparts
                return;
            }

            show_tooltip=true;
            setTimeout(function(){
                //Donotshowtooltipondouble-clickandifthereisalreadyone
                if(!show_tooltip||$target.attr('title')!==undefined){
                    return;
                }
                $target.tooltip({title:_t('Double-clicktoedit'),trigger:'manuel',container:'body'}).tooltip('show');
                setTimeout(function(){
                    $target.tooltip('dispose');
                },800);
            },400);
        });
    }
};
varfn_detach=eventHandler.detach;
eventHandler.detach=function(oLayoutInfo,options){
    fn_detach.call(this,oLayoutInfo,options);
    oLayoutInfo.editable().off('mousedown');
    oLayoutInfo.editor().off("dragstart");
    oLayoutInfo.editor().off('click');
    $(document).off('mousedown',summernote_mousedown);
    $(document).off('mouseup',summernote_mouseup);
    oLayoutInfo.editor().off("dblclick");
    $(document).off("keyup",reRangeSelectKey);
};

//Translationforflectra
$.summernote.lang.flectra={
    font:{
      bold:_t('Bold'),
      italic:_t('Italic'),
      underline:_t('Underline'),
      strikethrough:_t('Strikethrough'),
      subscript:_t('Subscript'),
      superscript:_t('Superscript'),
      clear:_t('RemoveFontStyle'),
      height:_t('LineHeight'),
      name:_t('FontFamily'),
      size:_t('FontSize')
    },
    image:{
      image:_t('File/Image'),
      insert:_t('InsertImage'),
      resizeFull:_t('ResizeFull'),
      resizeHalf:_t('ResizeHalf'),
      resizeQuarter:_t('ResizeQuarter'),
      floatLeft:_t('FloatLeft'),
      floatRight:_t('FloatRight'),
      floatNone:_t('FloatNone'),
      dragImageHere:_t('Draganimagehere'),
      selectFromFiles:_t('Selectfromfiles'),
      url:_t('ImageURL'),
      remove:_t('RemoveImage')
    },
    link:{
      link:_t('Link'),
      insert:_t('InsertLink'),
      unlink:_t('Unlink'),
      edit:_t('Edit'),
      textToDisplay:_t('Texttodisplay'),
      url:_t('TowhatURLshouldthislinkgo?'),
      openInNewWindow:_t('Openinnewwindow')
    },
    video:{
      video:_t('Video'),
      videoLink:_t('VideoLink'),
      insert:_t('InsertVideo'),
      url:_t('VideoURL?'),
      providers:_t('(YouTube,Vimeo,Vine,Instagram,DailyMotionorYouku)')
    },
    table:{
      table:_t('Table')
    },
    hr:{
      insert:_t('InsertHorizontalRule')
    },
    style:{
      style:_t('Style'),
      normal:_t('Normal'),
      blockquote:_t('Quote'),
      pre:_t('Code'),
      small:_t('Small'),
      h1:_t('Header1'),
      h2:_t('Header2'),
      h3:_t('Header3'),
      h4:_t('Header4'),
      h5:_t('Header5'),
      h6:_t('Header6')
    },
    lists:{
      unordered:_t('Unorderedlist'),
      ordered:_t('Orderedlist')
    },
    options:{
      help:_t('Help'),
      fullscreen:_t('FullScreen'),
      codeview:_t('CodeView')
    },
    paragraph:{
      paragraph:_t('Paragraph'),
      outdent:_t('Outdent'),
      indent:_t('Indent'),
      left:_t('Alignleft'),
      center:_t('Aligncenter'),
      right:_t('Alignright'),
      justify:_t('Justifyfull')
    },
    color:{
      custom:_t('CustomColor'),
      background:_t('BackgroundColor'),
      foreground:_t('FontColor'),
      transparent:_t('Transparent'),
      setTransparent:_t('None'),
    },
    shortcut:{
      shortcuts:_t('Keyboardshortcuts'),
      close:_t('Close'),
      textFormatting:_t('Textformatting'),
      action:_t('Action'),
      paragraphFormatting:_t('Paragraphformatting'),
      documentStyle:_t('DocumentStyle')
    },
    history:{
      undo:_t('Undo'),
      redo:_t('Redo')
    }
};

//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

/**
 *@todogetridofthis.Thishasbeenimplementedasafixtobeableto
 *instantiatemedia,linkandaltdialogsoutsidethemaineditor:inthe
 *simpleHTMLfieldsandforumtextarea.
 */
varSummernoteManager=Class.extend(mixins.EventDispatcherMixin,ServicesMixin,{
    /**
     *@constructor
     */
    init:function(parent){
        mixins.EventDispatcherMixin.init.call(this);
        this.setParent(parent);

        topBus.on('alt_dialog_demand',this,this._onAltDialogDemand);
        topBus.on('crop_image_demand',this,this._onCropImageDemand);
        topBus.on('link_dialog_demand',this,this._onLinkDialogDemand);
        topBus.on('media_dialog_demand',this,this._onMediaDialogDemand);
    },
    /**
     *@override
     */
    destroy:function(){
        mixins.EventDispatcherMixin.destroy.call(this);

        topBus.off('alt_dialog_demand',this,this._onAltDialogDemand);
        topBus.off('crop_image_demand',this,this._onCropImageDemand);
        topBus.off('link_dialog_demand',this,this._onLinkDialogDemand);
        topBus.off('media_dialog_demand',this,this._onMediaDialogDemand);
    },

    /**
     *Createmodifiedimageattachments.
     *
     *@param{jQuery}$editable
     *@returns{Promise}
     */
    saveModifiedImages:function($editable){
        constdefs=_.map($editable,asynceditableEl=>{
            const{oeModel:resModel,oeId:resId}=editableEl.dataset;
            constproms=[...editableEl.querySelectorAll('.o_modified_image_to_save')].map(asyncel=>{
                constisBackground=!el.matches('img');
                el.classList.remove('o_modified_image_to_save');
                //Modifyinganimagealwayscreatesacopyoftheoriginal,evenif
                //itwasmodifiedpreviously,astheothermodifiedimagemaybeused
                //elsewhereifthesnippetwasduplicatedorwassavedasacustomone.
                constnewAttachmentSrc=awaitthis._rpc({
                    route:`/web_editor/modify_image/${el.dataset.originalId}`,
                    params:{
                        res_model:resModel,
                        res_id:parseInt(resId),
                        data:(isBackground?el.dataset.bgSrc:el.getAttribute('src')).split(',')[1],
                    },
                });
                if(isBackground){
                    $(el).css('background-image',`url('${newAttachmentSrc}')`);
                    deleteel.dataset.bgSrc;
                }else{
                    el.setAttribute('src',newAttachmentSrc);
                }
            });
            returnPromise.all(proms);
        });
        returnPromise.all(defs);
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *Calledwhenademandtoopenaaltdialogisreceivedonthebus.
     *
     *@private
     *@param{Object}data
     */
    _onAltDialogDemand:function(data){
        if(data.__alreadyDone){
            return;
        }
        data.__alreadyDone=true;
        varaltDialog=newweWidgets.AltDialog(this,
            data.options||{},
            data.media
        );
        if(data.onSave){
            altDialog.on('save',this,data.onSave);
        }
        if(data.onCancel){
            altDialog.on('cancel',this,data.onCancel);
        }
        altDialog.open();
    },
    /**
     *Calledwhenademandtocropanimageisreceivedonthebus.
     *
     *@private
     *@param{Object}data
     */
    _onCropImageDemand:function(data){
        if(data.__alreadyDone){
            return;
        }
        data.__alreadyDone=true;
        newweWidgets.ImageCropWidget(this,data.media)
            .appendTo(data.$editable.parent());
    },
    /**
     *Calledwhenademandtoopenalinkdialogisreceivedonthebus.
     *
     *@private
     *@param{Object}data
     */
    _onLinkDialogDemand:function(data){
        if(data.__alreadyDone){
            return;
        }
        data.__alreadyDone=true;
        varlinkDialog=newweWidgets.LinkDialog(this,
            data.options||{},
            data.$editable,
            data.linkInfo
        );
        if(data.onSave){
            linkDialog.on('save',this,data.onSave);
        }
        if(data.onCancel){
            linkDialog.on('cancel',this,data.onCancel);
        }
        linkDialog.open();
    },
    /**
     *Calledwhenademandtoopenamediadialogisreceivedonthebus.
     *
     *@private
     *@param{Object}data
     */
    _onMediaDialogDemand:function(data){
        if(data.__alreadyDone){
            return;
        }
        data.__alreadyDone=true;

        constmodel=data.$editable.data('oe-model');
        constfield=data.$editable.data('oe-field');
        consttype=data.$editable.data('oe-type');
        varmediaDialog=newweWidgets.MediaDialog(this,
            _.extend({
                res_model:model,
                res_id:data.$editable.data('oe-id'),
                domain:data.$editable.data('oe-media-domain'),
                useMediaLibrary:field&&(model==='ir.ui.view'&&field==='arch'||type==='html'),
            },data.options),
            data.media
        );
        if(data.onSave){
            mediaDialog.on('save',this,data.onSave);
        }
        if(data.onCancel){
            mediaDialog.on('cancel',this,data.onCancel);
        }
        mediaDialog.open();
    },
});
returnSummernoteManager;
});
