#-*-coding:utf-8-*-
#PartofFlectra.SeeLICENSEfileforfullcopyrightandlicensingdetails.

fromflectra.addons.sale_mrp.testsimporttest_sale_mrp_flow
fromflectra.testsimportcommon,Form


@common.tagged('post_install','-at_install')
classTestSaleMrpFlow(test_sale_mrp_flow.TestSaleMrpFlow):

    deftest_kit_cost_calculation(self):
        """CheckthattheaveragecostpriceiscomputedcorrectlyafterSOconfirmation:
            BOM1:
                -1unitof“superkit”:
                    -2unitsof“componenta”
            BOM2:
                -1unitof“componenta”:
                    -3unitsof"componentb"
            1unitof"componentb"=$10
            1unitof"superkit"=2*3*$10=*$60
        """
        super_kit=self._cls_create_product('SuperKit',self.uom_unit)
        (super_kit+self.component_a+self.component_b).categ_id.property_cost_method='average'
        self.env['mrp.bom'].create({
            'product_tmpl_id':self.component_a.product_tmpl_id.id,
            'product_qty':1.0,
            'type':'phantom',
            'bom_line_ids':[(0,0,{
                'product_id':self.component_b.id,
                'product_qty':3.0,
            })]
        })
        self.env['mrp.bom'].create({
            'product_tmpl_id':super_kit.product_tmpl_id.id,
            'product_qty':1.0,
            'type':'phantom',
            'bom_line_ids':[(0,0,{
                'product_id':self.component_a.id,
                'product_qty':2.0,
            })]
        })
        self.component_b.standard_price=10
        self.component_a.button_bom_cost()
        super_kit.button_bom_cost()
        so_form=Form(self.env['sale.order'])
        so_form.partner_id=self.partner_a
        withso_form.order_line.new()asline:
            line.product_id=super_kit
        so=so_form.save()
        self.assertEqual(so.order_line.purchase_price,60)
        so.action_confirm()
        self.assertEqual(so.order_line.purchase_price,60)
