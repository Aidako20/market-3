flectra.define('lunch.test_utils',function(require){
"usestrict";

constAbstractStorageService=require('web.AbstractStorageService');
constRamStorage=require('web.RamStorage');
const{createView}=require('web.test_utils');

/**
 *Helpertocreatealunchviewwithsearchpanel
 *
 *@param{object}params
 */
asyncfunctioncreateLunchView(params){
    params.archs=params.archs||{};
    varsearchArch=params.archs[`${params.model},false,search`]||'<search></search>';
    varsearchPanelArch=`
        <searchpanel>
            <fieldname="category_id"select="multi"string="Categories"enable_counters="1"/>
            <fieldname="supplier_id"select="multi"string="Vendors"enable_counters="1"/>
        </searchpanel>
    `;
    searchArch=searchArch.split('</search>')[0]+searchPanelArch+'</search>';
    params.archs[`${params.model},false,search`]=searchArch;
    if(!params.services||!params.services.local_storage){
        //thesearchPanelusesthelocalStoragetostore/retrievedefault
        //activecategoryvalue
        params.services=params.services||{};
        constRamStorageService=AbstractStorageService.extend({
            storage:newRamStorage(),
        });
        params.services.local_storage=RamStorageService;
    }
    returncreateView(params);
}

/**
 *HelpertogenerateamockRPCfunctionforthemandatorylunchroutes(prefixedby'/lunch')
 *
 *@param{object}infos
 *@param{integer}userLocation
 */
functionmockLunchRPC({infos,userLocation}){
    returnasyncfunction(route){
        if(route==='/lunch/infos'){
            returnPromise.resolve(infos);
        }
        if(route==='/lunch/user_location_get'){
            returnPromise.resolve(userLocation);
        }
        returnthis._super.apply(this,arguments);
    };
}

return{
    createLunchView,
    mockLunchRPC,
};

});
