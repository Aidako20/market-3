flectra.define('note.systray.ActivityMenu',function(require){
"usestrict";

varActivityMenu=require('mail.systray.ActivityMenu');

varcore=require('web.core');
vardatepicker=require('web.datepicker');

var_t=core._t;
consturlRegExp=/http(s)?:\/\/(www\.)?[a-zA-Z0-9@:%_+~#=~#?&/=\-;!.]{3,2000}/g;

ActivityMenu.include({
    events:_.extend({},ActivityMenu.prototype.events,{
        'click.o_note_show':'_onAddNoteClick',
        'click.o_note_save':'_onNoteSaveClick',
        'click.o_note_set_datetime':'_onNoteDateTimeSetClick',
        'keydowninput.o_note_input':'_onNoteInputKeyDown',
        'click.o_note':'_onNewNoteClick',
    }),
    //--------------------------------------------------
    //Private
    //--------------------------------------------------
    /**
     *Movingnotesatfirstplace
     *@override
     */
    _getActivityData:function(){
        varself=this;
        returnthis._super.apply(this,arguments).then(function(){
            varreminderIndex=_.findIndex(self.activities,function(val){
                returnval.model==='note.note';
            });
            if(reminderIndex>0){
                self.activities.splice(0,0,self.activities.splice(reminderIndex,1)[0]);
            }
        });
    },
    /**
     *Savethenotetodatabaseusingdatepickerdateandfieldasnote
     *Bydefault,whennodatetimeisset,itusesthecurrentdatetime.
     *
     *@private
     */
    _saveNote:function(){
        varnote=this.$('.o_note_input').val().replace(urlRegExp,'<ahref="$&">$&</a>').trim();
        if(!note){
            return;
        }
        varparams={'note':note};
        varnoteDateTime=this.noteDateTimeWidget.getValue();
        if(noteDateTime){
            params=_.extend(params,{'date_deadline':noteDateTime});
        }else{
            params=_.extend(params,{'date_deadline':moment()});
        }
        this.$('.o_note_show').removeClass('d-none');
        this.$('.o_note').addClass('d-none');
        this._rpc({
            route:'/note/new',
            params:params,
        }).then(this._updateActivityPreview.bind(this));
    },
    //-----------------------------------------
    //Handlers
    //-----------------------------------------
    /**
     *@override
     */
    _onActivityFilterClick:function(ev){
        var$el=$(ev.currentTarget);
        if(!$el.hasClass("o_note")){
            vardata=_.extend({},$el.data(),$(ev.target).data());
            if(data.res_model==="note.note"&&data.filter==="my"){
                this.do_action({
                    type:'ir.actions.act_window',
                    name:data.model_name,
                    res_model: data.res_model,
                    views:[[false,'kanban'],[false,'form'],[false,'list']]
                },{
                    clear_breadcrumbs:true,
                });
            }else{
                this._super.apply(this,arguments);
            }
        }
    },
    /**
     *Whenaddnewnotebuttonclicked,togglingquicknotecreateviewinside
     *Systrayactivityview
     *
     *@private
     *@param{MouseEvent}ev
     */
    _onAddNoteClick:function(ev){
        varself=this;
        ev.stopPropagation();
        if(!this.noteDateTimeWidget){
            this.noteDateTimeWidget=newdatepicker.DateWidget(this,{useCurrent:true});
        }
        this.noteDateTimeWidget.appendTo(this.$('.o_note_datetime')).then(function(){
            self.noteDateTimeWidget.$input.attr('placeholder',_t("Today"));
            self.noteDateTimeWidget.setValue(false);
            self.$('.o_note_show,.o_note').toggleClass('d-none');
            self.$('.o_note_input').val('').focus();
        });
    },
    /**
     *Whenfocusingoninputfornewquicknotesystermtraymustbeopen.
     *Preventingtoclose
     *
     *@private
     *@param{MouseEvent}ev
     */
    _onNewNoteClick:function(ev){
        ev.stopPropagation();
    },
    /**
     *Opensdatetimepickerfornote.
     *QuickFIXduetonooptionforsetcustomiconinsteadofcaretindatepicker.
     *
     *@private
     *@param{MouseEvent}ev
     */
    _onNoteDateTimeSetClick:function(ev){
        ev.preventDefault();
        ev.stopPropagation();
        this.noteDateTimeWidget.$input.click();
    },
    /**
     *Savingnote(quickcreate)andupdatingactivitypreview
     *
     *@private
     *@param{MouseEvent}ev
     */
    _onNoteSaveClick:function(ev){
        this._saveNote();
    },
    /**
     *HandlingEnterkeyforquickcreatenote.
     *
     *@private
     *@param{KeyboardEvent}ev
     */
    _onNoteInputKeyDown:function(ev){
        if(ev.which===$.ui.keyCode.ENTER){
            this._saveNote();
        }
    },
});
});
