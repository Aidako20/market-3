flectra.define('base_import.import',function(require){
"usestrict";

varAbstractAction=require('web.AbstractAction');
varconfig=require('web.config');
varcore=require('web.core');
varsession=require('web.session');
vartime=require('web.time');
varAbstractWebClient=require('web.AbstractWebClient');
varLoading=require('web.Loading');

varQWeb=core.qweb;
var_t=core._t;
var_lt=core._lt;
varStateMachine=window.StateMachine;

/**
 *SafaridoesnotdealwellatallwithrawJSONdatabeing
 *returned.Asaresult,we'regoingtocheatbyusinga
 *pseudo-jsonp:insteadofgettingJSONdataintheiframe,we're
 *gettinga``script``tagwhichconsistsofafunctioncalland
 *thereturneddata(thejsondump).
 *
 *Thefunctionisanauto-generatednameboundto``window``,
 *whichcallsbackintothecallbackprovidedhere.
 *
 *@param{Object}formtheformelement(DOMorjQuery)touseinthecall
 *@param{Object}attributesjquery.formattributesobject
 *@param{Function}callbackfunctiontocallwiththereturneddata
 */
functionjsonp(form,attributes,callback){
    attributes=attributes||{};
    varoptions={jsonp:_.uniqueId('import_callback_')};
    window[options.jsonp]=function(){
        deletewindow[options.jsonp];
        callback.apply(null,arguments);
    };
    if('data'inattributes){
        _.extend(attributes.data,options);
    }else{
        _.extend(attributes,{data:options});
    }
    _.extend(attributes,{
        dataType:'script',
    });
    $(form).ajaxSubmit(attributes);
}
function_make_option(term){return{id:term,text:term};}
function_from_data(data,term){
    return_.findWhere(data,{id:term})||_make_option(term);
}

/**
 *queryreturnsalistofsuggestionselect2objects,thisfunction:
 *
 **returnsdataexactlymatchingquerybyeitheridortextifthoseexist
 **otherwiseitreturnsaselect2optionmatchingthetermandanydata
 *  optionwhoseidortextmatches(bysubstring)
 */
functiondataFilteredQuery(q){
    varsuggestions=_.clone(this.data);
    if(q.term){
        varexact=_.filter(suggestions,function(s){
            returns.id===q.term||s.text===q.term;
        });
        if(exact.length){
            suggestions=exact;
        }else{
            suggestions=[_make_option(q.term)].concat(_.filter(suggestions,function(s){
                returns.id.indexOf(q.term)!==-1||s.text.indexOf(q.term)!==-1
            }));
        }
    }
    q.callback({results:suggestions});
}

varDataImport=AbstractAction.extend({
    hasControlPanel:true,
    contentTemplate:'ImportView',
    opts:[
        {name:'encoding',label:_lt("Encoding:"),value:''},
        {name:'separator',label:_lt("Separator:"),value:''},
        {name:'quoting',label:_lt("TextDelimiter:"),value:'"'}
    ],
    spreadsheet_opts:[
        {name:'sheet',label:_lt("SelectedSheet:"),value:''},
    ],
    parse_opts_formats:[
        {name:'date_format',label:_lt("DateFormat:"),value:''},
        {name:'datetime_format',label:_lt("DatetimeFormat:"),value:''},
    ],
    parse_opts_separators:[
        {name:'float_thousand_separator',label:_lt("ThousandsSeparator:"),value:','},
        {name:'float_decimal_separator',label:_lt("DecimalSeparator:"),value:'.'}
    ],
    events:{
        //'change.oe_import_gridinput':'import_dryrun',
        'change.oe_import_file':'loaded_file',
        'changeinput.oe_import_has_header,.js_import_optionsinput':'settings_changed',
        'changeinput.oe_import_advanced_mode':function(e){
            this.do_not_change_match=true;
            this['settings_changed']();
        },
        'clicka.oe_import_toggle':function(e){
            e.preventDefault();
            this.$('.oe_import_options').toggle();
        },
        'click.oe_import_reporta.oe_import_report_count':function(e){
            e.preventDefault();
            $(e.target).parent().parent().toggleClass('oe_import_report_showmore');
        },
        'click.oe_import_report_see_possible_value':function(e){
            e.preventDefault();
            $(e.target).parent().toggleClass('oe_import_report_showmore');
        },
        'click.oe_import_moreinfo_actiona':function(e){
            e.preventDefault();
            //#datawillparsetheattributeonitsown,wedon'tlike
            //thatsortofthings
            varaction=JSON.parse($(e.target).attr('data-action'));
            //FIXME:whenJS-sideclean_action
            action.views=_(action.views).map(function(view){
                varid=view[0],type=view[1];
                return[
                    id,
                    type!=='tree'?type
                      :action.view_type==='form'?'list'
                      :'tree'
                ];
            });
            this.do_action(_.extend(action,{
                target:'new',
                flags:{
                    search_view:true,
                    display_title:true,
                    pager:true,
                    list:{selectable:false}
                }
            }));
        },
    },
    init:function(parent,action){
        this._super.apply(this,arguments);
        this.action_manager=parent;
        this.res_model=action.params.model;
        this.parent_context=action.params.context||{};
        //importobjectid
        this.id=null;
        this.session=session;
        this._title=_t('ImportaFile');//Displayedinthebreadcrumbs
        this.do_not_change_match=false;
        this.sheets=[];
    },
    /**
     *@override
     */
    willStart:function(){
        varself=this;
        vardef=this._rpc({
            model:this.res_model,
            method:'get_import_templates',
            context:this.parent_context,
        }).then(function(result){
            self.importTemplates=result;
        });
        returnPromise.all([this._super.apply(this,arguments),def]);
    },
    start:function(){
        varself=this;
        this.$form=this.$('form');
        this.setup_encoding_picker();
        this.setup_separator_picker();
        this.setup_float_format_picker();
        this.setup_date_format_picker();
        this.setup_sheets_picker();

        returnthis._super().then(function(){
            returnself.create_model().then(function(id){
                self.id=id;
                self.$('input[name=import_id]').val(id);

                self.renderButtons();
                varstatus={
                    cp_content:{$buttons:self.$buttons},
                };
                self.updateControlPanel(status);
            });
        });
    },
    create_model:function(){
        returnthis._rpc({
                model:'base_import.import',
                method:'create',
                args:[{res_model:this.res_model}],
                kwargs:{context:session.user_context},
            });
    },
    renderButtons:function(){
        varself=this;
        this.$buttons=$(QWeb.render("ImportView.buttons",this));
        this.$buttons.filter('.o_import_validate').on('click',this.validate.bind(this));
        this.$buttons.filter('.o_import_import').on('click',this.import.bind(this));
        this.$buttons.filter('.oe_import_file').on('click',function(){
            self.$('.o_content.oe_import_file').click();
        });
        this.$buttons.filter('.o_import_cancel').on('click',function(e){
            e.preventDefault();
            self.exit();
        });
    },
    setup_encoding_picker:function(){
        this.$('input.oe_import_encoding').select2({
            width:'50%',
            data:_.map(('utf-8utf-16windows-1252latin1latin2big5gb18030shift_jiswindows-1251koir8_r').split(/\s+/),_make_option),
            query:dataFilteredQuery,
            initSelection:function($e,c){
                returnc(_make_option($e.val()));
            }
        });
    },
    setup_separator_picker:function(){
        vardata=[
            {id:',',text:_t("Comma")},
            {id:';',text:_t("Semicolon")},
            {id:'\t',text:_t("Tab")},
            {id:'',text:_t("Space")}
        ];
        this.$('input.oe_import_separator').select2({
            width:'50%',
            data:data,
            query:dataFilteredQuery,
            //thisisnotprovidedtoinitSelectionsocan'tusethis.data
            initSelection:function($e,c){
                c(_from_data(data,$e.val())||_make_option($e.val()))
            }
        });
    },
    setup_float_format_picker:function(){
        vardata_decimal=[
            {id:',',text:_t("Comma")},
            {id:'.',text:_t("Dot")},
        ];
        vardata_digits=data_decimal.concat([{id:'',text:_t("NoSeparator")}]);
        this.$('input.oe_import_float_thousand_separator').select2({
            width:'50%',
            data:data_digits,
            query:dataFilteredQuery,
            initSelection:function($e,c){
                c(_from_data(data_digits,$e.val())||_make_option($e.val()))
            }
        });
        this.$('input.oe_import_float_decimal_separator').select2({
            width:'50%',
            data:data_decimal,
            query:dataFilteredQuery,
            initSelection:function($e,c){
                c(_from_data(data_decimal,$e.val())||_make_option($e.val()))
            }
        });
    },
    setup_date_format_picker:function(){
        vardata=_([
            'YYYY-MM-DD',
            'DD/MM/YY',
            'DD/MM/YYYY',
            'DD-MM-YYYY',
            'DD-MMM-YY',
            'DD-MMM-YYYY',
            'MM/DD/YY',
            'MM/DD/YYYY',
            'MM-DD-YY',
            'MM-DD-YYYY',
            'DDMMYY',
            'DDMMYYYY',
            'YYMMDD',
            'YYYYMMDD',
            'YY/MM/DD',
            'YYYY/MM/DD',
            'MMDDYY',
            'MMDDYYYY',
        ]).map(_make_option);
        this.$('input.oe_import_date_format').select2({
            width:'50%',
            data:data,
            query:dataFilteredQuery,
            initSelection:function($e,c){
                c(_from_data(data,$e.val())||_make_option($e.val()));
            }
        })
    },
    setup_sheets_picker:function(){
        vardata=this.sheets.map(_make_option);
        this.$('input.oe_import_sheet').select2({
            width:'50%',
            data:data,
            query:dataFilteredQuery,
            initSelection:function($e,c){
                c(_from_data(data,$e.val())||_make_option($e.val()))
            },
            minimumResultsForSearch:10,
        });
    },

    import_options:function(){
        varself=this;
        varoptions={
            headers:this.$('input.oe_import_has_header').prop('checked'),
            advanced:this.$('input.oe_import_advanced_mode').prop('checked'),
            keep_matches:this.do_not_change_match,
            name_create_enabled_fields:{},
            //startatrow1=skip0lines
            skip:Number(this.$('#oe_import_row_start').val())-1||0,
            limit:Number(this.$('#oe_import_batch_limit').val())||null,
        };
        _.each(_.union(this.opts,this.spreadsheet_opts),function(opt){
            options[opt.name]=
                self.$('input.oe_import_'+opt.name).val();
        });
        _(this.parse_opts_formats).each(function(opt){
            options[opt.name]=time.moment_to_strftime_format(self.$('input.oe_import_'+opt.name).val());
        });
        _(this.parse_opts_separators).each(function(opt){
            options[opt.name]=self.$('input.oe_import_'+opt.name).val();
        });
        options['fields']=[];
        if(this.do_not_change_match){
            options['fields']=this.$('.oe_import_fieldsinput.oe_import_match_field').map(function(index,el){
                return$(el).select2('val')||false;
            }).get();
        }
        this.do_not_change_match=false;
        this.$('input.o_import_create_option').each(function(){
            varfield=this.getAttribute('field');
            if(field){
                options.name_create_enabled_fields[field]=this.checked;
            }
        });
        returnoptions;
    },

    //-File&settingschangesection
    onfile_loaded:function(event,from,to,arg){
        //argisnullifreload->don'tresetpartialimport
        if(arg!=null){
            this.toggle_partial(null);
        }

        this.$buttons.filter('.o_import_import,.o_import_validate').addClass('d-none');
        if(!this.$('input.oe_import_file').val()){returnthis['settings_changed']();}
        this.$('.oe_import_date_format').select2('val','');
        this.$('.oe_import_datetime_format').val('');
        this.$('.oe_import_sheet').val('');

        this.$form.removeClass('oe_import_previewoe_import_error');
        varimport_toggle=false;
        varfile=this.$('input.oe_import_file')[0].files[0];
        //someplatformssendtext/csv,application/csv,orotherthingsifExcelisprevent
        if((file.type&&_.last(file.type.split('/'))==="csv")||(_.last(file.name.split('.'))==="csv")){
            import_toggle=true;
        }
        this.$form.find('.oe_import_box').toggle(import_toggle);
        jsonp(this.$form,{
            url:'/base_import/set_file'
        },this.proxy('settings_changed'));
    },
    onpreviewing:function(){
        varself=this;
        this.$buttons.filter('.o_import_import,.o_import_validate').addClass('d-none');
        this.$form.addClass('oe_import_with_file');
        //TODO:testthatwrite//succeeded?
        this.$form.removeClass('oe_import_preview_erroroe_import_error');
        this.$form.toggleClass(
            'oe_import_noheaderstext-muted',
            !this.$('input.oe_import_has_header').prop('checked'));

        //Cleartheinputvaluetoallowonchangetobetriggered
        //ifthefileisthesame(forallbrowsers)
        self.$('input.oe_import_file').val('');

        this._rpc({
                model:'base_import.import',
                method:'parse_preview',
                args:[this.id,this.import_options()],
                kwargs:{context:session.user_context},
            }).then(function(result){
                varsignal=result.error?'preview_failed':'preview_succeeded';
                self[signal](result);
            });
    },
    onpreview_error:function(event,from,to,result){
        this.$('.oe_import_options').show();
        this.$form.addClass('oe_import_preview_erroroe_import_error');
        this.$form.find('.oe_import_box,.oe_import_with_file').removeClass('d-none');
        this.$form.find('.o_view_nocontent').addClass('d-none');
        this.$('.oe_import_error_report').html(
                QWeb.render('ImportView.preview.error',result));
    },
    onpreview_success:function(event,from,to,result){
        varself=this;
        this.$buttons.filter('.oe_import_file')
            .text(_t('LoadNewFile'))
            .removeClass('btn-primary').addClass('btn-secondary')
            .blur();
        this.$buttons.filter('.o_import_import,.o_import_validate').removeClass('d-none');
        this.$form.find('.oe_import_box,.oe_import_with_file').removeClass('d-none');
        this.$form.find('.o_view_nocontent').addClass('d-none');
        this.$form.addClass('oe_import_preview');
        this.$('input.oe_import_advanced_mode').prop('checked',result.advanced_mode);
        this.$('.oe_import_grid').html(QWeb.render('ImportView.preview',result));

        this.$('.o_import_batch_alert').toggleClass('d-none',!result.batch);

        varmessages=[];
        if(result.headers.length===1){
            messages.push({type:'warning',message:_t("Asinglecolumnwasfoundinthefile,thisoftenmeansthefileseparatorisincorrect")});
        }

        if(!_.isEmpty(messages)){
            this.$('.oe_import_options').show();
            this.onresults(null,null,null,{'messages':messages});
        }

        if(!_.isEqual(this.sheets,result.options.sheets)){
            this.sheets=result.options.sheets||[];
            this.setup_sheets_picker();
        }
        this.$('div.oe_import_has_multiple_sheets').toggle(
            this.sheets.length>1
        );

        //mergeoptionvaluesbackincasetheywereupdated/guessed
        _.each(['encoding','separator','float_thousand_separator','float_decimal_separator','sheet'],function(id){
            self.$('.oe_import_'+id).select2('val',result.options[id])
        });
        this.$('.oe_import_date_format').select2('val',time.strftime_to_moment_format(result.options.date_format));
        this.$('.oe_import_datetime_format').val(time.strftime_to_moment_format(result.options.datetime_format));
        //hideall"truedebug"optionswhennotindebugmode
        this.$('.oe_import_debug_option').toggleClass('d-none',!result.debug);

        var$fields=this.$('.oe_import_fieldsinput');
        this.render_fields_matches(result,$fields);
        vardata=this.generate_fields_completion(result);
        varitem_finder=function(id,items){
            items=items||data;
            for(vari=0;i<items.length;++i){
                varitem=items[i];
                if(item.id===id){
                    returnitem;
                }
                varval;
                if(item.children&&(val=item_finder(id,item.children))){
                    returnval;
                }
            }
            return'';
        };
        $fields.each(function(k,v){
            varfiltered_data=self.generate_fields_completion(result,k);

            var$thing=$();
            varbind=function(d){};
            if(config.isDebug()){
                $thing=$(QWeb.render('ImportView.create_record_option')).insertAfter(v).hide();
                bind=function(data){
                    switch(data.type){
                    case'many2one':case'many2many':
                        $thing.find('input').attr('field',data.id);
                        $thing.show();
                        break;
                    default:
                        $thing.find('input').attr('field','').prop('checked',false);
                        $thing.hide();
                    }
                }
            }

            $(v).select2({
                allowClear:true,
                minimumInputLength:0,
                data:filtered_data,
                initSelection:function(element,callback){
                    vardefault_value=element.val();
                    if(!default_value){
                        callback('');
                        return;
                    }

                    vardata=item_finder(default_value);
                    bind(data);
                    callback(data);
                },
                placeholder:_t('Don\'timport'),
                width:'resolve',
                dropdownCssClass:'oe_import_selector'
            }).on('change',function(e){
                bind(item_finder(e.currentTarget.value));
            });
        });
    },
    generate_fields_completion:function(root,index){
        varself=this;
        varbasic=[];
        varregulars=[];
        varo2m=[];
        varheaders_type=root.headers_type;
        functiontraverse(field,ancestors,collection,type){
            varsubfields=field.fields;
            varadvanced_mode=self.$('input.oe_import_advanced_mode').prop('checked');
            varfield_path=ancestors.concat(field);
            varlabel=_(field_path).pluck('string').join('/');
            varid=_(field_path).pluck('name').join('/');
            if(type===undefined||(type!==undefined&&(type.indexOf('all')!==-1||type.indexOf(field['type'])!==-1))){
                //Ifnon-relational,m2oorm2m,collectionisregulars
                if(!collection){
                    if(field.name==='id'){
                        collection=basic;
                    }elseif(_.isEmpty(subfields)
                            ||_.isEqual(_.pluck(subfields,'name'),['id','.id'])){
                        collection=regulars;
                    }else{
                        collection=o2m;
                    }
                }

                collection.push({
                    id:id,
                    text:label,
                    required:field.required,
                    type:field.type
                });

            }
            if(advanced_mode){
                for(vari=0,end=subfields.length;i<end;++i){
                    traverse(subfields[i],field_path,collection,type);
                }
            }
        }
        _(root.fields).each(function(field){
            if(index===undefined){
                traverse(field,[]);
            }
            else{
                if(self.$('input.oe_import_advanced_mode').prop('checked')){
                    traverse(field,[],undefined,['all']);
                }
                else{
                    traverse(field,[],undefined,headers_type[index]);
                }
            }
        });

        varcmp=function(field1,field2){
            returnfield1.text.localeCompare(field2.text);

        };
        regulars.sort(cmp);
        o2m.sort(cmp);
        if(!_.isEmpty(regulars)&&!_.isEmpty(o2m)){
            basic=basic.concat([
                {text:_t("NormalFields"),children:regulars},
                {text:_t("RelationFields"),children:o2m},
            ]);
        }
        elseif(!_.isEmpty(regulars)){
            basic=basic.concat(regulars);
        }
        elseif(!_.isEmpty(o2m)){
            basic=basic.concat(o2m);
        }
        returnbasic;
    },
    render_fields_matches:function(result,$fields){
        if(_(result.matches).isEmpty()){return;}
        $fields.each(function(index,input){
            varmatch=result.matches[index];
            if(!match){return;}

            varcurrent_field=result;
            input.value=_(match).chain()
                .map(function(name){
                    //WARNING:doesbothmappingandfolding(overthe
                    //         ``field``iteratorvariable)
                    returncurrent_field=_(current_field.fields).find(function(subfield){
                        returnsubfield.name===name;
                    });
                })
                .pluck('name')
                .value()
                .join('/');
        });
    },

    //-importitself
    call_import:function(kwargs){
        varfields=this.$('.oe_import_fieldsinput.oe_import_match_field').map(function(index,el){
            return$(el).select2('val')||false;
        }).get();
        varcolumns=this.$('.oe_import_grid-header.oe_import_grid-cell.o_import_header_name').map(function(){
            return$(this).text().trim().toLowerCase()||false;
        }).get();

        vartracking_disable='tracking_disable'inkwargs?kwargs.tracking_disable:!this.$('#oe_import_tracking').prop('checked')
        deletekwargs.tracking_disable;
        kwargs.context=_.extend(
            {},this.parent_context,
            {tracking_disable:tracking_disable}
        );
        varself=this;
        this.trigger_up('with_client',{callback:function(){
            this.loading.ignore_events=true;
        }});
        $.blockUI({message:QWeb.render('Throbber')});
        $(document.body).addClass('o_ui_blocked');
        varopts=this.import_options();

        var$el=$('.oe_throbber_message');
        varmsg=kwargs.dryrun?_t("%drecordstested...")
                                :_t("%drecordssuccessfullyimported...");
        opts.callback=function(count){
            $el.text(_.str.sprintf(msg,count));
        };

        returnthis._batchedImport(opts,[this.id,fields,columns],kwargs,{done:0,prev:0})
            .then(null,function(reason){
                varerror=reason.message;
                varevent=reason.event;
                //Incaseofunexpectedexception,convert
                //"JSON-RPCerror"toanimportfailure,and
                //preventdefaulthandling(warningdialog)
                if(event){event.preventDefault();}

                varmsg;
                varerrordata=error.data||{};
                if(errordata.type==='xhrerror'){
                    varxhr=errordata.objects[0];
                    switch(xhr.status){
                    case504://gatewaytimeout
                        msg=_t("Importtimedout.Pleaseretry.Ifyoustillencounterthisissue,thefilemaybetoobigforthesystem'sconfiguration,trytosplitit(importlessrecordsperfile).");
                        break;
                    default:
                        msg=_t("Anunknownissueoccurredduringimport(possiblylostconnection,datalimitexceededormemorylimitsexceeded).Pleaseretryincasetheissueistransient.Iftheissuestilloccurs,trytosplitthefileratherthanimportitatonce.");
                    }
                }else{
                    msg=errordata.arguments&&(errordata.arguments[1]||errordata.arguments[0])
                        ||error.message;
                }

                returnPromise.resolve({'messages':[{
                    type:'error',
                    record:false,
                    message:msg,
                }]});
            }).finally(function(){
                $(document.body).removeClass('o_ui_blocked');
                $.unblockUI();
                self.trigger_up('with_client',{callback:function(){
                    deletethis.loading.ignore_events;
                }});
            });
    },/**
     *
     *@paramoptsimportoptions
     *@paramargspositionalargumentstopassalong(augmentedwiththeoptions)
     *@paramkwargskeywordargumentstopassalong(directly)
     *@param{Object}recrecursioninformationrecord
     *@param{Number}rec.donehowmanyrecordshavebeenloadedsofar
     *@param{Number}rec.prevnextrowofthepreviouscallsowecanknow
     *                         howmanyrowsthecallwe'rehereperforming
     *                         willhaveconsumed,andthusbyhowmuchwe
     *                         needtooffsetthemessagesofthe*next*call
     *@returns{Promise<{name,ids,messages}>}
     *@private
     */
    _batchedImport:function(opts,args,kwargs,rec){
        opts.callback&&opts.callback(rec.done||0);
        varself=this;
        returnthis._rpc({
            model:'base_import.import',
            method:'do',
            args:args.concat([opts]),
            kwargs:kwargs
        }).then(function(results){
            _.each(results.messages,offset_by(opts.skip));
            if(!kwargs.dryrun&&!results.ids){
                //updateskiptofailedbatch
                self.$('#oe_import_row_start').val(opts.skip+1);
                if(opts.skip){
                    //there'sbeenanerrorduringa"proper"import,stop&warn
                    //aboutpartialimportmaybe
                    results.messages.push({
                        type:'info',
                        priority:true,
                        message:_.str.sprintf(_t("Thisfilehasbeensuccessfullyimporteduptoline%d."),opts.skip)
                    });
                }
                returnresults;
            }
            if(!results.nextrow){
                //we'redone
                returnresults;
            }

            //dothenextbatch
            returnself._batchedImport(
                //avoidmodifyingoptsin-place
                _.defaults({skip:results.nextrow},opts),
                args,kwargs,{
                    done:rec.done+(results.ids||[]).length,
                    prev:results.nextrow
                }
            ).then(function(r2){
                return{
                    name:_.zip(results.name,r2.name).map(function(names){
                        returnnames[0]||names[1];
                    }),
                    ids:(results.ids||[]).concat(r2.ids||[]),
                    messages:results.messages.concat(r2.messages),
                    skip:r2.skip||results.nextrow,
                    nextrow:r2.nextrow
                }
            });
        });
    },
    onvalidate:function(){
        varprom=this.call_import({dryrun:true,tracking_disable:true});
        prom.then(this.proxy('validated'));
        returnprom;
    },
    onimport:function(){
        varself=this;
        varprom=this.call_import({dryrun:false});
        prom.then(function(results){
            varmessage=results.messages;
            if(!_.any(message,function(message){
                    returnmessage.type==='error';})){
                self['import_succeeded'](results);
                return;
            }
            self['import_failed'](results);
        });
        returnprom;
    },
    onimported:function(event,from,to,results){
        this.do_notify(false,_.str.sprintf(
            _t("%drecordssuccessfullyimported"),
            results.ids.length
        ));
        this.exit();
    },
    exit:function(){
        this.trigger_up('history_back');
    },
    onresults:function(event,from,to,results){
        varfields=this.$('.oe_import_fieldsinput.oe_import_match_field').map(function(index,el){
            return$(el).select2('val')||false;
        }).get();

        varmessage=results.messages;
        varno_messages=_.isEmpty(message);
        if(no_messages){
            message.push({
                type:'info',
                message:_t("Everythingseemsvalid.")
            });
        }elseif(event==='import_failed'&&results.ids){
            //bothidsinafailedimport->partialimport
            this.toggle_partial(results);
        }

        //rowindexescomeback0-indexed,spreadsheets
        //display1-indexed.
        varoffset=1;
        //offsetmoreifheader
        if(this.import_options().headers){offset+=1;}

        varmessagesSorted=_.sortBy(_(message).groupBy('message'),function(group){
            if(group[0].priority){
                return-2;
            }

            //sortbygravity,then,orderoffieldinlist
            varorder=0;
            switch(group[0].type){
            case'error':order=0;break;
            case'warning':order=fields.length+1;break;
            case'info':order=2*(fields.length+1);break;
            default:order=3*(fields.length+1);break;
            }
            returnorder+_.indexOf(fields,group[0].field);
        });

        this.$form.addClass('oe_import_error');
        this.$('.oe_import_error_report').html(
            QWeb.render('ImportView.error',{
                errors:messagesSorted,
                at:function(rows){
                    varfrom=rows.from+offset;
                    varto=rows.to+offset;
                    varrowName='';
                    if(results.name.length>rows.from&&results.name[rows.from]!==''){
                        rowName=_.str.sprintf('(%s)',results.name[rows.from]);
                    }
                    if(from===to){
                        return_.str.sprintf(_t("atrow%d%s"),from,rowName);
                    }
                    return_.str.sprintf(_t("betweenrows%dand%d"),
                                         from,to);
                },
                at_multi:function(rows){
                    varfrom=rows.from+offset;
                    varto=rows.to+offset;
                    varrowName='';
                    if(results.name.length>rows.from&&results.name[rows.from]!==''){
                        rowName=_.str.sprintf('(%s)',results.name[rows.from]);
                    }
                    if(from===to){
                        return_.str.sprintf(_t("Row%d%s"),from,rowName);
                    }
                    return_.str.sprintf(_t("Betweenrows%dand%d"),
                                         from,to);
                },
                at_multi_header:function(numberLines){
                    return_.str.sprintf(_t("at%ddifferentrows:"),
                                         numberLines);
                },
                more:function(n){
                    return_.str.sprintf(_t("(%dmore)"),n);
                },
                info:function(msg){
                    if(typeofmsg==='string'){
                        return_.str.sprintf(
                            '<divclass="oe_import_moreinfooe_import_moreinfo_message">%s</div>',
                            _.str.escapeHTML(msg));
                    }
                    if(msginstanceofArray){
                        return_.str.sprintf(
                            '<divclass="oe_import_moreinfooe_import_moreinfo_choices"><ahref="#"class="oe_import_report_see_possible_valueoe_import_see_all"><iclass="fafa-arrow-right"/>%s</a><ulclass="oe_import_report_more">%s</ul></div>',
                            _.str.escapeHTML(_t("Seepossiblevalues")),
                            _(msg).map(function(msg){
                                return'<li>'
                                    +_.str.escapeHTML(msg)
                                +'</li>';
                            }).join(''));
                    }
                    //Finalshouldbeobject,actiondescriptor
                    return[
                        '<divclass="oe_import_moreinfooe_import_moreinfo_action">',
                            _.str.sprintf('<ahref="#"data-action="%s"class="oe_import_see_all"><iclass="fafa-arrow-right"/>',
                                    _.str.escapeHTML(JSON.stringify(msg))),
                                _.str.escapeHTML(
                                    _t("Seepossiblevalues")),
                            '</a>',
                        '</div>'
                    ].join('');
                },
            }));
    },
    toggle_partial:function(result){
        var$form=this.$('.oe_import');
        var$partial_warning=this.$('.o_import_partial_alert');
        var$partial_count=this.$('.o_import_partial_count');
        if(result==null){
            $partial_warning.addClass('d-none');
            $form.add(this.$buttons).removeClass('o_import_partial_mode');
            var$skip=this.$('#oe_import_row_start');
            $skip.val($skip.attr('value'));
            $partial_count.text('');
            return;
        }

        this.$('.o_import_batch_alert').addClass('d-none');
        $partial_warning.removeClass('d-none');
        $form.add(this.$buttons).addClass('o_import_partial_mode');
        $partial_count.text((result.skip||0)+1);
    }
});
core.action_registry.add('import',DataImport);

//FSM-izeDataImport
StateMachine.create({
    target:DataImport.prototype,
    events:[
        {name:'loaded_file',
          from:['none','file_loaded','preview_error','preview_success','results','imported'],
          to:'file_loaded'},
        {name:'settings_changed',
          from:['file_loaded','preview_error','preview_success','results'],
          to:'previewing'},
        {name:'preview_failed',from:'previewing',to:'preview_error'},
        {name:'preview_succeeded',from:'previewing',to:'preview_success'},
        {name:'validate',from:'preview_success',to:'validating'},
        {name:'validate',from:'results',to:'validating'},
        {name:'validated',from:'validating',to:'results'},
        {name:'import',from:['preview_success','results'],to:'importing'},
        {name:'import_succeeded',from:'importing',to:'imported'},
        {name:'import_failed',from:'importing',to:'results'}
    ],
});

Loading.include({
    on_rpc_event:function(){
        if(this.ignore_events){
            return
        }
        this._super.apply(this,arguments);
    }
});
AbstractWebClient.prototype.custom_events['with_client']=function(ev){
    ev.data.callback.call(this);
};

functionoffset_by(by){
    returnfunctionoffset_message(msg){
        if(msg.rows){
            msg.rows.from+=by;
            msg.rows.to+=by;
        }
    }
}

return{
    DataImport:DataImport,
};

});
