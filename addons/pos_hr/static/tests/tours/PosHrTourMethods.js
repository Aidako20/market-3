flectra.define('pos_hr.tour.PosHrTourMethods',function(require){
    'usestrict';

    const{createTourMethods}=require('point_of_sale.tour.utils');
    const{SelectionPopup}=require('point_of_sale.tour.SelectionPopupTourMethods');
    const{NumberPopup}=require('point_of_sale.tour.NumberPopupTourMethods');

    classDo{
        clickLoginButton(){
            return[
                {
                    content:'clickloginbutton',
                    trigger:'.login-overlay.login-button.select-employee',
                },
            ];
        }
        clickLockButton(){
            return[
                {
                    content:'clicklockbutton',
                    trigger:'.header-button.lock-button',
                },
            ];
        }
        clickCashierName(){
            return[
                {
                    content:'clickcashiername',
                    trigger:'.oe_status.username',
                }
            ]
        }
    }
    classCheck{
        loginScreenIsShown(){
            return[
                {
                    content:'loginscreenisshown',
                    trigger:'.login-overlay.screen-login.login-body',
                    run:()=>{},
                },
            ];
        }
        cashierNameIs(name){
            return[
                {
                    content:`loggedcashieris'${name}'`,
                    trigger:`.pos.oe_status.username:contains("${name}")`,
                    run:()=>{},
                },
            ];
        }
    }
    classExecute{
        login(name,pin){
            constres=this._do.clickLoginButton();
            res.push(...SelectionPopup._do.clickItem(name));
            if(pin){
                res.push(...NumberPopup._do.pressNumpad(pin.split('').join('')));
                res.push(...NumberPopup._do.clickConfirm());
            }
            returnres;
        }
    }

    returncreateTourMethods('PosHr',Do,Check,Execute);
});
