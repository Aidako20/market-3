flectra.define('pos_hr.employees',function(require){
    "usestrict";

varmodels=require('point_of_sale.models');

models.load_models([{
    model: 'hr.employee',
    fields:['name','id','user_id'],
    domain:function(self){
        returnself.config.employee_ids.length>0
            ?[
                  '&',
                  ['company_id','=',self.config.company_id[0]],
                  '|',
                  ['user_id','=',self.user.id],
                  ['id','in',self.config.employee_ids],
              ]
            :[['company_id','=',self.config.company_id[0]]];
    },
    loaded:function(self,employees){
        if(self.config.module_pos_hr){
            self.employees=employees;
            self.employee_by_id={};
            self.employees.forEach(function(employee){
                self.employee_by_id[employee.id]=employee;
                varhasUser=self.users.some(function(user){
                    if(user.id===employee.user_id[0]){
                        employee.role=user.role;
                        returntrue;
                    }
                    returnfalse;
                });
                if(!hasUser){
                    employee.role='cashier';
                }
            });
        }
    }
}]);

varposmodel_super=models.PosModel.prototype;
models.PosModel=models.PosModel.extend({
    load_server_data:function(){
        varself=this;
        returnposmodel_super.load_server_data.apply(this,arguments).then(function(){
            varemployee_ids=_.map(self.employees,function(employee){returnemployee.id;});
            varrecords=self.rpc({
                model:'hr.employee',
                method:'get_barcodes_and_pin_hashed',
                args:[employee_ids],
            });
            returnrecords.then(function(employee_data){
                self.employees.forEach(function(employee){
                    vardata=_.findWhere(employee_data,{'id':employee.id});
                    if(data!==undefined){
                        employee.barcode=data.barcode;
                        employee.pin=data.pin;
                    }
                });
            });
        });
    },
    set_cashier:function(employee){
        posmodel_super.set_cashier.apply(this,arguments);
        constselectedOrder=this.get_order();
        if(selectedOrder&&!selectedOrder.get_orderlines().length){
            //Orderwithoutlinescanbeconsideredtobeun-ownedbyanyemployee.
            //Wesettheemployeeonthatordertothecurrentlysetemployee.
            selectedOrder.employee=employee;
        }
    }
});

varsuper_order_model=models.Order.prototype;
models.Order=models.Order.extend({
    initialize:function(attributes,options){
        super_order_model.initialize.apply(this,arguments);
        if(!options.json){
            this.employee=this.pos.get_cashier();
        }
    },
    init_from_JSON:function(json){
        super_order_model.init_from_JSON.apply(this,arguments);
        if(this.pos.config.module_pos_hr&&json.employee_id){
            this.employee=this.pos.employee_by_id[json.employee_id];
        }
    },
    export_as_JSON:function(){
        constjson=super_order_model.export_as_JSON.apply(this,arguments);
        if(this.pos.config.module_pos_hr){
            json.employee_id=this.employee?this.employee.id:false;
        }
        returnjson;
    },
});

});
