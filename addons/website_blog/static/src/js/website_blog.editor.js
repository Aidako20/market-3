flectra.define('website_blog.new_blog_post',function(require){
'usestrict';

varcore=require('web.core');
varwUtils=require('website.utils');
varWebsiteNewMenu=require('website.newMenu');

var_t=core._t;

WebsiteNewMenu.include({
    actions:_.extend({},WebsiteNewMenu.prototype.actions||{},{
        new_blog_post:'_createNewBlogPost',
    }),

    //--------------------------------------------------------------------------
    //Actions
    //--------------------------------------------------------------------------

    /**
     *Askstheuserinformationaboutanewblogposttocreate,thencreates
     *itandredirectstheusertothisnewpost.
     *
     *@private
     *@returns{Promise}Unresolvedifthereisaredirection
     */
    _createNewBlogPost:function(){
        returnthis._rpc({
            model:'blog.blog',
            method:'search_read',
            args:[wUtils.websiteDomain(this),['name']],
        }).then(function(blogs){
            if(blogs.length===1){
                document.location='/blog/'+blogs[0]['id']+'/post/new';
                returnnewPromise(function(){});
            }elseif(blogs.length>1){
                returnwUtils.prompt({
                    id:'editor_new_blog',
                    window_title:_t("NewBlogPost"),
                    select:_t("SelectBlog"),
                    init:function(field){
                        return_.map(blogs,function(blog){
                            return[blog['id'],blog['name']];
                        });
                    },
                }).then(function(result){
                    varblog_id=result.val;
                    if(!blog_id){
                        return;
                    }
                    document.location='/blog/'+blog_id+'/post/new';
                    returnnewPromise(function(){});
                });
            }
        });
    },
});
});

//==============================================================================

flectra.define('website_blog.editor',function(require){
'usestrict';

require('web.dom_ready');
const{qweb,_t}=require('web.core');
constoptions=require('web_editor.snippets.options');
varWysiwygMultizone=require('web_editor.wysiwyg.multizone');

if(!$('.website_blog').length){
    returnPromise.reject("DOMdoesn'tcontain'.website_blog'");
}

constNEW_TAG_PREFIX='new-blog-tag-';

//TODORemoveinmaster.
for(constelofdocument.querySelectorAll(".o_wblog_social_links")){
    el.classList.add("o_not_editable");
}

WysiwygMultizone.include({
    custom_events:Object.assign({},WysiwygMultizone.prototype.custom_events,{
        'set_blog_post_updated_tags':'_onSetBlogPostUpdatedTags',
    }),

    /**
     *@override
     */
    init(){
        this._super(...arguments);
        this.blogTagsPerBlogPost={};
    },
    /**
     *@override
     */
    asyncstart(){
        awaitthis._super(...arguments);
        $('.js_tweet,.js_comment').off('mouseup').trigger('mousedown');
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    asyncsave(){
        constret=awaitthis._super(...arguments);
        awaitthis._saveBlogTags();//Note:importanttobecalledaftersaveotherwisecleanForSaveisnotcalledbefore
        returnret;
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *Savestheblogtagsinthedatabase.
     *
     *@private
     */
    async_saveBlogTags(){
        for(const[key,tags]ofObject.entries(this.blogTagsPerBlogPost)){
            constproms=tags.filter(tag=>typeoftag.id==='string').map(tag=>{
                returnthis._rpc({
                    model:'blog.tag',
                    method:'create',
                    args:[{
                        'name':tag.name,
                    }],
                });
            });
            constcreatedIDs=awaitPromise.all(proms);

            awaitthis._rpc({
                model:'blog.post',
                method:'write',
                args:[parseInt(key),{
                    'tag_ids':[[6,0,tags.filter(tag=>typeoftag.id==='number').map(tag=>tag.id).concat(createdIDs)]],
                }],
            });
        }
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *@private
     *@param{FlectraEvent}ev
     */
    _onSetBlogPostUpdatedTags:function(ev){
        this.blogTagsPerBlogPost[ev.data.blogPostID]=ev.data.tags;
    },
});

options.registry.many2one.include({

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    _selectRecord:function($opt){
        varself=this;
        this._super.apply(this,arguments);
        if(this.$target.data('oe-field')==='author_id'){
            var$nodes=$('[data-oe-model="blog.post"][data-oe-id="'+this.$target.data('oe-id')+'"][data-oe-field="author_avatar"]');
            $nodes.each(function(){
                var$img=$(this).find('img');
                varcss=window.getComputedStyle($img[0]);
                $img.css({width:css.width,height:css.height});
                $img.attr('src','/web/image/res.partner/'+self.ID+'/image_1024');
            });
            setTimeout(function(){$nodes.removeClass('o_dirty');},0);
        }
    }
});

options.registry.CoverProperties.include({
    /**
     *@override
     */
    updateUI:asyncfunction(){
        varisRegularCover=this.$target.is('.o_wblog_post_page_cover_regular');
        var$coverFull=this.$el.find('[data-select-class*="o_full_screen_height"]');
        var$coverMid=this.$el.find('[data-select-class*="o_half_screen_height"]');
        var$coverAuto=this.$el.find('[data-select-class*="cover_auto"]');
        this._coverFullOriginalLabel=this._coverFullOriginalLabel||$coverFull.text();
        this._coverMidOriginalLabel=this._coverMidOriginalLabel||$coverMid.text();
        this._coverAutoOriginalLabel=this._coverAutoOriginalLabel||$coverAuto.text();
        $coverFull.children('div').text(isRegularCover?_t("Large"):this._coverFullOriginalLabel);
        $coverMid.children('div').text(isRegularCover?_t("Medium"):this._coverMidOriginalLabel);
        $coverAuto.children('div').text(isRegularCover?_t("Tiny"):this._coverAutoOriginalLabel);
        returnthis._super(...arguments);
    },
});

options.registry.BlogPostTagSelection=options.Class.extend({
    xmlDependencies:(options.Class.prototype.xmlDependencies||[])
        .concat(['/website_blog/static/src/xml/website_blog_tag.xml']),

    /**
     *@override
     */
    asyncwillStart(){
        const_super=this._super.bind(this);

        this.blogPostID=parseInt(this.$target[0].dataset.blogId);
        this.isEditingTags=false;
        consttags=awaitthis._rpc({
            model:'blog.tag',
            method:'search_read',
            args:[[],['id','name','post_ids']],
        });
        this.allTagsByID={};
        this.tagIDs=[];
        for(consttagoftags){
            this.allTagsByID[tag.id]=tag;
            if(tag['post_ids'].includes(this.blogPostID)){
                this.tagIDs.push(tag.id);
            }
        }

        return_super(...arguments);
    },
    /**
     *@override
     */
    cleanForSave(){
        if(this.isEditingTags){
            this._notifyUpdatedTags();
        }
    },

    //--------------------------------------------------------------------------
    //Options
    //--------------------------------------------------------------------------

    /**
     *@seethis.selectClassforparams
     */
    editTagList(previewMode,widgetValue,params){
        this.isEditingTags=true;
        this.rerender=true;
    },
    /**
     *Sendchangesthatwillbesavedinthedatabase.
     *
     *@seethis.selectClassforparams
     */
    saveTagList(previewMode,widgetValue,params){
        this.isEditingTags=false;
        this.rerender=true;
        this._notifyUpdatedTags();
    },
    /**
     *@seethis.selectClassforparams
     */
    setNewTagName(previewMode,widgetValue,params){
        this.newTagName=widgetValue;
    },
    /**
     *@seethis.selectClassforparams
     */
    confirmNew(previewMode,widgetValue,params){
        if(!this.newTagName){
            return;
        }
        constexisting=Object.values(this.allTagsByID).some(tag=>tag.name.toLowerCase()===this.newTagName.toLowerCase());
        if(existing){
            returnthis.displayNotification({
                type:'warning',
                message:_t("Thistagalreadyexists"),
            });
        }
        constnewTagID=_.uniqueId(NEW_TAG_PREFIX);
        this.allTagsByID[newTagID]={
            'id':newTagID,
            'name':this.newTagName,
        };
        this.tagIDs.push(newTagID);
        this.newTagName='';
        this.rerender=true;
    },
    /**
     *@seethis.selectClassforparams
     */
    addTag(previewMode,widgetValue,params){
        consttagID=parseInt(widgetValue);
        this.tagIDs.push(tagID);
        this.rerender=true;
    },
    /**
     *@seethis.selectClassforparams
     */
    removeTag(previewMode,widgetValue,params){
        this.tagIDs=this.tagIDs.filter(tagID=>(`${tagID}`!==widgetValue));
        if(widgetValue.startsWith(NEW_TAG_PREFIX)){
            deletethis.allTagsByID[widgetValue];
        }
        this.rerender=true;
    },

    //--------------------------------------------------------------------------
    //Public
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    asyncupdateUI(){
        if(this.rerender){
            this.rerender=false;
            awaitthis._rerenderXML();
            return;
        }
        returnthis._super(...arguments);
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    async_computeWidgetVisibility(widgetName,params){
        if(['blog_existing_tag_opt','new_tag_input_opt','new_tag_button_opt','save_tags_opt'].includes(widgetName)){
            returnthis.isEditingTags;
        }
        if(widgetName==='edit_tags_opt'){
            return!this.isEditingTags;
        }
        if(params.optionsPossibleValues['removeTag']){
            returnthis.isEditingTags;
        }
        returnthis._super(...arguments);
    },
    /**
     *@override
     */
    async_computeWidgetState(methodName,params){
        if(methodName==='addTag'){
            //Therelatedwidgetallowstoselectavaluebutthenresetsitsstatetoanon-selectedvalue
            return'';
        }
        returnthis._super(...arguments);
    },
    /**
     *@private
     */
    _notifyUpdatedTags(){
        this.trigger_up('set_blog_post_updated_tags',{
            blogPostID:this.blogPostID,
            tags:this.tagIDs.map(tagID=>this.allTagsByID[tagID]),
        });
    },
    /**
     *@override
     */
    async_renderCustomXML(uiFragment){
        const$tagList=$(uiFragment.querySelector('.o_wblog_tag_list'));
        for(consttagIDofthis.tagIDs){
            consttag=this.allTagsByID[tagID];
            $tagList.append(qweb.render('website_blog.TagListItem',{
                tag:tag,
            }));
        }
        const$select=$(uiFragment.querySelector('we-select[data-name="blog_existing_tag_opt"]'));
        for(const[key,tag]ofObject.entries(this.allTagsByID)){
            if(this.tagIDs.includes(parseInt(key))||this.tagIDs.includes(key)){
                //savedtagkeysarenumbers,newtagkeysarestrings
                continue;
            }
            $select.prepend(qweb.render('website_blog.TagSelectItem',{
                tag:tag,
            }));
        }
    },
});
});
