flectra.define('test_website.error_views',function(require){
'usestrict';

vartour=require('web_tour.tour');

tour.register('test_error_website',{
    test:true,
    url:'/test_error_view',
},
[
    //RPCERROR
    {
        content:"triggerrpcusererror",
        trigger:'a[href="/test_user_error_json"]',
    },{
        content:"rpcusererrormodalhasmessage",
        extra_trigger:'div.toast-body:contains("Thisisauserrpctest")',
        trigger:'button.o_notification_close',
    },{
        content:"triggerrpcaccesserror",
        trigger:'a[href="/test_access_error_json"]',
    },{
        content:"rpcaccesserrormodalhasmessage",
        extra_trigger:'div.toast-body:contains("Thisisanaccessrpctest")',
        trigger:'button.o_notification_close',
    },{
        content:"triggervalidationrpcerror",
        trigger:'a[href="/test_validation_error_json"]',
    },{
        content:"rpcvalidationerrormodalhasmessage",
        extra_trigger:'div.toast-body:contains("Thisisavalidationrpctest")',
        trigger:'button.o_notification_close',
    },{
        content:"triggerrpcmissingerror",
        trigger:'a[href="/test_missing_error_json"]',
    },{
        content:"rpcmissingerrormodalhasmessage",
        extra_trigger:'div.toast-body:contains("Thisisamissingrpctest")',
        trigger:'button.o_notification_close',
    },{
        content:"triggerrpcerror403",
        trigger:'a[href="/test_access_denied_json"]',
    },{
        content:"rpcerror403modalhasmessage",
        extra_trigger:'div.toast-body:contains("Thisisanaccessdeniedrpctest")',
        trigger:'button.o_notification_close',
    },{
        content:"triggerrpcerror500",
        trigger:'a[href="/test_internal_error_json"]',
    },{
        content:"rpcerror500modalisanErrorDialog",
        extra_trigger:'div.o_dialog_error.modal-bodydiv.alert.alert-warning',
        trigger:'button.btn.btn-primary[type="button"]',
    },
    //HTTPERROR
    {
        content:"triggerhttpusererror",
        trigger:'body',
        run:function(){
            window.location.href=window.location.origin+'/test_user_error_http?debug=0';
        },
    },{
        content:"httpusererrorpagehastitleandmessage",
        extra_trigger:'h1:contains("Somethingwentwrong.")',
        trigger:'div.containerpre:contains("Thisisauserhttptest")',
        run:function(){
                window.location.href=window.location.origin+'/test_user_error_http?debug=1';
        },
    },{
        content:"httpusererrorpagedebughastitleandmessageopen",
        extra_trigger:'h1:contains("Somethingwentwrong.")',
        trigger:'div#error_main.collapse.showpre:contains("Thisisauserhttptest")',
        run:function(){},
    },{
        content:"httpusererrorpagedebughastracebackclosed",
        trigger:'body:has(div#error_traceback.collapse:not(.show)pre#exception_traceback)',
        run:function(){
                window.location.href=window.location.origin+'/test_validation_error_http?debug=0';
        },
    },{
        content:"httpvalidationerrorpagehastitleandmessage",
        extra_trigger:'h1:contains("Somethingwentwrong.")',
        trigger:'div.containerpre:contains("Thisisavalidationhttptest")',
        run:function(){
                window.location.href=window.location.origin+'/test_validation_error_http?debug=1';
        },
    },{
        content:"httpvalidationerrorpagedebughastitleandmessageopen",
        extra_trigger:'h1:contains("Somethingwentwrong.")',
        trigger:'div#error_main.collapse.showpre:contains("Thisisavalidationhttptest")',
        run:function(){},
    },{
        content:"httpvalidationerrorpagedebughastracebackclosed",
        trigger:'body:has(div#error_traceback.collapse:not(.show)pre#exception_traceback)',
        run:function(){
                window.location.href=window.location.origin+'/test_access_error_http?debug=0';
        },
    },{
        content:"httpaccesserrorpagehastitleandmessage",
        extra_trigger:'h1:contains("403:Forbidden")',
        trigger:'div.containerpre:contains("Thisisanaccesshttptest")',
        run:function(){
                window.location.href=window.location.origin+'/test_access_error_http?debug=1';
        },
    },{
        content:"httpaccesserrorpagedebughastitleandmessageopen",
        extra_trigger:'h1:contains("403:Forbidden")',
        trigger:'div#error_main.collapse.showpre:contains("Thisisanaccesshttptest")',
        run:function(){},
    },{
        content:"httpaccesserrorpagedebughastracebackclosed",
        trigger:'body:has(div#error_traceback.collapse:not(.show)pre#exception_traceback)',
        run:function(){
                window.location.href=window.location.origin+'/test_missing_error_http?debug=0';
        },
    },{
        content:"httpmissingerrorpagehastitleandmessage",
        extra_trigger:'h1:contains("Somethingwentwrong.")',
        trigger:'div.containerpre:contains("Thisisamissinghttptest")',
        run:function(){
                window.location.href=window.location.origin+'/test_missing_error_http?debug=1';
        },
    },{
        content:"httpmissingerrorpagedebughastitleandmessageopen",
        extra_trigger:'h1:contains("Somethingwentwrong.")',
        trigger:'div#error_main.collapse.showpre:contains("Thisisamissinghttptest")',
        run:function(){},
    },{
        content:"httpmissingerrorpagedebughastracebackclosed",
        trigger:'body:has(div#error_traceback.collapse:not(.show)pre#exception_traceback)',
        run:function(){
            window.location.href=window.location.origin+'/test_access_denied_http?debug=0';
        },
    },{
        content:"httperror403pagehastitlebutnomessage",
        extra_trigger:'h1:contains("403:Forbidden")',
        trigger:'div#wrap:not(:has(pre:contains("Thisisanaccessdeniedhttptest"))',//Seeir_http.pyhandle_exception,theexceptionisreplacedsothereisnomessage!
        run:function(){
            window.location.href=window.location.origin+'/test_access_denied_http?debug=1';
        },
    },{
        content:"http403errorpagedebughastitlebutnomessage",
        extra_trigger:'h1:contains("403:Forbidden")',
        trigger:'div#debug_infos:not(:has(#error_main))',
        run:function(){},
    },{
        content:"http403errorpagedebughastracebackopen",
        trigger:'body:has(div#error_traceback.collapse.showpre#exception_traceback)',
        run:function(){},
    },
]);
});
