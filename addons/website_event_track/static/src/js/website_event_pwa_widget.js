flectra.define("website_event_track.website_event_pwa_widget",function(require){
    "usestrict";

    /*
     *The"deferredPrompt"Promisewillresolveonlyifthe"beforeinstallprompt"event
     *hasbeentriggered.Itallowstoregisterthislistenerassoonaspossible
     *toavoidmissed-events(asthebrowsercantriggeritveryearlyinthepagelifecycle).
     */
    vardeferredPrompt=newPromise(function(resolve,reject){
        if(!("serviceWorker"innavigator)){
            returnreject();
        }
        window.addEventListener("beforeinstallprompt",function(ev){
            ev.preventDefault();
            resolve(ev);
        });
    });

    varconfig=require("web.config");
    varpublicWidget=require("web.public.widget");
    varutils=require("web.utils");

    varPWAInstallBanner=publicWidget.Widget.extend({
        xmlDependencies:["/website_event_track/static/src/xml/website_event_pwa.xml"],
        template:"pwa_install_banner",
        events:{
            "click.o_btn_install":"_onClickInstall",
            "click.o_btn_close":"_onClickClose",
        },

        /**
         *@private
         */
        _onClickClose:function(){
            this.trigger_up("prompt_close_bar");
        },

        /**
         *@private
         */
        _onClickInstall:function(){
            this.trigger_up("prompt_install");
        },
    });

    publicWidget.registry.WebsiteEventPWAWidget=publicWidget.Widget.extend({
        selector:"#wrapwrap.event",
        custom_events:{
            prompt_install:"_onPromptInstall",
            prompt_close_bar:"_onPromptCloseBar",
        },

        /**
         *
         *@override
         */
        start:function(){
            varself=this;
            returnthis._super.apply(this,arguments)
                .then(this._registerServiceWorker.bind(this))
                .then(function(){
                    //Don'twaitfortheprompt'sPromiseasitmayneverresolve.
                    deferredPrompt.then(self._showInstallBanner.bind(self)).catch(function(){
                        console.log("ServiceWorkernotsupported");
                    });
                })
                .then(this._prefetch.bind(this));
        },

        /**
         *
         *@override
         */
        destroy:function(){
            this._super.apply(this,arguments);
        },

        //--------------------------------------------------------------------------
        //Private
        //--------------------------------------------------------------------------

        /**
         *ReturnsthePWA'sscope
         *
         *Note:thismethodperformsamatchingtohandleURLswiththelanguageprefix.
         *      Typicallythisprefixisintheformof"en"or"en_US"butitcanalsobe
         *      anystringusingthecustomizationoptionsintheWebsite'ssettings.
         *@private
         *@returns{String}
         */
        _getScope:function(){
            varmatches=window.location.pathname.match(/^(\/(?:event|[^/]+\/event))\/?/);
            if(matches&&matches[1]){
                returnmatches[1];
            }
            return"/event";
        },

        /**
         *@private
         */
        _hideInstallBanner:function(){
            this.installBanner?this.installBanner.destroy():undefined;
            $(".o_livechat_button").css("bottom","0");
        },

        /**
         *Parsethecurrentpageforfirst-levelchildrenpagesandasktheServiceWorker
         *toalreadyfetchthemtopopulatethecache.
         *@private
         */
        _prefetch:function(){
            if(!("serviceWorker"innavigator)){
                return;
            }
            varassetsUrls=Array.from(document.querySelectorAll('link[rel="stylesheet"],script[src]')).map(function(el){
                returnel.href||el.src;
            });
            navigator.serviceWorker.ready.then(function(registration){
                registration.active.postMessage({
                    action:"prefetch-assets",
                    urls:assetsUrls,
                });
            }).catch(function(error){
                console.error("Serviceworkerreadyfailed,error:",error);
            });
            varcurrentPageUrl=window.location.href;
            varchildrenPagesUrls=Array.from(document.querySelectorAll('a[href^="'+this._getScope()+'/"]')).map(function(el){
                returnel.href;
            });
            navigator.serviceWorker.ready.then(function(registration){
                registration.active.postMessage({
                    action:"prefetch-pages",
                    urls:childrenPagesUrls.concat(currentPageUrl),
                });
            }).catch(function(error){
                console.error("Serviceworkerreadyfailed,error:",error);
            });
        },

        /**
         *
         *@private
         */
        _registerServiceWorker:function(){
            if(!("serviceWorker"innavigator)){
                return;
            }
            varscope=this._getScope();
            returnnavigator.serviceWorker
                .register(scope+"/service-worker.js",{scope:scope})
                .catch(function(error){
                    console.error("Serviceworkerregistrationfailed,error:",error);
                });
        },

        /**
         *@private
         */
        _showInstallBanner:function(){
            if(!config.device.isMobile){
                return;
            }
            varself=this;
            this.installBanner=newPWAInstallBanner(this);
            this.installBanner.appendTo(this.$el).then(function(){
                //IfLivechatavailable,ItshouldbeplacedabovethePWAbanner.
                varheight=self.$(".o_pwa_install_banner").outerHeight(true);
                $(".o_livechat_button").css("bottom",height+"px");
            });
        },

        //--------------------------------------------------------------------------
        //Handlers
        //--------------------------------------------------------------------------

        /**
         *@private
         *@paramev{Event}
         */
        _onPromptCloseBar:function(ev){
            ev.stopPropagation();
            this._hideInstallBanner();
        },
        /**
         *@private
         *@paramev{Event}
         */
        _onPromptInstall:function(ev){
            ev.stopPropagation();
            this._hideInstallBanner();
            deferredPrompt.then(function(prompt){
                    prompt.prompt();
                    prompt.userChoice.then(function(choiceResult){
                        if(choiceResult.outcome==="accepted"){
                            console.log("Useracceptedtheinstallprompt");
                        }else{
                            console.log("Userdismissedtheinstallprompt");
                        }
                    });
                })
                .catch(function(){
                    console.log("ServiceWorkernotsupported");
                });
        },
    });

    return{
        PWAInstallBanner:PWAInstallBanner,
        WebsiteEventPWAWidget:publicWidget.registry.WebsiteEventPWAWidget,
    };
});
