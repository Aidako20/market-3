#PartofFlectra.SeeLICENSEfileforfullcopyrightandlicensingdetails.
fromflectraimportfields
fromflectra.tests.commonimportForm
fromflectra.addons.account.tests.commonimportAccountTestInvoicingCommon
importrandom
importlogging
importtime

_logger=logging.getLogger(__name__)


classTestAr(AccountTestInvoicingCommon):

    @classmethod
    defsetUpClass(cls,chart_template_ref='l10n_ar.l10nar_ri_chart_template'):
        super(TestAr,cls).setUpClass(chart_template_ref=chart_template_ref)

        #====Company====
        cls.company_data['company'].write({
            'parent_id':cls.env.ref('base.main_company').id,
            'currency_id':cls.env.ref('base.ARS').id,
            'name':'(AR)ResponsableInscripto(UnitTests)',
            "l10n_ar_afip_start_date":time.strftime('%Y-01-01'),
            'l10n_ar_gross_income_type':'local',
            'l10n_ar_gross_income_number':'901-21885123',
        })
        cls.company_ri=cls.company_data['company']

        cls.company_ri.partner_id.write({
            'name':'(AR)ResponsableInscripto(UnitTests)',
            'l10n_ar_afip_responsibility_type_id':cls.env.ref("l10n_ar.res_IVARI").id,
            'l10n_latam_identification_type_id':cls.env.ref("l10n_ar.it_cuit").id,
            'vat':'30111111118',
            "street":'CalleFalsa123',
            "city":'Rosario',
            "country_id":cls.env.ref("base.ar").id,
            "state_id":cls.env.ref("base.state_ar_s").id,
            "zip":'2000',
            "phone":'+15551237073',
            "email":'info@example.com',
            "website":'www.example.com',
        })
        cls.partner_ri=cls.company_ri.partner_id

        #====CompanyMONO====
        cls.company_mono=cls.setup_company_data('(AR)Monotributista(UnitTests)',chart_template=cls.env.ref('l10n_ar.l10nar_base_chart_template'))['company']
        cls.company_mono.write({
            'parent_id':cls.env.ref('base.main_company').id,
            'currency_id':cls.env.ref('base.ARS').id,
            'name':'(AR)Monotributista(UnitTests)',
            "l10n_ar_afip_start_date":time.strftime('%Y-01-01'),
            'l10n_ar_gross_income_type':'exempt',
        })
        cls.company_mono.partner_id.write({
            'name':'(AR)Monotributista(UnitTests)',
            'l10n_ar_afip_responsibility_type_id':cls.env.ref("l10n_ar.res_RM").id,
            'l10n_latam_identification_type_id':cls.env.ref("l10n_ar.it_cuit").id,
            'vat':'20222222223',
            "street":'CalleFalsa123',
            "city":'Rosario',
            "country_id":cls.env.ref("base.ar").id,
            "state_id":cls.env.ref("base.state_ar_s").id,
            "zip":'2000',
            "phone":'+15551237073',
            "email":'info@example.com',
            "website":'www.example.com',
        })
        cls.partner_mono=cls.company_mono.partner_id

        #====BankAccount====
        cls.bank_account_ri=cls.env['res.partner.bank'].create({
            'acc_number':'7982898111100056688080',
            'partner_id':cls.company_ri.partner_id.id,
            'company_id':cls.company_ri.id,
        })

        #====Partners/Customers====
        cls.res_partner_adhoc=cls.env['res.partner'].create({
            "name":"ADHOCSA",
            "is_company":1,
            "city":"Rosario",
            "zip":"2000",
            "state_id":cls.env.ref("base.state_ar_s").id,
            "country_id":cls.env.ref("base.ar").id,
            "street":"OvidioLagos41bis",
            "email":"info@adhoc.com.ar",
            "phone":"(+54)(341)2080203",
            "website":"http://www.adhoc.com.ar",
            'l10n_latam_identification_type_id':cls.env.ref("l10n_ar.it_cuit").id,
            'vat':"30714295698",
            'l10n_ar_afip_responsibility_type_id':cls.env.ref("l10n_ar.res_IVARI").id,
        })
        cls.partner_cf=cls.env['res.partner'].create({
            "name":"ConsumidorFinalAn√≥nimo",
            "l10n_latam_identification_type_id":cls.env.ref('l10n_ar.it_Sigd').id,
            "l10n_ar_afip_responsibility_type_id":cls.env.ref("l10n_ar.res_CF").id,
        })
        cls.res_partner_gritti_mono=cls.env['res.partner'].create({
            "name":"GrittiAgrimensura(Monotributo)",
            "is_company":1,
            "city":"Rosario",
            "zip":"2000",
            "state_id":cls.env.ref("base.state_ar_s").id,
            "country_id":cls.env.ref("base.ar").id,
            "street":"CalleFalsa123",
            "email":"info@example.com.ar",
            "phone":"(+54)(341)1112222",
            "website":"http://www.grittiagrimensura.com",
            'l10n_latam_identification_type_id':cls.env.ref("l10n_ar.it_cuit").id,
            'vat':"27320732811",
            'l10n_ar_afip_responsibility_type_id':cls.env.ref("l10n_ar.res_RM").id,
        })
        cls.res_partner_cerrocastor=cls.env['res.partner'].create({
            "name":"CerroCastor(TierradelFuego)",
            "is_company":1,
            "city":"Ushuaia",
            "state_id":cls.env.ref("base.state_ar_v").id,
            "country_id":cls.env.ref("base.ar").id,
            "street":"Ruta3km26",
            "email":"info@cerrocastor.com",
            "phone":"(+00)(11)44445556",
            "website":"http://www.cerrocastor.com",
            'l10n_latam_identification_type_id':cls.env.ref("l10n_ar.it_cuit").id,
            'vat':"27333333339",
            'l10n_ar_afip_responsibility_type_id':cls.env.ref("l10n_ar.res_IVA_LIB").id,
        })
        cls.res_partner_cmr=cls.env['res.partner'].create({
            "name":"ConcejoMunicipaldeRosario(IVASujetoExento)",
            "is_company":1,
            "city":"Rosario",
            "zip":"2000",
            "state_id":cls.env.ref("base.state_ar_s").id,
            "country_id":cls.env.ref("base.ar").id,
            "street":"Cordoba501",
            "email":"info@example.com.ar",
            "phone":"(+54)(341)2223333",
            "website":"http://www.concejorosario.gov.ar/",
            'l10n_latam_identification_type_id':cls.env.ref("l10n_ar.it_cuit").id,
            'vat':"30684679372",
            'l10n_ar_afip_responsibility_type_id':cls.env.ref("l10n_ar.res_IVAE").id,
        })
        cls.res_partner_expresso=cls.env['res.partner'].create({
            "name":"Expresso",
            "is_company":1,
            "city":"Barcelona",
            "zip":"11002",
            "country_id":cls.env.ref("base.es").id,
            "street":"Lagranavenida123",
            "email":"info@expresso.com",
            "phone":"(+00)(11)2223333",
            "website":"http://www.expresso.com/",
            'l10n_latam_identification_type_id':cls.env.ref("l10n_latam_base.it_fid").id,
            'vat':"2222333344445555",
            'l10n_ar_afip_responsibility_type_id':cls.env.ref("l10n_ar.res_EXT").id,
        })
        cls.partner_mipyme=cls.env['res.partner'].create({
            "name":"BelgranoCargasYLogisticaS(Mipyme)",
            "is_company":1,
            "city":"BuenosAires",
            "zip":"1425",
            "state_id":cls.env.ref("base.state_ar_c").id,
            "country_id":cls.env.ref("base.ar").id,
            "street":"Av.SantaFe4636",
            "email":"mipyme@example.com",
            "phone":"(123)-456-7890",
            "website":"http://www.mypime-inc.com",
            'l10n_latam_identification_type_id':cls.env.ref("l10n_ar.it_cuit").id,
            'vat':"30714101443",
            'l10n_ar_afip_responsibility_type_id':cls.env.ref("l10n_ar.res_IVARI").id,
        })
        cls.partner_mipyme_ex=cls.partner_mipyme.copy({'name':'MiPymeExento','l10n_ar_afip_responsibility_type_id':cls.env.ref('l10n_ar.res_IVAE').id})

        #====Taxes====
        cls.tax_21=cls._search_tax(cls,'iva_21')
        cls.tax_27=cls._search_tax(cls,'iva_27')
        cls.tax_0=cls._search_tax(cls,'iva_0')
        cls.tax_10_5=cls._search_tax(cls,'iva_105')
        cls.tax_no_gravado=cls._search_tax(cls,'iva_no_gravado')
        cls.tax_perc_iibb=cls._search_tax(cls,'percepcion_iibb_ba')
        cls.tax_iva_exento=cls._search_tax(cls,'iva_exento')

        #====Products====
        uom_unit=cls.env.ref('uom.product_uom_unit')
        uom_hour=cls.env.ref('uom.product_uom_hour')

        cls.product_iva_21=cls.env['product.product'].create({
            'name':'LargeCabinet(VAT21)',
            'uom_id':uom_unit.id,
            'uom_po_id':uom_unit.id,
            'lst_price':320.0,
            'type':"consu",
            'default_code':'E-COM07',
        })
        cls.service_iva_27=cls.env['product.product'].create({
            #demo'product_product_telefonia'
            'name':'Telephoneservice(VAT27)',
            'uom_id':uom_unit.id,
            'uom_po_id':uom_unit.id,
            'lst_price':130.0,
            'type':'service',
            'default_code':'TELEFONIA',
            'taxes_id':[(6,0,cls.tax_27.ids)],
        })
        cls.product_iva_cero=cls.env['product.product'].create({
            #demo'product_product_cero'
            'name':'Non-industrializedanimalsandvegetables(VATZero)',
            'uom_id':uom_unit.id,
            'uom_po_id':uom_unit.id,
            'list_price':160.0,
            'type':'consu',
            'default_code':'CERO',
            'taxes_id':[(6,0,cls.tax_0.ids)],
        })
        cls.product_iva_105=cls.env['product.product'].create({
            #demo'product.product_product_27'
            'name':'LaptopCustomized(VAT10,5)',
            'uom_id':uom_unit.id,
            'uom_po_id':uom_unit.id,
            'type':'consu',
            'default_code':'10,5',
            'taxes_id':[(6,0,cls.tax_10_5.ids)],
        })
        cls.service_iva_21=cls.env['product.product'].create({
            #demodataproduct.product_product_2
            'name':'VirtualHomeStaging(VAT21)',
            'uom_id':uom_hour.id,
            'uom_po_id':uom_hour.id,
            'list_price':38.25,
            'type':'service',
            'default_code':'VAT21',
            'taxes_id':[(6,0,cls.tax_21.ids)],
        })
        cls.product_no_gravado=cls.env['product.product'].create({
            #demodataproduct_product_no_gravado
            'name':'Untaxedconcepts(VATNT)',
            'uom_id':uom_unit.id,
            'uom_po_id':uom_unit.id,
            'list_price':40.00,
            'type':'consu',
            'default_code':'NOGRAVADO',
            'taxes_id':[(6,0,cls.tax_no_gravado.ids)],
        })
        cls.product_iva_105_perc=cls.product_iva_105.copy({
            #product.product_product_25
            "name":"LaptopE5023(VAT10,5)",
            #agregamospercecipnaplicadaysufridatambien
            'taxes_id':[(6,0,[cls.tax_10_5.id,cls.tax_perc_iibb.id])],
        })
        cls.product_iva_exento=cls.env['product.product'].create({
            #demoproduct_product_exento
            'name':'Book:DevelopmentinFlectra(VATExempt)',
            'uom_id':uom_unit.id,
            'uom_po_id':uom_unit.id,
            "list_price":80.0,
            'type':'consu',
            'default_code':'EXENTO',
            'taxes_id':[(6,0,cls.tax_iva_exento.ids)],
        })

        #====DocumentTypes====
        cls.document_type={
            'invoice_a':cls.env.ref('l10n_ar.dc_a_f'),
            'credit_note_a':cls.env.ref('l10n_ar.dc_a_nc'),
            'invoice_b':cls.env.ref('l10n_ar.dc_b_f'),
            'credit_note_b':cls.env.ref('l10n_ar.dc_b_nc'),
            'invoice_e':cls.env.ref('l10n_ar.dc_e_f'),
            'invoice_mipyme_a':cls.env.ref('l10n_ar.dc_fce_a_f'),
            'invoice_mipyme_b':cls.env.ref('l10n_ar.dc_fce_b_f'),
        }

        #====Journals====
        cls.sale_expo_journal_ri=cls.env["account.journal"].create({
            'name':"ExpoSalesJournal",
            'company_id':cls.company_ri.id,
            'type':"sale",
            'code':"S0002",
            'l10n_latam_use_documents':"True",
            'l10n_ar_afip_pos_number':2,
            'l10n_ar_afip_pos_partner_id':cls.partner_ri.id,
            'l10n_ar_afip_pos_system':"FEERCEL",
            'refund_sequence':False,
        })

        #====Invoices====
        cls.demo_invoices={}

    def_create_test_invoices_like_demo(self,use_current_date=True):
        """Createintheunitteststhesameinvoicescreatedindemodata"""
        payment_term_id=self.env.ref("account.account_payment_term_end_following_month")
        invoice_user_id=self.env.user
        incoterm=self.env.ref("account.incoterm_EXW")

        invoices_to_create={
            'test_invoice_1':{
                "ref":"test_invoice_1:Invoicetogrittisupportservice,vat21",
                "partner_id":self.res_partner_gritti_mono,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":"out_invoice",
                "company_id":self.company_ri,
                "invoice_line_ids":[
                    {'product_id':self.service_iva_21}
                ],
            },
            'test_invoice_2':{
                "ref":"test_invoice_2:InvoicetoCMRwithvat21,27and10,5",
                "partner_id":self.res_partner_cmr,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":"out_invoice",
                "company_id":self.company_ri,
                "invoice_line_ids":[
                    {'product_id':self.product_iva_105,'price_unit':642.0,'quantity':5},
                    {'product_id':self.service_iva_27,'price_unit':250.0,'quantity':1},
                    {'product_id':self.product_iva_105_perc,'price_unit':3245.0,'quantity':2}
                ],
            },
            'test_invoice_3':{
                "ref":"test_invoice_3:InvoicetoADHOCwithvatceroand21",
                "partner_id":self.res_partner_adhoc,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_line_ids":[
                    {'product_id':self.product_iva_105,'price_unit':642.0,'quantity':5},
                    {'product_id':self.product_iva_cero,'price_unit':200.0,'quantity':1}
                ],
            },
            'test_invoice_4':{
                'ref':'test_invoice_4:InvoicetoADHOCwithvatexemptand21',
                "partner_id":self.res_partner_adhoc,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_line_ids":[
                    {'product_id':self.product_iva_105,'price_unit':642.0,'quantity':5},
                    {'product_id':self.product_iva_exento,'price_unit':100.0,'quantity':1},
                ],
            },
            'test_invoice_5':{
                'ref':'test_invoice_5:InvoicetoADHOCwithalltypeoftaxes',
                "partner_id":self.res_partner_adhoc,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_line_ids":[
                    {'product_id':self.product_iva_105,'price_unit':642.0,'quantity':5},
                    {'product_id':self.service_iva_27,'price_unit':250.0,'quantity':1},
                    {'product_id':self.product_iva_105_perc,'price_unit':3245.0,'quantity':2},
                    {'product_id':self.product_no_gravado,'price_unit':50.0,'quantity':10},
                    {'product_id':self.product_iva_cero,'price_unit':200.0,'quantity':1},
                    {'product_id':self.product_iva_exento,'price_unit':100.0,'quantity':1}
                ],
            },
            'test_invoice_6':{
                'ref':'test_invoice_6:Invoicetocerrocastor,fiscalpositionchangestaxestoexempt',
                "partner_id":self.res_partner_cerrocastor,
                "journal_id":self.sale_expo_journal_ri,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_incoterm_id":incoterm,
                "invoice_line_ids":[
                    {'product_id':self.product_iva_105,'price_unit':642.0,'quantity':5},
                    {'product_id':self.service_iva_27,'price_unit':250.0,'quantity':1},
                    {'product_id':self.product_iva_105_perc,'price_unit':3245.0,'quantity':2},
                    {'product_id':self.product_no_gravado,'price_unit':50.0,'quantity':10},
                    {'product_id':self.product_iva_cero,'price_unit':200.0,'quantity':1},
                    {'product_id':self.product_iva_exento,'price_unit':100.0,'quantity':1},
                ],
            },
            'test_invoice_7':{
                'ref':'test_invoice_7:Exportinvoicetoexpresso,fiscalpositionchangestaxtoexempt(type4becauseithaveservices)',
                "partner_id":self.res_partner_expresso,
                "journal_id":self.sale_expo_journal_ri,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_incoterm_id":incoterm,
                "invoice_line_ids":[
                    {'product_id':self.product_iva_105,'price_unit':642.0,'quantity':5},
                    {'product_id':self.service_iva_27,'price_unit':250.0,'quantity':1},
                    {'product_id':self.product_iva_105_perc,'price_unit':3245.0,'quantity':2},
                    {'product_id':self.product_no_gravado,'price_unit':50.0,'quantity':10},
                    {'product_id':self.product_iva_cero,'price_unit':200.0,'quantity':1},
                    {'product_id':self.product_iva_exento,'price_unit':100.0,'quantity':1},
                ],
            },
            'test_invoice_8':{
                'ref':'test_invoice_8:Invoicetoconsumidorfinal',
                "partner_id":self.partner_cf,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_line_ids":[
                    {'product_id':self.service_iva_21,'price_unit':642.0,'quantity':1},
                ],
            },
            'test_invoice_10':{
                'ref':'test_invoice_10;InvoicetoADHOCinUSDandvat21',
                "partner_id":self.res_partner_adhoc,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_line_ids":[
                    {'product_id':self.product_iva_105,'price_unit':1000.0,'quantity':5},
                ],
                "currency_id":self.env.ref("base.USD"),
            },
            'test_invoice_11':{
                'ref':'test_invoice_11:InvoicetoADHOCwithmanylinesinordertoproveroundingerror,with4decimalsofprecisionforthecurrencyand2decimalsfortheproducttheerrorapperar',
                "partner_id":self.res_partner_adhoc,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_line_ids":[
                    {'product_id':self.service_iva_21,'price_unit':1.12,'quantity':1,'name':'SupportServices1'},
                    {'product_id':self.service_iva_21,'price_unit':1.12,'quantity':1,'name':'SupportServices2'},
                    {'product_id':self.service_iva_21,'price_unit':1.12,'quantity':1,'name':'SupportServices3'},
                    {'product_id':self.service_iva_21,'price_unit':1.12,'quantity':1,'name':'SupportServices4'},
                ],
            },
            'test_invoice_12':{
                'ref':'test_invoice_12:InvoicetoADHOCwithmanylinesinordertotestroundingerror,itisrequiredtousea4decimalprecisioninprodctinordertotheerroroccur',
                "partner_id":self.res_partner_adhoc,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_line_ids":[
                    {'product_id':self.service_iva_21,'price_unit':15.7076,'quantity':1,'name':'SupportServices1'},
                    {'product_id':self.service_iva_21,'price_unit':5.3076,'quantity':2,'name':'SupportServices2'},
                    {'product_id':self.service_iva_21,'price_unit':3.5384,'quantity':2,'name':'SupportServices3'},
                    {'product_id':self.service_iva_21,'price_unit':1.6376,'quantity':2,'name':'SupportServices4'},
                ],
            },
            'test_invoice_13':{
                'ref':'test_invoice_13:InvoicetoADHOCwithmanylinesinordertotestzeroamountinvoicesyroundingerror.itisrequiredtosettheproductdecimalprecisionto4andchange260.59for260.60inordertoreproducetheerror',
                "partner_id":self.res_partner_adhoc,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_line_ids":[
                    {'product_id':self.service_iva_21,'price_unit':24.3,'quantity':3,'name':'SupportServices1'},
                    {'product_id':self.service_iva_21,'price_unit':260.59,'quantity':1,'name':'SupportServices2'},
                    {'product_id':self.service_iva_21,'price_unit':48.72,'quantity':1,'name':'SupportServices3'},
                    {'product_id':self.service_iva_21,'price_unit':13.666,'quantity':1,'name':'SupportServices4'},
                    {'product_id':self.service_iva_21,'price_unit':11.329,'quantity':2,'name':'SupportServices5'},
                    {'product_id':self.service_iva_21,'price_unit':68.9408,'quantity':1,'name':'SupportServices6'},
                    {'product_id':self.service_iva_21,'price_unit':4.7881,'quantity':2,'name':'SupportServices7'},
                    {'product_id':self.service_iva_21,'price_unit':12.0625,'quantity':2,'name':'SupportServices8'},
                ],
            },
            'test_invoice_14':{
                'ref':'test_invoice_14:Exportinvoicetoexpresso,fiscalpositionchangestaxtoexempt(type1becauseonlyproducts)',
                "partner_id":self.res_partner_expresso,
                "journal_id":self.sale_expo_journal_ri,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_incoterm_id":incoterm,
                "invoice_line_ids":[
                    {'product_id':self.product_iva_105,'price_unit':642.0,'quantity':5},
                ],
            },
            'test_invoice_15':{
                'ref':'test_invoice_15:Exportinvoicetoexpresso,fiscalpositionchangestaxtoexempt(type2becauseonlyservice)',
                "partner_id":self.res_partner_expresso,
                "journal_id":self.sale_expo_journal_ri,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_incoterm_id":incoterm,
                "invoice_line_ids":[
                    {'product_id':self.service_iva_27,'price_unit':250.0,'quantity':1},
                ],
            },
            'test_invoice_16':{
                'ref':'test_invoice_16:Exportinvoicetoexpresso,fiscalpositionchangestaxtoexempt(type1becauseithaveproductsonly,usedtotestrefundofexpo)',
                "partner_id":self.res_partner_expresso,
                "journal_id":self.sale_expo_journal_ri,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_incoterm_id":incoterm,
                "invoice_line_ids":[
                    {'product_id':self.product_iva_105,'price_unit':642.0,'quantity':5},
                ],
            },
            'test_invoice_17':{
                'ref':'test_invoice_17:InvoicetoADHOCwith100%%ofdiscount',
                "partner_id":self.res_partner_adhoc,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_line_ids":[
                    {'product_id':self.service_iva_21,'price_unit':24.3,'quantity':3,'name':'SupportServices8','discount':100},
                ],
            },
            'test_invoice_18':{
                'ref':'test_invoice_18:InvoicetoADHOCwith100%%ofdiscountandwithdifferentVATaliquots',
                "partner_id":self.res_partner_adhoc,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_line_ids":[
                    {'product_id':self.service_iva_21,'price_unit':24.3,'quantity':3,'name':'SupportServices8','discount':100},
                    {'product_id':self.service_iva_27,'price_unit':250.0,'quantity':1,'discount':100},
                    {'product_id':self.product_iva_105_perc,'price_unit':3245.0,'quantity':1},
                ],
            },
            'test_invoice_19':{
                'ref':'test_invoice_19:InvoicetoADHOCwithmultipletaxesandperceptions',
                "partner_id":self.res_partner_adhoc,
                "invoice_user_id":invoice_user_id,
                "invoice_payment_term_id":payment_term_id,
                "move_type":'out_invoice',
                "company_id":self.company_ri,
                "invoice_line_ids":[
                    {'product_id':self.service_iva_21,'price_unit':24.3,'quantity':3,'name':'SupportServices8'},
                    {'product_id':self.service_iva_27,'price_unit':250.0,'quantity':1},
                    {'product_id':self.product_iva_105_perc,'price_unit':3245.0,'quantity':1},
                ],
            }
        }

        forkey,valuesininvoices_to_create.items():
            withForm(self.env['account.move'].with_context(default_move_type=values['move_type']))asinvoice_form:
                invoice_form.ref=values['ref']
                invoice_form.partner_id=values['partner_id']
                invoice_form.invoice_user_id=values['invoice_user_id']
                invoice_form.invoice_payment_term_id=values['invoice_payment_term_id']
                ifnotuse_current_date:
                    invoice_form.invoice_date=values['invoice_date']
                ifvalues.get('invoice_incoterm_id'):
                    invoice_form.invoice_incoterm_id=values['invoice_incoterm_id']
                forlineinvalues['invoice_line_ids']:
                    withinvoice_form.invoice_line_ids.new()asline_form:
                        line_form.product_id=line.get('product_id')
                        line_form.price_unit=line.get('price_unit')
                        line_form.quantity=line.get('quantity')
                        line_form.name='xxxx'
                        line_form.account_id=self.company_data['default_account_revenue']
            invoice=invoice_form.save()
            self.demo_invoices[key]=invoice

    #Helpers

    @classmethod
    def_get_afip_pos_system_real_name(cls):
        return{'PREPRINTED':'II_IM'}

    def_create_journal(self,afip_ws,data=None):
        """CreateajournalofagivenAFIPwstype.
        IfthereisaproblembecauseweareusingaAFIPcertificatethatisalreadybeeninusethenchangethecertificateandtryagain"""
        data=dataor{}
        afip_ws=afip_ws.upper()
        pos_number=str(random.randint(0,99999))
        if'l10n_ar_afip_pos_number'indata:
            pos_number=data.get('l10n_ar_afip_pos_number')
        values={'name':'%s%s'%(afip_ws.replace('WS',''),pos_number),
                  'type':'sale',
                  'code':afip_ws,
                  'l10n_ar_afip_pos_system':self._get_afip_pos_system_real_name().get(afip_ws),
                  'l10n_ar_afip_pos_number':pos_number,
                  'l10n_latam_use_documents':True,
                  'company_id':self.env.company.id,
                  'l10n_ar_afip_pos_partner_id':self.partner_ri.id,
                  'sequence':1}
        values.update(data)

        journal=self.env['account.journal'].create(values)
        _logger.info('Createdjournal%sforcompany%s'%(journal.name,self.env.company.name))
        returnjournal

    def_create_invoice(self,data=None,invoice_type='out_invoice'):
        data=dataor{}
        withForm(self.env['account.move'].with_context(default_move_type=invoice_type))asinvoice_form:
            invoice_form.partner_id=data.get('partner',self.partner)
            if'in_'notininvoice_type:
                invoice_form.journal_id=data.get('journal',self.journal)

            ifdata.get('document_type'):
                invoice_form.l10n_latam_document_type_id=data.get('document_type')
            ifdata.get('document_number'):
                invoice_form.l10n_latam_document_number=data.get('document_number')
            ifdata.get('incoterm'):
                invoice_form.invoice_incoterm_id=data.get('incoterm')
            ifdata.get('currency'):
                invoice_form.currency_id=data.get('currency')
            forlineindata.get('lines',[{}]):
                withinvoice_form.invoice_line_ids.new()asinvoice_line_form:
                    ifline.get('display_type'):
                        invoice_line_form.display_type=line.get('display_type')
                        invoice_line_form.name=line.get('name','notinvoiceline')
                    else:
                        invoice_line_form.product_id=line.get('product',self.product_iva_21)
                        invoice_line_form.quantity=line.get('quantity',1)
                        invoice_line_form.price_unit=line.get('price_unit',100)
            invoice_form.invoice_date=invoice_form.date
        invoice=invoice_form.save()
        returninvoice

    def_create_invoice_product(self,data=None):
        data=dataor{}
        returnself._create_invoice(data)

    def_create_invoice_service(self,data=None):
        data=dataor{}
        newlines=[]
        forlineindata.get('lines',[{}]):
            line.update({'product':self.service_iva_27})
            newlines.append(line)
        data.update({'lines':newlines})
        returnself._create_invoice(data)

    def_create_invoice_product_service(self,data=None):
        data=dataor{}
        newlines=[]
        forlineindata.get('lines',[{}]):
            line.update({'product':self.product_iva_21})
            newlines.append(line)
        data.update({'lines':newlines+[{'product':self.service_iva_27}]})
        returnself._create_invoice(data)

    def_create_credit_note(self,invoice,data=None):
        data=dataor{}
        refund_wizard=self.env['account.move.reversal'].with_context({'active_ids':[invoice.id],'active_model':'account.move'}).create({
            'reason':data.get('reason','Mercader√≠adefectuosa'),
            'refund_method':data.get('refund_method','refund')})

        forced_document_type=data.get('document_type')
        ifforced_document_type:
            refund_wizard.l10n_latam_document_type_id=forced_document_type.id

        res=refund_wizard.reverse_moves()
        refund=self.env['account.move'].browse(res['res_id'])
        returnrefund

    def_create_debit_note(self,invoice,data=None):
        data=dataor{}
        debit_note_wizard=self.env['account.debit.note'].with_context(
            {'active_ids':[invoice.id],'active_model':'account.move','default_copy_lines':True}).create({
                'reason':data.get('reason','Mercader√≠adefectuosa')})
        res=debit_note_wizard.create_debit()
        debit_note=self.env['account.move'].browse(res['res_id'])
        returndebit_note

    def_search_tax(self,tax_type):
        res=self.env['account.tax'].with_context(active_test=False).search([
            ('type_tax_use','=','sale'),
            ('company_id','=',self.env.company.id),
            ('tax_group_id','=',self.env.ref('l10n_ar.tax_group_'+tax_type).id)],limit=1)
        self.assertTrue(res,'%sTaxwasnotfound'%(tax_type))
        returnres

    def_search_fp(self,name):
        returnself.env['account.fiscal.position'].search([('company_id','=',self.env.company.id),('name','=',name)])

    def_post(self,invoice):
        invoice.action_post()
        self.assertEqual(invoice.state,'posted')

    def_prepare_multicurrency_values(self):
        #Enablemulticurrency
        self.env.user.write({'groups_id':[(4,self.env.ref('base.group_multi_currency').id)]})
        #SetARSasmaincurrency
        self._set_today_rate(self.env.ref('base.ARS'),1.0)
        #SetRatesforUSDcurrency
        self._set_today_rate(self.env.ref('base.USD'),1.0/162.013)

    def_set_today_rate(self,currency,value):
        rate_obj=self.env['res.currency.rate']
        rate=rate_obj.search([('currency_id','=',currency.id),('name','=',fields.Date.to_string(fields.Date.today())),
                                ('company_id','=',self.env.company.id)])
        ifrate:
            rate.rate=value
        else:
            rate_obj.create({'company_id':self.env.company.id,'currency_id':currency.id,'rate':value})
        _logger.log(25,'Using%srate%s'%(currency.name,currency.rate))
