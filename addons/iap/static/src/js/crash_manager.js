flectra.define('iap.CrashManager',function(require){
"usestrict";

varajax=require('web.ajax');
varcore=require('web.core');
varCrashManager=require('web.CrashManager').CrashManager;
varDialog=require('web.Dialog');

var_t=core._t;
varQWeb=core.qweb;

CrashManager.include({
    /**
     *Changebuttonstringdependingifit'sEnterpriseandtrialavailable
     *(Onlychangethetextmessageinthebutton,doesn'tchangeIAPsidevalidation)
     *
     *@param{boolean}isTrial
     *@returns{string}
     *@private
     */
    _getButtonMessage:function(isTrial){
        varisEnterprise=_.last(flectra.session_info.server_version_info)==='e';
        returnisTrial&&isEnterprise?_t('StartaTrialatFlectra'):_t('Buycredits');
    },
    /**
     *@override
     */
    rpc_error:function(error){
        varself=this;
        if(error.data.name==="flectra.addons.iap.tools.iap_tools.InsufficientCreditError"){
            varerror_data=JSON.parse(error.data.message);
            ajax.jsonRpc('/web/dataset/call_kw','call',{
                model: 'iap.account',
                method:'get_credits_url',
                args:[],
                kwargs:{
                    base_url:error_data.base_url,
                    service_name:error_data.service_name,
                    credit:error_data.credit,
                    trial:error_data.trial
                }
            }).then(function(url){
                varcontent=$(QWeb.render('iap.redirect_to_flectra_credit',{
                        data:error_data,
                    }));
                if(error_data.body){
                    content.css('padding',0);
                }
                newDialog(this,{
                    size:'large',
                    title:error_data.title||_t("InsufficientBalance"),
                    $content:content,
                    buttons:[{
                        text:self._getButtonMessage(error_data.trial),
                        classes:"btn-primary",
                        click:function(){
                            window.open(url,'_blank');
                        },
                        close:true,
                    },{
                        text:_t("Cancel"),
                        close:true,
                    }],
                }).open();
            });
        }else{
            this._super.apply(this,arguments);
        }
    },
});

});
