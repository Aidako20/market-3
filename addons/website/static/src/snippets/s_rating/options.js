flectra.define('website.s_rating_options',function(require){
'usestrict';

constweWidgets=require('wysiwyg.widgets');
constoptions=require('web_editor.snippets.options');

options.registry.Rating=options.Class.extend({
    /**
     *@override
     */
    start:function(){
        this.iconType=this.$target[0].dataset.icon;
        this.faClassActiveCustomIcons=this.$target[0].dataset.activeCustomIcon||'';
        this.faClassInactiveCustomIcons=this.$target[0].dataset.inactiveCustomIcon||'';
        returnthis._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Options
    //--------------------------------------------------------------------------

    /**
     *Displaystheselectedicontype.
     *
     *@seethis.selectClassforparameters
     */
    setIcons:function(previewMode,widgetValue,params){
        this.iconType=widgetValue;
        this._renderIcons();
        this.$target[0].dataset.icon=widgetValue;
        deletethis.$target[0].dataset.activeCustomIcon;
        deletethis.$target[0].dataset.inactiveCustomIcon;
    },
    /**
     *Allowstoselectafontawesomeiconwithmediadialog.
     *
     *@seethis.selectClassforparameters
     */
    customIcon:asyncfunction(previewMode,widgetValue,params){
        returnnewPromise(resolve=>{
            constdialog=newweWidgets.MediaDialog(
                this,
                {noImages:true,noDocuments:true,noVideos:true,mediaWidth:1920},
                $('<i/>')
            );
            this._saving=false;
            dialog.on('save',this,function(attachments){
                this._saving=true;
                constcustomClass='fa'+attachments.className;
                const$activeIcons=this.$target.find('.s_rating_active_icons>i');
                const$inactiveIcons=this.$target.find('.s_rating_inactive_icons>i');
                const$icons=params.customActiveIcon==='true'?$activeIcons:$inactiveIcons;
                $icons.removeClass().addClass(customClass);
                this.faClassActiveCustomIcons=$activeIcons.length>0?$activeIcons.attr('class'):customClass;
                this.faClassInactiveCustomIcons=$inactiveIcons.length>0?$inactiveIcons.attr('class'):customClass;
                this.$target[0].dataset.activeCustomIcon=this.faClassActiveCustomIcons;
                this.$target[0].dataset.inactiveCustomIcon=this.faClassInactiveCustomIcons;
                this.$target[0].dataset.icon='custom';
                this.iconType='custom';
                resolve();
            });
            dialog.on('closed',this,function(){
                if(!this._saving){
                    resolve();
                }
            });
            dialog.open();
        });
    },
    /**
     *Setsthenumberofactiveicons.
     *
     *@seethis.selectClassforparameters
     */
    activeIconsNumber:function(previewMode,widgetValue,params){
        this.nbActiveIcons=parseInt(widgetValue);
        this._createIcons();
    },
    /**
     *Setsthetotalnumberoficons.
     *
     *@seethis.selectClassforparameters
     */
    totalIconsNumber:function(previewMode,widgetValue,params){
        this.nbTotalIcons=Math.max(parseInt(widgetValue),1);
        this._createIcons();
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    _computeWidgetState:function(methodName,params){
        switch(methodName){
            case'setIcons':{
                returnthis.$target[0].dataset.icon;
            }
            case'activeIconsNumber':{
                this.nbActiveIcons=this.$target.find('.s_rating_active_icons>i').length;
                returnthis.nbActiveIcons;
            }
            case'totalIconsNumber':{
                this.nbTotalIcons=this.$target.find('.s_rating_iconsi').length;
                returnthis.nbTotalIcons;
            }
        }
        returnthis._super(...arguments);
    },
    /**
     *Createstheicons.
     *
     *@private
     */
    _createIcons:function(){
        const$activeIcons=this.$target.find('.s_rating_active_icons');
        const$inactiveIcons=this.$target.find('.s_rating_inactive_icons');
        this.$target.find('.s_rating_iconsi').remove();
        for(leti=0;i<this.nbTotalIcons;i++){
            if(i<this.nbActiveIcons){
                $activeIcons.append('<i/>');
            }else{
                $inactiveIcons.append('<i/>');
            }
        }
        this._renderIcons();
    },
    /**
     *Rendersiconswithselectedfonts.
     *
     *@private
     */
    _renderIcons:function(){
        consticons={
            'fa-star':'fa-star-o',
            'fa-thumbs-up':'fa-thumbs-o-up',
            'fa-circle':'fa-circle-o',
            'fa-square':'fa-square-o',
            'fa-heart':'fa-heart-o'
        };
        constfaClassActiveIcons=(this.iconType==="custom")?this.faClassActiveCustomIcons:'fa'+this.iconType;
        constfaClassInactiveIcons=(this.iconType==="custom")?this.faClassInactiveCustomIcons:'fa'+icons[this.iconType];
        const$activeIcons=this.$target.find('.s_rating_active_icons>i');
        const$inactiveIcons=this.$target.find('.s_rating_inactive_icons>i');
        $activeIcons.removeClass().addClass(faClassActiveIcons);
        $inactiveIcons.removeClass().addClass(faClassInactiveIcons);
    },
});
});
