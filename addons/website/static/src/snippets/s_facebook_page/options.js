flectra.define('website.s_facebook_page_options',function(require){
'usestrict';

constoptions=require('web_editor.snippets.options');

options.registry.facebookPage=options.Class.extend({
    /**
     *Initializestherequiredfacebookpagedatatocreatetheiframe.
     *
     *@override
     */
    willStart:function(){
        vardefs=[this._super.apply(this,arguments)];

        vardefaults={
            href:'',
            id:'',
            height:215,
            width:350,
            tabs:'',
            small_header:true,
            hide_cover:true,
            show_facepile:false,
        };
        this.fbData=_.defaults(_.pick(this.$target.data(),_.keys(defaults)),defaults);

        if(!this.fbData.href){
            //Fetchesthedefaulturlforfacebookpagefromwebsiteconfig
            varself=this;
            defs.push(this._rpc({
                model:'website',
                method:'search_read',
                args:[[],['social_facebook']],
                limit:1,
            }).then(function(res){
                if(res){
                    self.fbData.href=res[0].social_facebook||'';
                }
            }));
        }

        returnPromise.all(defs).then(()=>this._markFbElement()).then(()=>this._refreshPublicWidgets());
    },

    //--------------------------------------------------------------------------
    //Options
    //--------------------------------------------------------------------------

    /**
     *Togglesacheckboxoption.
     *
     *@seethis.selectClassforparameters
     *@param{String}optionNamethenameoftheoptiontotoggle
     */
    toggleOption:function(previewMode,widgetValue,params){
        letoptionName=params.optionName;
        if(optionName.startsWith('tab.')){
            optionName=optionName.replace('tab.','');
            if(widgetValue){
                this.fbData.tabs=this.fbData.tabs
                    .split(',')
                    .filter(t=>t!=='')
                    .concat([optionName])
                    .join(',');
            }else{
                this.fbData.tabs=this.fbData.tabs
                    .split(',')
                    .filter(t=>t!==optionName)
                    .join(',');
            }
        }else{
            if(optionName==='show_cover'){
                this.fbData.hide_cover=!widgetValue;
            }else{
                this.fbData[optionName]=widgetValue;
            }
        }
        returnthis._markFbElement();
    },
    /**
     *Setsthefacebookpage'sURL.
     *
     *@seethis.selectClassforparameters
     */
    pageUrl:function(previewMode,widgetValue,params){
        this.fbData.href=widgetValue;
        returnthis._markFbElement();
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *SetsthecorrectdataAttributesonthefacebookiframeandrefreshesit.
     *
     *@seethis.selectClassforparameters
     */
    _markFbElement:function(){
        returnthis._checkURL().then(()=>{
            //Managingheightbasedonoptions
            if(this.fbData.tabs){
                this.fbData.height=this.fbData.tabs==='events'?300:500;
            }elseif(this.fbData.small_header){
                this.fbData.height=this.fbData.show_facepile?165:70;
            }else{
                this.fbData.height=this.fbData.show_facepile?225:150;
            }
            _.each(this.fbData,(value,key)=>{
                this.$target.attr('data-'+key,value);
                this.$target.data(key,value);
            });
        });
    },
    /**
     *@override
     */
    _computeWidgetState:function(methodName,params){
        constoptionName=params.optionName;
        switch(methodName){
            case'toggleOption':{
                if(optionName.startsWith('tab.')){
                    returnthis.fbData.tabs.split(',').includes(optionName.replace(/^tab./,''));
                }else{
                    if(optionName==='show_cover'){
                        return!this.fbData.hide_cover;
                    }
                    returnthis.fbData[optionName];
                }
            }
            case'pageUrl':{
                returnthis._checkURL().then(()=>this.fbData.href);
            }
        }
        returnthis._super(...arguments);
    },
    /**
     *@override
     */
    _computeWidgetVisibility(widgetName,params){
        if(params.optionName==='show_facepile'){
            //TODO:Removethisoptioninmaster(inthemeantimewehideit).
            returnfalse;
        }
        returnthis._super(...arguments);
    },
    /**
     *@private
     */
    _checkURL:function(){
        constdefaultURL='https://www.facebook.com/Flectra';
        //Patternsmatchedbytheregex(allrelatetoexistingpages,
        //inspiteoftheURLscontaining"profile.php"or"people"):
        //-https://www.facebook.com/<pagewithaname>
        //-http://www.facebook.com/<page.with.a.name>
        //-www.facebook.com/<fbid>
        //-facebook.com/profile.php?id=<fbid>
        //-www.facebook.com/<name>-<fbid> -NB:thenamedoesn'tmatter
        //-www.fb.com/people/<name>/<fbid> -same
        //-m.facebook.com/p/<name>-<fbid> -same
        //Theregexiskeptasahugeone-linerforperformanceasitis
        //compiledonceonscriptload.Theonlywaytosplititonseveral
        //linesiswiththeRegExpconstructor,whichiscompiledonruntime.
        constmatch=this.fbData.href.match(/^(https?:\/\/)?((www\.)?(fb|facebook)|(m\.)?facebook)\.com\/(((profile\.php\?id=|people\/[^/?#]+\/|(p\/)?[^/?#]+-)(?<id>[0-9]{15,16}))|(?<nameid>[\w.]+))($|[/?#])/);
        if(match){
            //CheckifthepageexistsonFacebookornot
            constpageId=match.groups.nameid||match.groups.id;
            returnfetch(`https://graph.facebook.com/${pageId}/picture`)
            .then((res)=>{
                if(res.ok){
                    this.fbData.id=pageId;
                }else{
                    this.fbData.id="";
                    this.fbData.href=defaultURL;
                }
            });
        }
        this.fbData.id="";
        this.fbData.href=defaultURL;
        returnPromise.resolve();
    },
});
});
