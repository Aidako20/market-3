flectra.define('website.s_chart',function(require){
'usestrict';

constpublicWidget=require('web.public.widget');
constweUtils=require('web_editor.utils');

constChartWidget=publicWidget.Widget.extend({
    selector:'.s_chart',
    disabledInEditableMode:false,
    jsLibs:[
        '/web/static/lib/Chart/Chart.js',
    ],

    /**
     *@override
     *@param{Object}parent
     *@param{Object}optionsThedefaultvalueofthechartbar.
     */
    init:function(parent,options){
        this._super.apply(this,arguments);
        this.style=window.getComputedStyle(document.documentElement);
    },
    /**
     *@override
     */
    start:function(){
        //ConvertThemecolorstocsscolor
        constdata=JSON.parse(this.el.dataset.data);
        data.datasets.forEach(el=>{
            if(Array.isArray(el.backgroundColor)){
                el.backgroundColor=el.backgroundColor.map(el=>this._convertToCssColor(el));
                el.borderColor=el.borderColor.map(el=>this._convertToCssColor(el));
            }else{
                el.backgroundColor=this._convertToCssColor(el.backgroundColor);
                el.borderColor=this._convertToCssColor(el.borderColor);
            }
            el.borderWidth=this.el.dataset.borderWidth;
        });

        //Makechartdata
        constchartData={
            type:this.el.dataset.type,
            data:data,
            options:{
                legend:{
                    display:this.el.dataset.legendPosition!=='none',
                    position:this.el.dataset.legendPosition,
                },
                tooltips:{
                    enabled:this.el.dataset.tooltipDisplay==='true',
                },
                title:{
                    display:!!this.el.dataset.title,
                    text:this.el.dataset.title,
                },
            },
        };

        //Addtypespecificoptions
        if(this.el.dataset.type==='radar'){
            chartData.options.scale={
                ticks:{
                    beginAtZero:true,
                }
            };
        }elseif(['pie','doughnut'].includes(this.el.dataset.type)){
            chartData.options.tooltips.callbacks={
                label:(tooltipItem,data)=>{
                    constlabel=data.datasets[tooltipItem.datasetIndex].label;
                    constsecondLabel=data.labels[tooltipItem.index];
                    letfinal=label;
                    if(label){
                        if(secondLabel){
                            final=label+'-'+secondLabel;
                        }
                    }elseif(secondLabel){
                        final=secondLabel;
                    }
                    returnfinal+':'+data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                },
            };
        }else{
            chartData.options.scales={
                xAxes:[{
                    stacked:this.el.dataset.stacked==='true',
                    ticks:{
                        beginAtZero:true
                    },
                }],
                yAxes:[{
                    stacked:this.el.dataset.stacked==='true',
                    ticks:{
                        beginAtZero:true
                    },
                }],
            };
        }

        //Disableanimationineditmode
        if(this.editableMode){
            chartData.options.animation={
                duration:0,
            };
        }

        constcanvas=this.el.querySelector('canvas');
        this.chart=newwindow.Chart(canvas,chartData);
        returnthis._super.apply(this,arguments);
    },
    /**
     *@override
     *DiscardalllibrarychangestoresetthestateoftheHtml.
     */
    destroy:function(){
        if(this.chart){//Thewidgetcanbedestroyedbeforestarthascompleted
            this.chart.destroy();
            this.el.querySelectorAll('.chartjs-size-monitor').forEach(el=>el.remove());
        }
        this._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@private
     *@param{string}colorAcsscolororthemecolorstring
     *@returns{string}Csscolor
     */
    _convertToCssColor:function(color){
        if(!color){
            return'transparent';
        }
        returnweUtils.getCSSVariableValue(color,this.style)||color;
    },
});

publicWidget.registry.chart=ChartWidget;

returnChartWidget;
});
