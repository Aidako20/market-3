flectra.define('website.s_chart_options',function(require){
'usestrict';

varcore=require('web.core');
const{ColorpickerWidget}=require('web.Colorpicker');
varoptions=require('web_editor.snippets.options');
constweUtils=require('web_editor.utils');

var_t=core._t;

options.registry.InnerChart=options.Class.extend({
    custom_events:_.extend({},options.Class.prototype.custom_events,{
        'get_custom_colors':'_onGetCustomColors',
    }),
    events:_.extend({},options.Class.prototype.events,{
        'clickwe-button.add_column':'_onAddColumnClick',
        'clickwe-button.add_row':'_onAddRowClick',
        'clickwe-button.o_we_matrix_remove_col':'_onRemoveColumnClick',
        'clickwe-button.o_we_matrix_remove_row':'_onRemoveRowClick',
        'blurwe-matrixinput':'_onMatrixInputFocusOut',
        'focuswe-matrixinput':'_onMatrixInputFocus',
    }),

    /**
     *@override
     */
    init:function(){
        this._super.apply(this,arguments);
        this.themeArray=['o-color-1','o-color-2','o-color-3','o-color-4','o-color-5'];
        this.style=window.getComputedStyle(document.documentElement);
    },
    /**
     *@override
     */
    start:function(){
        this.backSelectEl=this.el.querySelector('[data-name="chart_bg_color_opt"]');
        this.borderSelectEl=this.el.querySelector('[data-name="chart_border_color_opt"]');

        //Buildmatrixcontent
        this.tableEl=this.el.querySelector('we-matrixtable');
        constdata=JSON.parse(this.$target[0].dataset.data);
        data.labels.forEach(el=>{
            this._addRow(el);
        });
        data.datasets.forEach((el,i)=>{
            if(this._isPieChart()){
                //Addheadercolorsincasetheuserchangesthetypeofgraph
                constheaderBackgroundColor=this.themeArray[i]||this._randomColor();
                constheaderBorderColor=this.themeArray[i]||this._randomColor();
                this._addColumn(el.label,el.data,headerBackgroundColor,headerBorderColor,el.backgroundColor,el.borderColor);
            }else{
                this._addColumn(el.label,el.data,el.backgroundColor,el.borderColor);
            }
        });
        this._displayRemoveColButton();
        this._displayRemoveRowButton();
        this._setDefaultSelectedInput();
        returnthis._super(...arguments);
    },
    /**
     *@override
     */
    updateUI:asyncfunction(){
        //Selectedinputmightnotbeindomanymoreifcol/rowremoved
        //Donebefore_superbecause_computeWidgetStateofcolorChange
        if(!this.lastEditableSelectedInput.closest('table')||this.colorPaletteSelectedInput&&!this.colorPaletteSelectedInput.closest('table')){
            this._setDefaultSelectedInput();
        }

        awaitthis._super(...arguments);

        this.backSelectEl.querySelector('we-title').textContent=this._isPieChart()?_t("DataColor"):_t("DatasetColor");
        this.borderSelectEl.querySelector('we-title').textContent=this._isPieChart()?_t("DataBorder"):_t("DatasetBorder");

        //Dataset/Cellcolor
        this.tableEl.querySelectorAll('input').forEach(el=>el.style.border='');
        constselector=this._isPieChart()?'tdinput':'tr:first-childinput';
        this.tableEl.querySelectorAll(selector).forEach(el=>{
            constcolor=el.dataset.backgroundColor||el.dataset.borderColor;
            if(color){
                el.style.border='2pxsolid';
                el.style.borderColor=ColorpickerWidget.isCSSColor(color)?color:weUtils.getCSSVariableValue(color,this.style);
            }
        });
    },

    //--------------------------------------------------------------------------
    //Options
    //--------------------------------------------------------------------------

    /**
     *Setthecolorontheselectedinput.
     */
    colorChange:asyncfunction(previewMode,widgetValue,params){
        if(widgetValue){
            this.colorPaletteSelectedInput.dataset[params.attributeName]=widgetValue;
        }else{
            deletethis.colorPaletteSelectedInput.dataset[params.attributeName];
        }
        awaitthis._reloadGraph();
        //Tofocusbacktheinputthatiseditedwehavetowaitforthecolor
        //pickertobefullyreloaded.
        awaitnewPromise(resolve=>setTimeout(()=>{
            this.lastEditableSelectedInput.focus();
            resolve();
        }));
    },
    /**
     *@override
     */
    selectDataAttribute:asyncfunction(previewMode,widgetValue,params){
        awaitthis._super(...arguments);
        //DatamightchangeifgoingfromortoapieChart.
        if(params.attributeName==='type'){
            this._setDefaultSelectedInput();
            awaitthis._reloadGraph();
        }
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    _computeWidgetState:function(methodName,params){
        if(methodName==='colorChange'){
            returnthis.colorPaletteSelectedInput&&this.colorPaletteSelectedInput.dataset[params.attributeName]||'';
        }
        returnthis._super(...arguments);
    },
    /**
     *@override
     */
    _computeWidgetVisibility:function(widgetName,params){
        switch(widgetName){
            case'stacked_chart_opt':{
                returnthis._getColumnCount()>1;
            }
            case'chart_bg_color_opt':
            case'chart_border_color_opt':{
                return!!this.colorPaletteSelectedInput;
            }
        }
        returnthis._super(...arguments);
    },
    /**
     *Setsandreloadsthedataonthecanvasifithaschanged.
     *Usedinmatrixrelatedmethod.
     *
     *@private
     */
    _reloadGraph:asyncfunction(){
        constjsonValue=this._matrixToChartData();
        if(this.$target[0].dataset.data!==jsonValue){
            this.$target[0].dataset.data=jsonValue;
            awaitthis._refreshPublicWidgets();
        }
    },
    /**
     *Returnastringifyedchart.jsdataobjectfromthematrix
     *Piechartshaveonecolorperdatawhileotherchartshaveonecolorperdataset.
     *
     *@private
     */
    _matrixToChartData:function(){
        constdata={
            labels:[],
            datasets:[],
        };
        this.tableEl.querySelectorAll('tr:first-childinput').forEach(el=>{
            data.datasets.push({
                label:el.value||'',
                data:[],
                backgroundColor:this._isPieChart()?[]:el.dataset.backgroundColor||'',
                borderColor:this._isPieChart()?[]:el.dataset.borderColor||'',
            });
        });
        this.tableEl.querySelectorAll('tr:not(:first-child):not(:last-child)').forEach((el)=>{
            consttitle=el.querySelector('thinput').value||'';
            data.labels.push(title);
            el.querySelectorAll('tdinput').forEach((el,i)=>{
                data.datasets[i].data.push(el.value||0);
                if(this._isPieChart()){
                    data.datasets[i].backgroundColor.push(el.dataset.backgroundColor||'');
                    data.datasets[i].borderColor.push(el.dataset.borderColor||'');
                }
            });
        });
        returnJSON.stringify(data);
    },
    /**
     *Returnatdcontainingawe-buttonwithminusicon
     *
     *@param {...string}classesClassestoaddtothewe-button
     *@returns{HTMLElement}
     */
    _makeDeleteButton:function(...classes){
        constrmbuttonEl=options.buildElement('we-button',null,{
            classes:['o_we_text_danger','o_we_link','fa','fa-fw','fa-minus',...classes],
        });
        constnewEl=document.createElement('td');
        newEl.appendChild(rmbuttonEl);
        returnnewEl;
    },
    /**
     *Addacolumntothematrix
     *Theth(datasetlabel)ofacolumnholdthecolorsfortheentiredatasetifthegraphisnotapiechart
     *Ifthegraphisapiechartthecolorofthetd(data)areused.
     *
     *@private
     *@param{String}titleThetitleofthecolumn
     *@param{Array}valuesThevaluesofthecolumninput
     *@param{String}heardeBackgroundColorThebackgroundcolorofthedataset
     *@param{String}headerBorderColorThebordercolorofthedataset
     *@param{string[]}cellBackgroundColorsThebackgroundcolorsofthedatasinputs,randomcolorifmissing
     *@param{string[]}cellBorderColorsThebordercolorofthedatasinputs,nocolorifmissing
     */
    _addColumn:function(title,values,heardeBackgroundColor,headerBorderColor,cellBackgroundColors=[],cellBorderColors=[]){
        constfirstRow=this.tableEl.querySelector('tr:first-child');
        constheaderInput=this._makeCell('th',title,heardeBackgroundColor,headerBorderColor);
        firstRow.insertBefore(headerInput,firstRow.lastElementChild);

        this.tableEl.querySelectorAll('tr:not(:first-child):not(:last-child)').forEach((el,i)=>{
            constnewCell=this._makeCell('td',values?values[i]:null,cellBackgroundColors[i]||this._randomColor(),cellBorderColors[i-1]);
            el.insertBefore(newCell,el.lastElementChild);
        });

        constlastRow=this.tableEl.querySelector('tr:last-child');
        constremoveButton=this._makeDeleteButton('o_we_matrix_remove_col');
        lastRow.appendChild(removeButton);
    },
    /**
     *Addarowtothematrix
     *Thebackgroundcolorofthedatasarerandom
     *
     *@private
     *@param{String}tilteThetitleoftherow
     */
    _addRow:function(tilte){
        consttrEl=document.createElement('tr');
        trEl.appendChild(this._makeCell('th',tilte));
        this.tableEl.querySelectorAll('tr:first-childinput').forEach(()=>{
            trEl.appendChild(this._makeCell('td',null,this._randomColor()));
        });
        trEl.appendChild(this._makeDeleteButton('o_we_matrix_remove_row'));
        consttbody=this.tableEl.querySelector('tbody');
        tbody.insertBefore(trEl,tbody.lastElementChild);
    },
    /**
     *@private
     *@param{string}tagtagoftheHTMLElement(td/th)
     *@param{string}valueThecurrentvalueofthecellinput
     *@param{string}backgroundColorThebackgroundColorofthedataonthegraph
     *@param{string}borderColorTheborderColorofthethedataonthegraph
     *@returns{HTMLElement}
     */
    _makeCell:function(tag,value,backgroundColor,borderColor){
        constnewEl=document.createElement(tag);
        constcontentEl=document.createElement('input');
        contentEl.type='text';
        contentEl.value=value||'';
        if(backgroundColor){
            contentEl.dataset.backgroundColor=backgroundColor;
        }
        if(borderColor){
            contentEl.dataset.borderColor=borderColor;
        }
        newEl.appendChild(contentEl);
        returnnewEl;
    },
    /**
     *DisplaytheremovebuttoncorespondingtothecolIndex
     *
     *@private
     *@param{Int}colIndexCanbeundefined,ifsothelastremovebuttonofthecolumnwillbeshown
     */
    _displayRemoveColButton:function(colIndex){
        if(this._getColumnCount()>1){
            this._displayRemoveButton(colIndex,'o_we_matrix_remove_col');
        }
    },
    /**
     *DisplaytheremovebuttoncorespondingtotherowIndex
     *
     *@private
     *@param{Int}rowIndexCanbeundefined,ifsothelastremovebuttonoftherowwillbeshown
     */
    _displayRemoveRowButton:function(rowIndex){
        //Nbrofrowminusheaderandbutton
        constrowCount=this.tableEl.rows.length-2;
        if(rowCount>1){
            this._displayRemoveButton(rowIndex,'o_we_matrix_remove_row');
        }
    },
    /**
     *@private
     *@param{Int}tdIndexCanbeundefined,ifsothelastremovebuttonwillbeshown
     *@param{String}btnClassEithero_we_matrix_remove_coloro_we_matrix_remove_row
     */
    _displayRemoveButton:function(tdIndex,btnClass){
        constremoveBtn=this.tableEl.querySelectorAll(`tdwe-button.${btnClass}`);
        removeBtn.forEach(el=>el.style.display='');//hideall
        constindex=tdIndex<removeBtn.length?tdIndex:removeBtn.length-1;
        removeBtn[index].style.display='inline-block';
    },
    /**
     *@private
     *@return{boolean}
     */
    _isPieChart:function(){
        return['pie','doughnut'].includes(this.$target[0].dataset.type);
    },
    /**
     *Returnthenumberofcolumnminusheaderandbutton
     *@private
     *@return{integer}
     */
    _getColumnCount:function(){
        returnthis.tableEl.rows[0].cells.length-2;
    },
    /**
     *Selectthefirstdatainput
     *
     *@private
     */
    _setDefaultSelectedInput:function(){
        this.lastEditableSelectedInput=this.tableEl.querySelector('tdinput');
        if(this._isPieChart()){
            this.colorPaletteSelectedInput=this.lastEditableSelectedInput;
        }else{
            this.colorPaletteSelectedInput=this.tableEl.querySelector('thinput');
        }
    },
    /**
     *Returnarandomhexadecimalcolor.
     *
     *@private
     *@return{string}
     */
    _randomColor:function(){
        return'#'+('00000'+(Math.random()*(1<<24)|0).toString(16)).slice(-6).toUpperCase();
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *UsedbycolorPalettetoretrievethecustomcolorsusedonthechart
     *Makeanarraywithallthecustomcolorsusedonthechart
     *andapplyittotheonSuccessmethodprovidedbythetrigger_up.
     *
     *@private
     */
    _onGetCustomColors:function(ev){
        constdata=JSON.parse(this.$target[0].dataset.data||'');
        letcustomColors=[];
        data.datasets.forEach(el=>{
            if(this._isPieChart()){
                customColors=customColors.concat(el.backgroundColor).concat(el.borderColor);
            }else{
                customColors.push(el.backgroundColor);
                customColors.push(el.borderColor);
            }
        });
        customColors=customColors.filter((el,i,array)=>{
            return!weUtils.getCSSVariableValue(el,this.style)&&array.indexOf(el)===i&&el!=='';//uniquenonclassnottransparent
        });
        ev.data.onSuccess(customColors);
    },
    /**
     *Addarowattheendofthematrixanddisplayit'sremovebutton
     *Choosethecolorofthecolumnfromthethemearrayorarandomcoloriftheyarealreadyused
     *
     *@private
     */
    _onAddColumnClick:function(){
        constusedColor=Array.from(this.tableEl.querySelectorAll('tr:first-childinput')).map(el=>el.dataset.backgroundColor);
        constcolor=this.themeArray.filter(el=>!usedColor.includes(el))[0]||this._randomColor();
        this._addColumn(null,null,color,color);
        this._reloadGraph().then(()=>{
            this._displayRemoveColButton();
            this.updateUI();
        });
    },
    /**
     *Addacolumnattheendofthematrixanddisplayit'sremovebutton
     *
     *@private
     */
    _onAddRowClick:function(){
        this._addRow();
        this._reloadGraph().then(()=>{
            this._displayRemoveRowButton();
            this.updateUI();
        });
    },
    /**
     *Removethecolumnandshowtheremovebuttonofthenextcolumnorthelastifnonext.
     *
     *@private
     *@param{Event}ev
     */
    _onRemoveColumnClick:function(ev){
        constcell=ev.currentTarget.parentElement;
        constcellIndex=cell.cellIndex;
        this.tableEl.querySelectorAll('tr').forEach((el)=>{
            el.children[cellIndex].remove();
        });
        this._displayRemoveColButton(cellIndex-1);
        this._reloadGraph().then(()=>{
            this.updateUI();
        });
    },
    /**
     *Removetherowandshowtheremovebuttonofthenextroworthelastifnonext.
     *
     *@private
     *@param{Event}ev
     */
    _onRemoveRowClick:function(ev){
        constrow=ev.currentTarget.parentElement.parentElement;
        constrowIndex=row.rowIndex;
        row.remove();
        this._displayRemoveRowButton(rowIndex-1);
        this._reloadGraph().then(()=>{
            this.updateUI();
        });
    },
    /**
     *@private
     *@param{Event}ev
     */
    _onMatrixInputFocusOut:function(ev){
        //Sometimes,aninputisfocusoutforinternalreason(likeanundo
        //recording)thenfocusedagainmanuallyinthesameJSstack
        //execution.Inthatcase,theblurshouldnottriggeranoption
        //selectionastheuserdidnotleavetheinput.Wethusdefertheblur
        //handlingtothencheckthatthetargetisindeedstillblurredbefore
        //executingtheactualoptionselection.
        setTimeout(()=>{
            if(ev.currentTarget===document.activeElement){
                return;
            }
            this._reloadGraph();
        });
    },
    /**
     *Settheselectedcell/headeranddisplaytherelatedremovebutton
     *
     *@private
     *@param{Event}ev
     */
    _onMatrixInputFocus:function(ev){
        this.lastEditableSelectedInput=ev.target;
        constcol=ev.target.parentElement.cellIndex;
        constrow=ev.target.parentElement.parentElement.rowIndex;
        if(this._isPieChart()){
            this.colorPaletteSelectedInput=ev.target.parentNode.tagName==='TD'?ev.target:null;
        }else{
            this.colorPaletteSelectedInput=this.tableEl.querySelector(`tr:first-childth:nth-of-type(${col+1})input`);
        }
        if(col>0){
            this._displayRemoveColButton(col-1);
        }
        if(row>0){
            this._displayRemoveRowButton(row-1);
        }
        this.updateUI();
    },
});
});
