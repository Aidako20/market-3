flectra.define('website.root',function(require){
'usestrict';

constajax=require('web.ajax');
const{_t}=require('web.core');
varDialog=require('web.Dialog');
constKeyboardNavigationMixin=require('web.KeyboardNavigationMixin');
constsession=require('web.session');
varpublicRootData=require('web.public.root');
require("web.zoomflectra");

varwebsiteRootRegistry=publicRootData.publicRootRegistry;

varWebsiteRoot=publicRootData.PublicRoot.extend(KeyboardNavigationMixin,{
    events:_.extend({},KeyboardNavigationMixin.events,publicRootData.PublicRoot.prototype.events||{},{
        'click.js_change_lang':'_onLangChangeClick',
        'click.js_publish_management.js_publish_btn':'_onPublishBtnClick',
        'click.js_multi_website_switch':'_onWebsiteSwitch',
        'shown.bs.modal':'_onModalShown',
    }),
    custom_events:_.extend({},publicRootData.PublicRoot.prototype.custom_events||{},{
        'gmap_api_request':'_onGMapAPIRequest',
        'gmap_api_key_request':'_onGMapAPIKeyRequest',
        'ready_to_clean_for_save':'_onWidgetsStopRequest',
        'seo_object_request':'_onSeoObjectRequest',
        'will_remove_snippet':'_onWidgetsStopRequest',
    }),

    /**
     *@override
     */
    init(){
        this.isFullscreen=false;
        KeyboardNavigationMixin.init.call(this,{
            autoAccessKeys:false,
        });

        //SpecialcaseforSafaribrowser:paddingonwrapwrapisaddedbythe
        //layoutoption(boxed,etc),butitalsoreceivesaborderontopof
        //ittosimulateanadditionofpadding.Thatpaddingisaddedwith
        //the"sidebar"headertemplatetocombinebothoptions/effects.
        //Sadly,theborderhackisnotworkingonsafari,themenuissomehow
        //brokenanditscontentisnotvisible.
        //Thisclasswillbeusedinscsstoinsteadaddthebordersizetothe
        //paddingdirectlyonSafariwhen"sidebar"menuisenabled.
        if(/^((?!chrome|android).)*safari/i.test(navigator.userAgent)&&document.querySelector('#wrapwrap')){
            document.querySelector('#wrapwrap').classList.add('o_safari_browser');
        }

        returnthis._super(...arguments);
    },
    /**
     *@override
     */
    start:function(){
        KeyboardNavigationMixin.start.call(this);
        //Compatibilitylangchange?
        if(!this.$('.js_change_lang').length){
            var$links=this.$('.js_language_selectora:not([data-oe-id])');
            varm=$(_.min($links,function(l){
                return$(l).attr('href').length;
            })).attr('href');
            $links.each(function(){
                var$link=$(this);
                vart=$link.attr('href');
                varl=(t===m)?"default":t.split('/')[1];
                $link.data('lang',l).addClass('js_change_lang');
            });
        }

        //Enablemagnifyonzommableimg
        this.$('.zoomableimg[data-zoom]').zoomFlectra();

        returnthis._super.apply(this,arguments);
    },
    /**
     *@override
     */
    destroy(){
        KeyboardNavigationMixin.destroy.call(this);
        returnthis._super(...arguments);
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    _getContext:function(context){
        varhtml=document.documentElement;
        return_.extend({
            'website_id':html.getAttribute('data-website-id')|0,
        },this._super.apply(this,arguments));
    },
    /**
     *@override
     */
    _getExtraContext:function(context){
        varhtml=document.documentElement;
        return_.extend({
            'editable':!!(html.dataset.editable||$('[data-oe-model]').length),//temporaryhack,thisshouldbedoneinpython
            'translatable':!!html.dataset.translatable,
            'edit_translations':!!html.dataset.edit_translations,
        },this._super.apply(this,arguments));
    },
    /**
     *@private
     *@param{boolean}[refetch=false]
     */
    async_getGMapAPIKey(refetch){
        if(refetch||!this._gmapAPIKeyProm){
            this._gmapAPIKeyProm=newPromise(asyncresolve=>{
                constdata=awaitthis._rpc({
                    route:'/website/google_maps_api_key',
                });
                resolve(JSON.parse(data).google_maps_api_key||'');
            });
        }
        returnthis._gmapAPIKeyProm;
    },
    /**
     *@override
     */
    _getPublicWidgetsRegistry:function(options){
        varregistry=this._super.apply(this,arguments);
        if(options.editableMode){
            return_.pick(registry,function(PublicWidget){
                return!PublicWidget.prototype.disabledInEditableMode;
            });
        }
        returnregistry;
    },
    /**
     *@private
     *@param{boolean}[editableMode=false]
     *@param{boolean}[refetch=false]
     */
    async_loadGMapAPI(editableMode,refetch){
        //Note:onlyneedrefetchtoreloadaconfiguredkeyandloadthe
        //library.Ifthelibrarywasloadedwithacorrectkeyandthatthe
        //keychangesmeanwhile...itwillnotworkbutwecanagreetheuser
        //canbothertoreloadthepageatthatmoment.
        if(refetch||!this._gmapAPILoading){
            this._gmapAPILoading=newPromise(asyncresolve=>{
                constkey=awaitthis._getGMapAPIKey(refetch);

                window.flectra_gmap_api_post_load=(asyncfunctionflectra_gmap_api_post_load(){
                    awaitthis._startWidgets(undefined,{editableMode:editableMode});
                    resolve(key);
                }).bind(this);

                if(!key){
                    if(!editableMode&&session.is_admin){
                        this.displayNotification({
                            type:'warning',
                            sticky:true,
                            message:
                                $('<div/>').append(
                                    $('<span/>',{text:_t("Cannotloadgooglemap.")}),
                                    $('<br/>'),
                                    $('<a/>',{
                                        href:"/web#action=website.action_website_configuration",
                                        text:_t("Checkyourconfiguration."),
                                    }),
                                )[0].outerHTML,
                        });
                    }
                    resolve(false);
                    this._gmapAPILoading=false;
                    return;
                }
                awaitajax.loadJS(`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places&callback=flectra_gmap_api_post_load&key=${encodeURIComponent(key)}`);
            });
        }
        returnthis._gmapAPILoading;
    },
    /**
     *Togglesthefullscreenmode.
     *
     *@private
     *@param{boolean}statetogglefullscreenon/off(true/false)
     */
    _toggleFullscreen(state){
        this.isFullscreen=state;
        document.body.classList.add('o_fullscreen_transition');
        document.body.classList.toggle('o_fullscreen',this.isFullscreen);
        document.body.style.overflowX='hidden';
        letresizing=true;
        window.requestAnimationFrame(functionresizeFunction(){
            window.dispatchEvent(newEvent('resize'));
            if(resizing){
                window.requestAnimationFrame(resizeFunction);
            }
        });
        letstopResizing;
        constonTransitionEnd=ev=>{
            if(ev.target===document.body&&ev.propertyName==='padding-top'){
                stopResizing();
            }
        };
        stopResizing=()=>{
            resizing=false;
            document.body.style.overflowX='';
            document.body.removeEventListener('transitionend',onTransitionEnd);
            document.body.classList.remove('o_fullscreen_transition');
        };
        document.body.addEventListener('transitionend',onTransitionEnd);
        //Safeguardincasethetransitionendeventdoesn'ttriggerforwhateverreason.
        window.setTimeout(()=>stopResizing(),500);
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *@override
     */
    _onWidgetsStartRequest:function(ev){
        ev.data.options=_.clone(ev.data.options||{});
        ev.data.options.editableMode=ev.data.editableMode;
        this._super.apply(this,arguments);
    },
    /**
     *@todoreview
     *@private
     */
    _onLangChangeClick:function(ev){
        ev.preventDefault();

        var$target=$(ev.currentTarget);
        //retrievethehashbeforetheredirect
        varredirect={
            lang:encodeURIComponent($target.data('url_code')),
            url:encodeURIComponent($target.attr('href').replace(/[&?]edit_translations[^&?]+/,'')),
            hash:encodeURIComponent(window.location.hash)
        };
        window.location.href=_.str.sprintf("/website/lang/%(lang)s?r=%(url)s%(hash)s",redirect);
    },
    /**
     *@private
     *@param{FlectraEvent}ev
     */
    async_onGMapAPIRequest(ev){
        ev.stopPropagation();
        constapiKey=awaitthis._loadGMapAPI(ev.data.editableMode,ev.data.refetch);
        ev.data.onSuccess(apiKey);
    },
    /**
     *@private
     *@param{FlectraEvent}ev
     */
    async_onGMapAPIKeyRequest(ev){
        ev.stopPropagation();
        constapiKey=awaitthis._getGMapAPIKey(ev.data.refetch);
        ev.data.onSuccess(apiKey);
    },
    /**
    /**
     *ChecksinformationaboutthepageSEOobject.
     *
     *@private
     *@param{FlectraEvent}ev
     */
    _onSeoObjectRequest:function(ev){
        varres=this._unslugHtmlDataObject('seo-object');
        ev.data.callback(res);
    },
    /**
     *Returnsamodel/idobjectconstructedfromhtmldataattribute.
     *
     *@private
     *@param{string}dataAttr
     *@returns{Object}anobjectwith2keys:modelandid,ornull
     *ifnotfound
     */
    _unslugHtmlDataObject:function(dataAttr){
        varrepr=$('html').data(dataAttr);
        varmatch=repr&&repr.match(/(.+)\((\d+),(.*)\)/);
        if(!match){
            returnnull;
        }
        return{
            model:match[1],
            id:match[2]|0,
        };
    },
    /**
     *@todoreview
     *@private
     */
    _onPublishBtnClick:function(ev){
        ev.preventDefault();
        if(document.body.classList.contains('editor_enable')){
            return;
        }

        varself=this;
        var$data=$(ev.currentTarget).parents(".js_publish_management:first");
        this._rpc({
            route:$data.data('controller')||'/website/publish',
            params:{
                id:+$data.data('id'),
                object:$data.data('object'),
            },
        })
        .then(function(result){
            $data.toggleClass("css_published",result).toggleClass("css_unpublished",!result);
            $data.find('input').prop("checked",result);
            $data.parents("[data-publish]").attr("data-publish",+result?'on':'off');
            if(result){
                self.displayNotification({
                    type:'success',
                    message:$data.data('description')?
                        _.str.sprintf(_t("You'vepublishedyour%s."),$data.data('description')):
                        _t("Publishedwithsuccess."),
                });
            }
        });
    },
    /**
     *@private
     *@param{Event}ev
     */
    _onWebsiteSwitch:function(ev){
        varwebsiteId=ev.currentTarget.getAttribute('website-id');
        varwebsiteDomain=ev.currentTarget.getAttribute('domain');
        leturl=`/website/force/${websiteId}`;
        if(websiteDomain&&window.location.hostname!==websiteDomain){
            url=websiteDomain+url;
        }
        constpath=window.location.pathname+window.location.search+window.location.hash;
        window.location.href=$.param.querystring(url,{'path':path});
    },
    /**
     *@private
     *@param{Event}ev
     */
    _onModalShown:function(ev){
        $(ev.target).addClass('modal_shown');
    },
    /**
     *@override
     */
    _onKeyDown(ev){
        if(!session.user_id){
            return;
        }
        //Ifdocument.bodydoesn'tcontaintheelement,itwasprobablyremovedasaconsequenceofpressingEsc.
        //wedon'twanttotogglefullscreenastheremoval(eg,closingamodal)istheintendedaction.
        if(ev.keyCode!==$.ui.keyCode.ESCAPE||!document.body.contains(ev.target)||ev.target.closest('.modal')){
            returnKeyboardNavigationMixin._onKeyDown.apply(this,arguments);
        }
        this._toggleFullscreen(!this.isFullscreen);
    },
});

return{
    WebsiteRoot:WebsiteRoot,
    websiteRootRegistry:websiteRootRegistry,
};
});
