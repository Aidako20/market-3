flectra.define('website.customizeMenu',function(require){
'usestrict';

varcore=require('web.core');
varWidget=require('web.Widget');
varwebsiteNavbarData=require('website.navbar');
varWebsiteAceEditor=require('website.ace');

varqweb=core.qweb;

varCustomizeMenu=Widget.extend({
    xmlDependencies:['/website/static/src/xml/website.editor.xml'],
    events:{
        'show.bs.dropdown':'_onDropdownShow',
        'click.dropdown-item[data-view-key]':'_onCustomizeOptionClick',
    },

    /**
     *@override
     */
    willStart:function(){
        this.viewName=$(document.documentElement).data('view-xmlid');
        returnthis._super.apply(this,arguments);
    },
    /**
     *@override
     */
    start:function(){
        if(!this.viewName){
            _.defer(this.destroy.bind(this));
        }

        if(this.$el.is('.show')){
            this._loadCustomizeOptions();
        }
        returnthis._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *Enables/Disablesaviewcustomizationwhoseidisgiven.
     *
     *@private
     *@param{string}viewKey
     *@returns{Promise}
     *         Unresolvedifthecustomizationsucceededasthepagewillbe
     *         reloaded.
     *         Rejectedotherwise.
     */
    _doCustomize:function(viewKey){
        returnthis._rpc({
            route:'/website/toggle_switchable_view',
            params:{
                'view_key':viewKey,
            },
        }).then(function(){
            window.location.reload();
            returnnewPromise(function(){});
        });
    },
    /**
     *Loadstheinformationabouttheviewswhichcanbeenabled/disabledon
     *thecurrentpageandshowsthemasswitchableelementsinthemenu.
     *
     *@private
     *@return{Promise}
     */
    _loadCustomizeOptions:function(){
        if(this.__customizeOptionsLoaded){
            returnPromise.resolve();
        }
        this.__customizeOptionsLoaded=true;

        var$menu=this.$el.children('.dropdown-menu');
        returnthis._rpc({
            route:'/website/get_switchable_related_views',
            params:{
                key:this.viewName,
            },
        }).then(function(result){
            varcurrentGroup='';
            if(result.length){
                $menu.append($('<div/>',{
                    class:'dropdown-divider',
                    role:'separator',
                }));
            }
            _.each(result,function(item){
                if(currentGroup!==item.inherit_id[1]){
                    currentGroup=item.inherit_id[1];
                    $menu.append('<liclass="dropdown-header">'+currentGroup+'</li>');
                }
                var$a=$('<a/>',{href:'#',class:'dropdown-item','data-view-key':item.key,role:'menuitem'})
                            .append(qweb.render('website.components.switch',{id:'switch-'+item.id,label:item.name}));
                $a.find('input').prop('checked',!!item.active);
                $menu.append($a);
            });
        });
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *Calledwhenaview'srelatedswitchableelementisclicked->enable/
     *disabletherelatedview.
     *
     *@private
     *@param{Event}ev
     */
    _onCustomizeOptionClick:function(ev){
        ev.preventDefault();
        varviewKey=$(ev.currentTarget).data('viewKey');
        this._doCustomize(viewKey);
    },
    /**
     *@private
     */
    _onDropdownShow:function(){
        this._loadCustomizeOptions();
    },
});

varAceEditorMenu=websiteNavbarData.WebsiteNavbarActionWidget.extend({
    actions:_.extend({},websiteNavbarData.WebsiteNavbarActionWidget.prototype.actions||{},{
        close_all_widgets:'_hideEditor',
        edit:'_enterEditMode',
        ace:'_launchAce',
    }),

    /**
     *Launchestheaceeditorautomaticallywhenthecorrespondinghashisin
     *thepageURL.
     *
     *@override
     */
    start:function(){
        if(window.location.hash.substr(0,WebsiteAceEditor.prototype.hash.length)===WebsiteAceEditor.prototype.hash){
            this._launchAce();
        }
        returnthis._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Actions
    //--------------------------------------------------------------------------

    /**
     *Whenhandlingthe"edit"websiteaction,theaceeditorhastobeclosed.
     *
     *@private
     */
    _enterEditMode:function(){
        this._hideEditor();
    },
    /**
     *@private
     */
    _hideEditor:function(){
        if(this.globalEditor){
            this.globalEditor.do_hide();
        }
    },
    /**
     *Launchestheaceeditortobeabletoeditthetemplatesandscssfiles
     *whichareusedbythecurrentpage.
     *
     *@private
     *@returns{Promise}
     */
    _launchAce:function(){
        varself=this;
        varprom=newPromise(function(resolve,reject){
            self.trigger_up('action_demand',{
                actionName:'close_all_widgets',
                onSuccess:resolve,
            });
        });
        prom.then(function(){
            if(self.globalEditor){
                self.globalEditor.do_show();
                returnPromise.resolve();
            }else{
                varcurrentHash=window.location.hash;
                varindexOfView=currentHash.indexOf("?res=");
                varinitialResID=undefined;
                if(indexOfView>=0){
                    initialResID=currentHash.substr(indexOfView+("?res=".length));
                    varparsedResID=parseInt(initialResID,10);
                    if(parsedResID){
                        initialResID=parsedResID;
                    }
                }

                self.globalEditor=newWebsiteAceEditor(self,$(document.documentElement).data('view-xmlid'),{
                    initialResID:initialResID,
                    defaultBundlesRestriction:[
                        'web.assets_frontend',
                        'web.assets_frontend_minimal',
                        'web.assets_frontend_lazy',
                    ],
                });
                returnself.globalEditor.appendTo(document.body);
            }
        });

        returnprom;
    },
});

websiteNavbarData.websiteNavbarRegistry.add(CustomizeMenu,'#customize-menu');
websiteNavbarData.websiteNavbarRegistry.add(AceEditorMenu,'#html_editor');

returnCustomizeMenu;
});
