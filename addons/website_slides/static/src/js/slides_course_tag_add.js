flectra.define('website_slides.channel_tag.add',function(require){
'usestrict';

varcore=require('web.core');
varDialog=require('web.Dialog');
varpublicWidget=require('web.public.widget');

var_t=core._t;

varTagCourseDialog=Dialog.extend({
    template:'website.slides.tag.add',
    events:_.extend({},Dialog.prototype.events,{
        'changeinput#tag_id':'_onChangeTag',
    }),

    /**
    *@override
    *@param{Object}parent
    *@param{Object}optionsholdingchannelId
    *     
    */
    init:function(parent,options){
        options=_.defaults(options||{},{
            title:_t("Addatag"),
            size:'medium',
            buttons:[{
                text:_t("Add"),
                classes:'btn-primary',
                click:this._onClickFormSubmit.bind(this)
            },{
                text:_t("Discard"),
                click:this._onClickClose.bind(this)
            }]
        });

        this.channelID=parseInt(options.channelId,10);
        this.tagIds=options.channelTagIds||[];
        //Openwithatagnameasdefault
        this.defaultTag=options.defaultTag;
        this._super(parent,options);
    },
    start:function(){
        varself=this;
        returnthis._super.apply(this,arguments).then(function(){
            self._bindSelect2Dropdown();
            self._hideTagGroup();
            if(self.defaultTag){
                self._setDefaultSelection();
            }
        });
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *'Tag'and'TagGroup'managementforselect2
     *
     *@private
     */
    _bindSelect2Dropdown:function(){
        varself=this;
        this.$('#tag_id').select2(this._select2Wrapper(_t('Tag'),
            function(){
                returnself._rpc({
                    route:'/slides/channel/tag/search_read',
                    params:{
                        fields:['name'],
                        domain:[['id','notin',self.tagIds]],
                    }
                });
            })
        );
        this.$('#tag_group_id').select2(this._select2Wrapper(_t('TagGroup(requiredfornewtags)'),
            function(){
                returnself._rpc({
                    route:'/slides/channel/tag/group/search_read',
                    params:{
                        fields:['name'],
                        domain:[],
                    }
                });
            })
        );
    },

    /**
     *Wrapperforselect2loaddatafromserveratonceandstoreit.
     *
     *@private
     *@param{String}Placeholderforelement.
     *@param{Function}FunctiontofetchdatafromremotelocationshouldreturnaPromise
     *resolveddatashouldbearrayofobjectwithidandname.eg.[{'id':id,'name':'text'},...]
     *@param{String}[nameKey='name'](optional)thenamekeyofthereturnedrecord
     *  ('name'ifnotprovided)
     *@returns{Object}select2wrapperobject
    */
    _select2Wrapper:function(tag,fetchFNC,nameKey){
        nameKey=nameKey||'name';

        varvalues={
            width:'100%',
            placeholder:tag,
            allowClear:true,
            formatNoMatches:false,
            selection_data:false,
            fetch_rpc_fnc:fetchFNC,
            formatSelection:function(data,container,fmt){
                if(data.tag){
                    data.text=data.tag;
                }
                returnfmt(data.text);
            },
            createSearchChoice:function(term,data){
                varaddedTags=$(this.opts.element).select2('data');
                if(_.filter(_.union(addedTags,data),function(tag){
                    returntag.text.toLowerCase().localeCompare(term.toLowerCase())===0;
                }).length===0){
                    if(this.opts.can_create){
                        return{
                            id:_.uniqueId('tag_'),
                            create:true,
                            tag:term,
                            text:_.str.sprintf(_t("Createnew%s'%s'"),tag,term),
                        };
                    }else{
                        returnundefined;
                    }
                }
            },
            fill_data:function(query,data){
                varthat=this,
                    tags={results:[]};
                _.each(data,function(obj){
                    if(that.matcher(query.term,obj[nameKey])){
                        tags.results.push({id:obj.id,text:obj[nameKey]});
                    }
                });
                query.callback(tags);
            },
            query:function(query){
                varthat=this;
                //fetchdataonlyonceandstoreit
                if(!this.selection_data){
                    this.fetch_rpc_fnc().then(function(data){
                        that.can_create=data.can_create;
                        that.fill_data(query,data.read_results);
                        that.selection_data=data.read_results;
                    });
                }else{
                    this.fill_data(query,this.selection_data);
                }
            }
        };
        returnvalues;
    },

    _setDefaultSelection:function(){
        this.$('#tag_id').select2('data',{id:_.uniqueId('tag_'),text:this.defaultTag,create:true},true);
        this.$('#tag_id').select2('readonly',true);
    },

    /**
     *Getvaluefortag_idand[whenappropriate]tag_group_idtosendtoserver
     *
     *@private
     */
    _getSelect2DropdownValues:function(){
        varresult={};
        vartag=this.$('#tag_id').select2('data');
        if(tag){
            if(tag.create){
                //newtag
                vargroup=this.$('#tag_group_id').select2('data');
                if(group){
                    result['tag_id']=[0,{'name':tag.text}]
                    if(group.create){
                        //newtaggroup
                        result['group_id']=[0,{'name':group.text}];
                    }else{
                        result['group_id']=[group.id];
                    }
                }
            }else{
                result['tag_id']=[tag.id];
            }
        }
        returnresult;
    },

    /**
     *Select2fieldsmakesthe"required"inputhiddenontheinterface.
     *Thereforeweneedtomakeamethodtovisuallyprovidethisrequirement
     *feedbacktousers."taggroup"fieldshouldonlyneedthiswhenanewtag
     *iscreated.
     *
     *@private
     */
    _formValidate:function($form){
        $form.addClass('was-validated');
        varresult=$form[0].checkValidity();
        
        var$tagInput=this.$('#tag_id');
        if($tagInput.length!==0){
            var$tagSelect2Container=$tagInput
                .closest('.form-group')
                .find('.select2-container');
            $tagSelect2Container.removeClass('is-invalidis-valid');
            if($tagInput.is(':invalid')){
                $tagSelect2Container.addClass('is-invalid');
            }elseif($tagInput.is(':valid')){
                $tagSelect2Container.addClass('is-valid');
                var$tagGroupInput=this.$('#tag_group_id');
                if($tagGroupInput.length!==0){
                    var$tagGroupSelect2Container=$tagGroupInput
                        .closest('.form-group')
                        .find('.select2-container');
                    if($tagGroupInput.is(':invalid')){
                        $tagGroupSelect2Container.addClass('is-invalid');
                    }elseif($tagGroupInput.is(':valid')){
                        $tagGroupSelect2Container.addClass('is-valid');
                    }
                }
            }
        }
        returnresult;
    },

    _alertDisplay:function(message){
        this._alertRemove();
        $('<div/>',{
            "class":'alertalert-warning',
            role:'alert'
        }).text(message).insertBefore(this.$('form'));
    },
    _alertRemove:function(){
        this.$('.alert-warning').remove();
    },
    
    /**
     *WhentheuserISNOTcreatinganewtag,thisfunctionhidesthegrouptagfield
     *andmakesitnotrequired.Sincetheselect2fieldmakesanextracontainer,this
     *needstobehiddenalongwiththegrouptaginputfieldanditslabel.
     *
     *@private
     */
    _hideTagGroup:function(){
        var$tag_group_id=this.$('#tag_group_id');
        var$tagGroupSelect2Container=$tag_group_id.closest('.form-group');
        $tagGroupSelect2Container.hide();
        $tag_group_id.removeAttr("required");
        $tag_group_id.select2("val","");
    },

    /**
     *WhentheuserIScreatinganewtag,thisfunctionshowsthefieldand
     *makesitrequired.Sincetheselect2fieldmakesanextracontainer,this
     *needstobeshownalongwiththegroupinputfieldanditslabel.
     *
     *@private
     */
    _showTagGroup:function(){
        var$tag_group_id=this.$('#tag_group_id');
        var$tagGroupSelect2Container=$tag_group_id.closest('.form-group');
        $tagGroupSelect2Container.show();
        $tag_group_id.attr("required","required");
    },

    //--------------------------------------------------------------------------
    //Handler
    //--------------------------------------------------------------------------

    _onClickFormSubmit:function(){
        if(this.defaultTag&&!this.channelID){
            this._createNewTag();
        }else{
            this._addTagToChannel();
        }
    },

    _addTagToChannel:function(){
        varself=this;
        var$form=this.$('#slides_channel_tag_add_form');
        if(this._formValidate($form)){
            varvalues=this._getSelect2DropdownValues();
            returnthis._rpc({
                route:'/slides/channel/tag/add',
                params:{'channel_id':this.channelID,
                         'tag_id':values.tag_id,
                         'group_id':values.group_id},
            }).then(function(data){
                if(data.error){
                    self._alertDisplay(data.error);
                }else{
                    window.location=data.url;
                }
            });
        }
    },

    _createNewTag:function(){
        varself=this;
        var$form=this.$('#slides_channel_tag_add_form');
        this.$('#tag_id').select2('readonly',false);
        varvalid=this._formValidate($form);
        this.$('#tag_id').select2('readonly',true);
        if(valid){
            varvalues=this._getSelect2DropdownValues();
            returnthis._rpc({
                route:'/slide_channel_tag/add',
                params:{
                    'tag_id':values.tag_id,
                    'group_id':values.group_id
                },
            }).then(function(data){
                self.trigger_up('tag_refresh',{tag_id:data.tag_id});
                self.close();
            });
        }
    },

    _onClickClose:function(){
        if(this.defaultTag&&!this.channelID){
            this.trigger_up('tag_remove_new');
        }
        this.close();
    },

    _onChangeTag:function(ev){
        varself=this;
        vartag=$(ev.currentTarget).select2('data');
        if(tag&&tag.create){
            self._showTagGroup();
        }else{
            self._hideTagGroup();
        }
    },
});

publicWidget.registry.websiteSlidesTag=publicWidget.Widget.extend({
    selector:'.o_wslides_js_channel_tag_add',
    xmlDependencies:['/website_slides/static/src/xml/website_slides_channel_tag.xml'],
    events:{
        'click':'_onAddTagClick',
    },


    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    _openDialog:function($element){
        vardata=$element.data();
        returnnewTagCourseDialog(this,data).open();
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *@private
     *@param{Event}ev
     */
    _onAddTagClick:function(ev){
        ev.preventDefault();
        this._openDialog($(ev.currentTarget));
    },
});

return{
    TagCourseDialog:TagCourseDialog,
    websiteSlidesTag:publicWidget.registry.websiteSlidesTag
};

});
