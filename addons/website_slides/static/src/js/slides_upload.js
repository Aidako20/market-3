flectra.define('website_slides.upload_modal',function(require){
'usestrict';

varcore=require('web.core');
varDialog=require('web.Dialog');
varpublicWidget=require('web.public.widget');
varutils=require('web.utils');
varwUtils=require('website.utils');

varQWeb=core.qweb;
var_t=core._t;

varSlideUploadDialog=Dialog.extend({
    template:'website.slide.upload.modal',
    events:_.extend({},Dialog.prototype.events,{
        'click.o_wslides_js_upload_install_button':'_onClickInstallModule',
        'click.o_wslides_select_type':'_onClickSlideTypeIcon',
        'changeinput#upload':'_onChangeSlideUpload',
        'changeinput#url':'_onChangeSlideUrl',
    }),

    /**
     *@override
     *@param{Object}parent
     *@param{Object}optionsholdingchannelIdandoptionallyuploadandpublishcontrolparameters
     *@param{Object}options.modulesToInstall:listofadditionalmodulesto
     *     install{id:moduleID,name:moduleshortdescription}
     */
    init:function(parent,options){
        options=_.defaults(options||{},{
            title:_t("Uploadadocument"),
            size:'medium',
        });
        this._super(parent,options);
        this._setup();

        this.channelID=parseInt(options.channelId,10);
        this.defaultCategoryID=parseInt(options.categoryId,10);
        this.canUpload=options.canUpload==='True';
        this.canPublish=options.canPublish==='True';
        this.modulesToInstall=options.modulesToInstall?JSON.parse(options.modulesToInstall.replace(/'/g,'"')):null;
        this.modulesToInstallStatus=null;

        this.set('state','_select');
        this.on('change:state',this,this._onChangeType);
        this.set('can_submit_form',false);
        this.on('change:can_submit_form',this,this._onChangeCanSubmitForm);

        this.file={};
        this.isValidUrl=true;
    },
    start:function(){
        varself=this;
        returnthis._super.apply(this,arguments).then(function(){
            self._resetModalButton();
        });
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@private
     *@param{string}message
     */
    _alertDisplay:function(message){
        this._alertRemove();
        $('<div/>',{
            "class":'alertalert-warning',
            id:'upload-alert',
            role:'alert'
        }).text(message).insertBefore(this.$('form'));
    },
    _alertRemove:function(){
        this.$('#upload-alert').remove();
    },
    /**
     *Sectionandtagsmanagementfromselect2
     *
     *@private
     */
    _bindSelect2Dropdown:function(){
        varself=this;
        this.$('#category_id').select2(this._select2Wrapper(_t('Section'),false,
            function(){
                returnself._rpc({
                    route:'/slides/category/search_read',
                    params:{
                        fields:['name'],
                        domain:[['channel_id','=',self.channelID]],
                    }
                });
            })
        );
        this.$('#tag_ids').select2(this._select2Wrapper(_t('Tags'),true,function(){
            returnself._rpc({
                route:'/slides/tag/search_read',
                params:{
                    fields:['name'],
                    domain:[],
                }
            });
        }));
    },
    _fetchUrlPreview:function(url){
        returnthis._rpc({
            route:'/slides/prepare_preview/',
            params:{
                'url':url,
                'channel_id':this.channelID
            },
        });
    },
    _formSetFieldValue:function(fieldId,value){
        this.$('form').find('#'+fieldId).val(value);
    },
    _formGetFieldValue:function(fieldId){
        returnthis.$('#'+fieldId).val();
    },
    _formValidate:function(){
        varform=this.$("form");
        form.addClass('was-validated');
        returnform[0].checkValidity()&&this.isValidUrl;
    },
    /**
     *Extractvaluestosubmitfromform,forcetheslide_typeaccordingto
     *filledvalues.
     *
     *@private
     */
    _formValidateGetValues:function(forcePublished){
        varcanvas=this.$('#data_canvas')[0];
        varvalues=_.extend({
            'channel_id':this.channelID,
            'name':this._formGetFieldValue('name'),
            'url':this._formGetFieldValue('url'),
            'description':this._formGetFieldValue('description'),
            'duration':this._formGetFieldValue('duration'),
            'is_published':forcePublished,
        },this._getSelect2DropdownValues());//addtagsandcategory

        //defaultslide_type(forwebpageforinstance)
        if(_.contains(this.slide_type_data),this.get('state')){
            values['slide_type']=this.get('state');
        }

        if(this.file.type==='application/pdf'){
            _.extend(values,{
                'image_1920':canvas.toDataURL().split(',')[1],
                'slide_type':canvas.height>canvas.width?'document':'presentation',
                'mime_type':this.file.type,
                'datas':this.file.data
            });
        }elseif(values['slide_type']==='webpage'){
            letfileData=this.file.type==='image/svg+xml'?this.__svgToPNG():this.file.data;
            if(fileDatainstanceofPromise){
                constfileDataProm=fileData;
                this.__svgLoadingExec=()=>fileDataProm.then(result=>values['image_1920']=result);
                fileData=this._svgToPng();
            }
            _.extend(values,{
                'mime_type':'text/html',
                'image_1920':fileData,
            });
        }elseif(/^image\/.*/.test(this.file.type)){
            letfileData=this.file.type==='image/svg+xml'?this.__svgToPNG():this.file.data;
            letfileDataProm;
            if(fileDatainstanceofPromise){
                fileDataProm=fileData;
                fileData=this._svgToPng();
            }
            if(values['slide_type']==='presentation'){
                if(fileDataProm){
                    this.__svgLoadingExec=()=>fileDataProm.then(result=>values['datas']=result);
                }
                _.extend(values,{
                    'slide_type':'infographic',
                    'mime_type':this.file.type==='image/svg+xml'?'image/png':this.file.type,
                    'datas':fileData,
                });
            }else{
                if(fileDataProm){
                    this.__svgLoadingExec=()=>fileDataProm.then(result=>values['image_1920']=result);
                }
                _.extend(values,{
                    'image_1920':fileData,
                });
            }
        }
        returnvalues;
    },
    /**
     *@private
     */
    _fileReset:function(){
        varcontrol=this.$('#upload');
        control.replaceWith(control=control.clone(true));
        this.file.name=false;
    },

    _getModalButtons:function(){
        varbtnList=[];
        varstate=this.get('state');
        if(state==='_select'){
            btnList.push({text:_t("Cancel"),classes:'o_w_slide_cancel',close:true});
        }elseif(state==='_import'){
            if(!this.modulesToInstallStatus.installing){
                btnList.push({text:this.modulesToInstallStatus.failed?_t("Retry"):_t("Install"),classes:'btn-primary',click:this._onClickInstallModuleConfirm.bind(this)});
            }
            btnList.push({text:_t("Discard"),classes:'o_w_slide_go_back',click:this._onClickGoBack.bind(this)});
        }elseif(state!=='_upload'){//nobuttonwhenuploading
            if(this.canUpload){
                if(this.canPublish){
                    btnList.push({text:_t("Save&Publish"),classes:'btn-primaryo_w_slide_uploado_w_slide_upload_published',click:this._onClickFormSubmit.bind(this)});
                    btnList.push({text:_t("Save"),classes:'o_w_slide_upload',click:this._onClickFormSubmit.bind(this)});
                }else{
                    btnList.push({text:_t("Save"),classes:'btn-primaryo_w_slide_upload',click:this._onClickFormSubmit.bind(this)});
                }
            }
            btnList.push({text:_t("Discard"),classes:'o_w_slide_go_back',click:this._onClickGoBack.bind(this)});
        }
        returnbtnList;
    },
    /**
     *Getvalueforcategory_idandtag_ids(ORMcmd)tosendtoserver
     *
     *@private
     */
    _getSelect2DropdownValues:function(){
        varresult={};
        varself=this;
        //tags
        vartagValues=[];
        _.each(this.$('#tag_ids').select2('data'),function(val){
            if(val.create){
                tagValues.push([0,0,{'name':val.text}]);
            }else{
                tagValues.push([4,val.id]);
            }
        });
        if(tagValues){
            result['tag_ids']=tagValues;
        }
        //category
        if(!self.defaultCategoryID){
            varcategoryValue=this.$('#category_id').select2('data');
            if(categoryValue&&categoryValue.create){
                result['category_id']=[0,{'name':categoryValue.text}];
            }elseif(categoryValue){
                result['category_id']=[categoryValue.id];
                this.categoryID=categoryValue.id;
            }
        }else{
            result['category_id']=[self.defaultCategoryID];
            this.categoryID=self.defaultCategoryID;
        }
        returnresult;
    },
    /**
     *Resetthefooterbuttons,accordingtocurrentstateofmodal
     *
     *@private
     */
    _resetModalButton:function(){
        this.set_buttons(this._getModalButtons());
    },
    /**
     *Wrapperforselect2loaddatafromserveratonceandstoreit.
     *
     *@private
     *@param{String}Placeholderforelement.
     *@param{bool} trueformultipleselectionbox,falseforsingleselection
     *@param{Function}FunctiontofetchdatafromremotelocationshouldreturnaPromise
     *resolveddatashouldbearrayofobjectwithidandname.eg.[{'id':id,'name':'text'},...]
     *@param{String}[nameKey='name'](optional)thenamekeyofthereturnedrecord
     *  ('name'ifnotprovided)
     *@returns{Object}select2wrapperobject
    */
    _select2Wrapper:function(tag,multi,fetchFNC,nameKey){
        nameKey=nameKey||'name';

        varvalues={
            width:'100%',
            placeholder:tag,
            allowClear:true,
            formatNoMatches:false,
            selection_data:false,
            fetch_rpc_fnc:fetchFNC,
            formatSelection:function(data,container,fmt){
                if(data.tag){
                    data.text=data.tag;
                }
                returnfmt(data.text);
            },
            createSearchChoice:function(term,data){
                varaddedTags=$(this.opts.element).select2('data');
                if(_.filter(_.union(addedTags,data),function(tag){
                    returntag.text.toLowerCase().localeCompare(term.toLowerCase())===0;
                }).length===0){
                    if(this.opts.can_create){
                        return{
                            id:_.uniqueId('tag_'),
                            create:true,
                            tag:term,
                            text:_.str.sprintf(_t("Createnew%s'%s'"),tag,term),
                        };
                    }else{
                        returnundefined;
                    }
                }
            },
            fill_data:function(query,data){
                varself=this,
                    tags={results:[]};
                _.each(data,function(obj){
                    if(self.matcher(query.term,obj[nameKey])){
                        tags.results.push({id:obj.id,text:obj[nameKey]});
                    }
                });
                query.callback(tags);
            },
            query:function(query){
                varself=this;
                //fetchdataonlyonceandstoreit
                if(!this.selection_data){
                    this.fetch_rpc_fnc().then(function(data){
                        self.can_create=data.can_create;
                        self.fill_data(query,data.read_results);
                        self.selection_data=data.read_results;
                    });
                }else{
                    this.fill_data(query,this.selection_data);
                }
            }
        };

        if(multi){
            values['multiple']=true;
        }

        returnvalues;
    },
    /**
     *Initthedatarelativetothesupportslidetypetoupload
     *
     *@private
     */
    _setup:function(){
        this.slide_type_data={
            presentation:{
                icon:'fa-file-pdf-o',
                label:_t('Presentation'),
                template:'website.slide.upload.modal.presentation',
            },
            webpage:{
                icon:'fa-file-text',
                label:_t('WebPage'),
                template:'website.slide.upload.modal.webpage',
            },
            video:{
                icon:'fa-video-camera',
                label:_t('Video'),
                template:'website.slide.upload.modal.video',
            },
            quiz:{
                icon:'fa-question-circle',
                label:_t('Quiz'),
                template:'website.slide.upload.quiz'
            }
        };
    },
    /**
     *Showthepreview
     *@private
     */
    _showPreviewColumn:function(){
        this.$('.o_slide_tutorial').addClass('d-none');
        this.$('.o_slide_preview').removeClass('d-none');
    },
    /**
     *Hidethepreview
     *@private
     */
    _hidePreviewColumn:function(){
        this.$('.o_slide_tutorial').removeClass('d-none');
        this.$('.o_slide_preview').addClass('d-none');
    },
    /**
     *@private
     */
    //TODO:Removethispart,asnowSVGsupportinimageresizetoolsisincluded
    //PythonPILdoesnotsupportSVG,soconvertingSVGtoPNG
    _svgToPng:function(){
        returnthis.__svgToPNG(true);
    },
    /**
     *Bugfixedversionoftheoriginal_svgToPng,itcanreturnaPromise
     *
     *@returns{Promise<string>|string}
     */
    __svgToPNG:function(noAsync=false){
        constimgEl=this.$el.find('img#slide-image')[0];
        constresult=wUtils.svgToPNG(imgEl,noAsync);
        if(typeof(result)==='string'){
            returnresult.split(',')[1];
        }
        returnresult.then(png=>png.split(',')[1]);
    },

    //--------------------------------------------------------------------------
    //Handler
    //--------------------------------------------------------------------------

    _onChangeType:function(){
        varcurrentType=this.get('state');
        vartmpl;
        this.$modal.find('.modal-dialog').removeClass('modal-lg');
        if(currentType==='_select'){
            tmpl='website.slide.upload.modal.select';
        }elseif(currentType==='_upload'){
            tmpl='website.slide.upload.modal.uploading';
        }elseif(currentType==='_import'){
            tmpl='website.slide.upload.modal.import';
        }else{
            tmpl=this.slide_type_data[currentType]['template'];
            this.$modal.find('.modal-dialog').addClass('modal-lg');
        }
        this.$('.o_w_slide_upload_modal_container').empty();
        this.$('.o_w_slide_upload_modal_container').append(QWeb.render(tmpl,{widget:this}));

        this._resetModalButton();

        if(currentType==='_import'){
            this.set_title(_t("NewCertification"));
        }else{
            this.set_title(_t("Uploadadocument"));
        }
    },
    _onChangeCanSubmitForm:function(ev){
        if(this.get('can_submit_form')){
            this.$('.o_w_slide_upload').button('reset');
        }else{
            this.$('.o_w_slide_upload').button('loading');
        }
    },
    _onChangeSlideUpload:function(ev){
        varself=this;
        this._alertRemove();

        var$input=$(ev.currentTarget);
        varpreventOnchange=$input.data('preventOnchange');
        var$preview=self.$('#slide-image');

        varfile=ev.target.files[0];
        if(!file){
            this.$('#slide-image').attr('src','/website_slides/static/src/img/document.png');
            this._hidePreviewColumn();
            return;
        }
        varisImage=/^image\/.*/.test(file.type);
        varloaded=false;
        this.file.name=file.name;
        this.file.type=file.type;
        if(!(isImage||this.file.type==='application/pdf')){
            this._alertDisplay(_t("Invalidfiletype.Pleaseselectpdforimagefile"));
            this._fileReset();
            this._hidePreviewColumn();
            return;
        }
        if(file.size/1024/1024>25){
            this._alertDisplay(_t("Fileistoobig.Filesizecannotexceed25MB"));
            this._fileReset();
            this._hidePreviewColumn();
            return;
        }

        utils.getDataURLFromFile(file).then(function(buffer){
            if(isImage){
                $preview.attr('src',buffer);
            }
            buffer=buffer.split(',')[1];
            self.file.data=buffer;
            self._showPreviewColumn();
        });

        if(file.type==='application/pdf'){
            varArrayReader=newFileReader();
            this.set('can_submit_form',false);
            //filereadasArrayBufferforpdfjsLibget_DocumentAPI
            ArrayReader.readAsArrayBuffer(file);
            ArrayReader.onload=function(evt){
                varbuffer=evt.target.result;
                varpasswordNeeded=function(){
                    self._alertDisplay(_t("Youcannotuploadpasswordprotectedfile."));
                    self._fileReset();
                    self.set('can_submit_form',true);
                };
                /**
                 *ThefollowinglinefixespdfjsLib'Util'globalvariable.
                 *Thisis(mostlikely)relatedto#32181whichlazyloadsmostassets.
                 *
                 *Thatcausedanissuewheretheglobal'Util'variablefrompdfjsLibcanbe
                 *(dependingofwhichlibrariesloadfirst)overriddenbytheglobal'Util'
                 *variableofbootstrap.
                 *(See'lib/bootstrap/js/util.js'and'web/static/lib/pdfjs/build/pdfjs.js')
                 *
                 *Thiscommitensuresthattheglobal'Util'variableissettotheoneofpdfjsLib
                 *rightbeforeit'sused.
                 *
                 *Eventually,weshouldupdateorgetridofoneofthetwolibrariessincethey're
                 *notcompatibletogether,ormakeawrapperthatmakesthemcompatible.
                 *Inthemeantime,thissmallfixallowsnotrefactoringallofthisandcannot
                 *causemuchharm.
                 */
                Util=window.pdfjsLib.Util;
                window.pdfjsLib.getDocument(newUint8Array(buffer),null,passwordNeeded).then(functiongetPdf(pdf){
                    self._formSetFieldValue('duration',(pdf._pdfInfo.numPages||0)*5);
                    pdf.getPage(1).then(functiongetFirstPage(page){
                        varscale=1;
                        varviewport=page.getViewport(scale);
                        varcanvas=document.getElementById('data_canvas');
                        varcontext=canvas.getContext('2d');
                        canvas.height=viewport.height;
                        canvas.width=viewport.width;
                        //RenderPDFpageintocanvascontext
                        page.render({
                            canvasContext:context,
                            viewport:viewport
                        }).then(function(){
                            varimageData=self.$('#data_canvas')[0].toDataURL();
                            $preview.attr('src',imageData);
                            if(loaded){
                                self.set('can_submit_form',true);
                            }
                            loaded=true;
                            self._showPreviewColumn();
                        });
                    });
                });
            };
        }

        if(!preventOnchange){
            varinput=file.name;
            varinputVal=input.substr(0,input.lastIndexOf('.'))||input;
            if(this._formGetFieldValue('name')===""){
                this._formSetFieldValue('name',inputVal);
            }
        }
    },
    _onChangeSlideUrl:function(ev){
        varself=this;
        varurl=$(ev.target).val();
        this._alertRemove();
        this.isValidUrl=false;
        this.set('can_submit_form',false);
        this._fetchUrlPreview(url).then(function(data){
            self.set('can_submit_form',true);
            if(data.error){
                self._alertDisplay(data.error);
            }else{
                if(data.completion_time){
                    //hourstominutesconversion
                    self._formSetFieldValue('duration',Math.round(data.completion_time*60));
                }
                self.$('#slide-image').attr('src',data.url_src);
                self._formSetFieldValue('name',data.title);
                self._formSetFieldValue('description',data.description);

                self.isValidUrl=true;
                self._showPreviewColumn();
            }
        });
    },

    _onClickInstallModule:function(ev){
        var$btn=$(ev.currentTarget);
        varmoduleId=$btn.data('moduleId');
        if(this.modulesToInstallStatus){
            this.set('state','_import');
            if(this.modulesToInstallStatus.installing){
                this.$('#o_wslides_install_module_text')
                    .text(_.str.sprintf(_t('Alreadyinstalling"%s".'),this.modulesToInstallStatus.name));
            }elseif(this.modulesToInstallStatus.failed){
                this.$('#o_wslides_install_module_text')
                    .text(_.str.sprintf(_t('Failedtoinstall"%s".'),this.modulesToInstallStatus.name));
            }
        }else{
            this.modulesToInstallStatus=_.extend({},_.find(this.modulesToInstall,function(item){returnitem.id===moduleId;}));
            this.set('state','_import');
            this.$('#o_wslides_install_module_text')
                .text(_.str.sprintf(_t('Doyouwanttoinstallthe"%s"app?'),this.modulesToInstallStatus.name));
        }
    },

    _onClickInstallModuleConfirm:function(){
        varself=this;
        var$el=this.$('#o_wslides_install_module_text');
        $el.text(_.str.sprintf(_t('Installing"%s".'),this.modulesToInstallStatus.name));
        this.modulesToInstallStatus.installing=true;
        this._resetModalButton();
        this._rpc({
            model:'ir.module.module',
            method:'button_immediate_install',
            args:[[this.modulesToInstallStatus.id]],
        }).then(function(){
            window.location.href=window.location.origin+window.location.pathname+'?enable_slide_upload';
        },function(){
            $el.text(_.str.sprintf(_t('Failedtoinstall"%s".'),self.modulesToInstallStatus.name));
            self.modulesToInstallStatus.installing=false;
            self.modulesToInstallStatus.failed=true;
            self._resetModalButton();
        });
    },

    _onClickGoBack:function(){
        this.set('state','_select');
        this.isValidUrl=true;
        if(this.modulesToInstallStatus&&!this.modulesToInstallStatus.installing){
            this.modulesToInstallStatus=null;
        }
    },

    _onClickFormSubmit:function(ev){
        varself=this;
        var$btn=$(ev.currentTarget);
        if(this._formValidate()){
            varvalues=this._formValidateGetValues($btn.hasClass('o_w_slide_upload_published'));//getinfobeforechangingstate
            varoldType=this.get('state');
            this.set('state','_upload');

            returnnewPromise(asyncresolve=>{
                if(this.__svgLoadingExec){
                    awaitthis.__svgLoadingExec();
                }
                deletethis.__svgLoadingExec;
                resolve();
            }).then(()=>{
                returnthis._rpc({
                    route:'/slides/add_slide',
                    params:values,
                });
            }).then(function(data){
                self._onFormSubmitDone(data,oldType);
            });
        }
    },

    _onFormSubmitDone:function(data,oldType){
        if(data.error){
            this.set('state',oldType);
            this._alertDisplay(data.error);
        }else{
            window.location=data.url;
        }
    },

    _onClickSlideTypeIcon:function(ev){
        var$elem=this.$(ev.currentTarget);
        varslideType=$elem.data('slideType');
        this.set('state',slideType);

        this._bindSelect2Dropdown(); //rebindselect2ateachmodalbodyrendering
    },
});

publicWidget.registry.websiteSlidesUpload=publicWidget.Widget.extend({
    selector:'.o_wslides_js_slide_upload',
    xmlDependencies:['/website_slides/static/src/xml/website_slides_upload.xml'],
    events:{
        'click':'_onUploadClick',
    },

    /**
     *@override
     */
    start:function(){
        //Automaticallyopentheuploaddialogifrequestedfromquerystring
        if(this.$el.attr('data-open-modal')){
            this.$el.removeAttr('data-open-modal');
            this._openDialog(this.$el);
        }
        returnthis._super.apply(this,arguments);
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    _openDialog:function($element){
        vardata=$element.data();
        returnnewSlideUploadDialog(this,data).open();
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *@private
     *@param{Event}ev
     */
    _onUploadClick:function(ev){
        ev.preventDefault();
        this._openDialog($(ev.currentTarget));
    },
});

return{
    SlideUploadDialog:SlideUploadDialog,
    websiteSlidesUpload:publicWidget.registry.websiteSlidesUpload
};

});
