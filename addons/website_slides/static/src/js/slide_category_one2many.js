flectra.define('survey.slide_category_one2many',function(require){
"usestrict";

varContext=require('web.Context');
varFieldOne2Many=require('web.relational_fields').FieldOne2Many;
varFieldRegistry=require('web.field_registry');
varListRenderer=require('web.ListRenderer');
varconfig=require('web.config');

varSectionListRenderer=ListRenderer.extend({
    init:function(parent,state,params){
        this.sectionFieldName="is_category";
        this._super.apply(this,arguments);
    },
    _checkIfRecordIsSection:function(id){
        varrecord=this._findRecordById(id);
        returnrecord&&record.data[this.sectionFieldName];
    },
    _findRecordById:function(id){
        return_.find(this.state.data,function(record){
            returnrecord.id===id;
        });
    },
    /**
     *Allowstohidespecificfieldincasetherecordisasection
     *and,inthiscase,makesthe'title'fieldtakethespaceofalltheother
     *fields
     *@private
     *@override
     *@param{*}record
     *@param{*}node
     *@param{*}index
     *@param{*}options
     */
    _renderBodyCell:function(record,node,index,options){
        var$cell=this._super.apply(this,arguments);

        varisSection=record.data[this.sectionFieldName];

        if(isSection){
            if(node.attrs.widget==="handle"){
                return$cell;
            }elseif(node.attrs.name==="name"){
                varnbrColumns=this._getNumberOfCols();
                if(this.handleField){
                    nbrColumns--;
                }
                if(this.addTrashIcon){
                    nbrColumns--;
                }
                $cell.attr('colspan',nbrColumns);
            }else{
                $cell.removeClass('o_invisible_modifier');
                return$cell.addClass('o_hidden');
            }
        }
        return$cell;
    },
    /**
     *Addsspecificclassestorowsthataresections
     *toapplycustomcssonthem
     *@private
     *@override
     *@param{*}record
     *@param{*}index
     */
    _renderRow:function(record,index){
        var$row=this._super.apply(this,arguments);
        if(record.data[this.sectionFieldName]){
            $row.addClass("o_is_section");
        }
        return$row;
    },
    /**
     *Addingthisclassaftertheviewisrenderedallows
     *ustolimitthecustomcssscopetothisparticularcase
     *andnoother
     *@private
     *@override
     */
    _renderView:function(){
        vardef=this._super.apply(this,arguments);
        varself=this;
        returndef.then(function(){
            self.$('table.o_list_table').addClass('o_section_list_view');
        });
    },
    //Handlers
    /**
     *Overridentoallowdifferentbehavioursdependingon
     *therowtheuserclickedon.
     *Iftherowisasection:editinline
     *elseuseanormalmodal
     *@private
     *@override
     *@param{*}ev
     */
    _onRowClicked:function(ev){
        varparent=this.getParent();
        varrecordId=$(ev.currentTarget).data('id');
        varis_section=this._checkIfRecordIsSection(recordId);
        if(is_section&&parent.mode==="edit"){
            this.editable="bottom";
        }else{
            this.editable=null;
        }
        this._super.apply(this,arguments);
    },
    /**
     *Overridentoallowdifferentbehavioursdependingon
     *thecelltheuserclickedon.
     *Ifthecellispartofasection:editinline
     *elseuseanormaleditmodal
     *@private
     *@override
     *@param{*}ev
     */
    _onCellClick:function(ev){
        varparent=this.getParent();
        varrecordId=$(ev.currentTarget.parentElement).data('id');
        varis_section=this._checkIfRecordIsSection(recordId);
        if(is_section&&parent.mode==="edit"){
            this.editable="bottom";
        }else{
            this.editable=null;
            this.unselectRow();
        }
        this._super.apply(this,arguments);
    },
    /**
     *Inthiscase,navigatinginthelistcausedissues.
     *Forexample,editingasectionthenpressingenterwouldtrigger
     *theinlineeditionofthenextelementinthelist.Whichisnotdesired
     *ifthenextelementendsupbeingaquestionandnotasection
     *@override
     *@param{*}ev
     */
    _onNavigationMove:function(ev){
        this.unselectRow();
    },
});

varSectionFieldOne2Many=FieldOne2Many.extend({
    init:function(parent,name,record,options){
        this._super.apply(this,arguments);
        this.sectionFieldName="is_category";
        this.rendered=false;
    },
    /**
     *Overridentouseourcustomrenderer
     *@private
     *@override
     */
    _getRenderer:function(){
        if(this.view.arch.tag==='tree'){
            returnSectionListRenderer;
        }
        returnthis._super.apply(this,arguments);
    },
    /**
     *Overridentoallowdifferentbehavioursdependingon
     *theobjectwewanttoadd.Addingasectionwouldbedoneinline
     *whileaddingaquestionwouldrenderamodal.
     *@private
     *@override
     *@param{*}ev
     */
    _onAddRecord:function(ev){
        this.editable=null;
        if(!config.device.isMobile){
            varcontext_str=ev.data.context&&ev.data.context[0];
            varcontext=newContext(context_str).eval();
            if(context['default_'+this.sectionFieldName]){
                this.editable="bottom";
            }
        }
        this._super.apply(this,arguments);
    },
});

FieldRegistry.add('slide_category_one2many',SectionFieldOne2Many);
});