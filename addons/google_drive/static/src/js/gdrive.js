flectra.define('google_drive.ActionMenus',function(require){
    "usestrict";

    constActionMenus=require('web.ActionMenus');
    constDropdownMenuItem=require('web.DropdownMenuItem');

    /**
     *Fetchesthegoogledriveactionmenuitemprops.Todosothisfunction
     *isgivenitsparentpropsandenv,aswellastheRPCfunctionboundto
     *theparentcontext.
     *NotethatweusetheboundRPCtobenefitfromitsaddedbehaviour(see
     *web/component_extension).
     *@param{Object}props
     *@param{number[]}props.activeIds
     *@param{Object}props.context
     *@param{Object}env
     *@param{Object}env.actionThecurrentaction
     *@param{Object}env.viewThecurrentview
     *@param{Function}rpcBoundtotheActionMenuscontext
     *@returns{Object|boolean}itempropsorfalse
     */
    asyncfunctiongoogleDrivePropsGetter(props,env,rpc){
        const[activeId]=props.activeIds;
        const{context}=props;
        if(env.view.type!=="form"||!activeId){
            returnfalse;
        }
        constitems=awaitrpc({
            args:[env.action.res_model,activeId],
            context,
            method:'get_google_drive_config',
            model:'google.drive.config',
        });
        returnBoolean(items.length)&&{activeId,context,items};
    }

    /**
     *Googledrivemenu
     *
     *ThiscomponentisactuallyasetoflistitemsusedtoenrichtheActionMenus's
     *"Action"dropdownlist(@seeActionMenus).Itwillfetch
     *thecurrentuser'sgoogledriveconfigurationandsettheresultasits
     *itemsifany.
     *@extendsDropdownMenuItem
     */
    classGoogleDriveMenuextendsDropdownMenuItem{

        //---------------------------------------------------------------------
        //Handlers
        //---------------------------------------------------------------------

        /**
         *@private
         *@param{number}itemId
         *@returns{Promise}
         */
        async_onGoogleDocItemClick(itemId){
            constresID=this.props.activeId;
            constdomain=[['id','=',itemId]];
            constfields=['google_drive_resource_id','google_drive_client_id'];
            constconfigs=awaitthis.rpc({
                args:[domain,fields],
                method:'search_read',
                model:'google.drive.config',
            });
            consturl=awaitthis.rpc({
                args:[itemId,resID,configs[0].google_drive_resource_id],
                context:this.props.context,
                method:'get_google_drive_url',
                model:'google.drive.config',
            });
            if(url){
                window.open(url,'_blank');
            }
        }
    }
    GoogleDriveMenu.props={
        activeId:Number,
        context:Object,
        items:{
            type:Array,
            element:Object,
        },
    };
    GoogleDriveMenu.template='GoogleDriveMenu';

    ActionMenus.registry.add('google-drive-menu',{
        Component:GoogleDriveMenu,
        getProps:googleDrivePropsGetter,
    });

    returnGoogleDriveMenu;
});
