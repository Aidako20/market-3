flectra.define('pos_restaurant.tour.FloorScreenTourMethods',function(require){
    'usestrict';

    const{createTourMethods}=require('point_of_sale.tour.utils');

    classDo{
        clickTable(name){
            return[
                {
                    content:`clicktable'${name}'`,
                    trigger:`.floor-map.table.label:contains("${name}")`,
                },
            ];
        }
        clickFloor(name){
            return[
                {
                    content:`click'${name}'floor`,
                    trigger:`.floor-selector.button-floor:contains("${name}")`,
                },
            ];
        }
        clickEdit(){
            return[
                {
                    content:`clickeditbutton`,
                    trigger:`.floor-map.edit-button`,
                },
            ];
        }
        clickAddTable(){
            return[
                {
                    content:'addtable',
                    trigger:`.floor-map.edit-buttoni[aria-label=Add]`,
                },
            ];
        }
        clickDuplicate(){
            return[
                {
                    content:'duplicatetable',
                    trigger:`.floor-map.edit-buttoni[aria-label=Duplicate]`,
                },
            ];
        }
        clickRename(){
            return[
                {
                    content:'renametable',
                    trigger:`.floor-map.edit-buttoni[aria-label=Rename]`,
                },
            ];
        }
        clickSeats(){
            return[
                {
                    content:'changenumberofseats',
                    trigger:`.floor-map.edit-buttoni[aria-label=Seats]`,
                },
            ];
        }
        clickTrash(){
            return[
                {
                    content:'trashtable',
                    trigger:`.floor-map.edit-button.trash`,
                },
            ];
        }
        changeShapeTo(shape){
            return[
                {
                    content:`changeshapeto'${shape}'`,
                    trigger:`.edit-button.button-option${shape==='round'?'.square':'.round'}`,
                },
            ];
        }
    }

    classCheck{
        selectedFloorIs(name){
            return[
                {
                    content:`selectedflooris'${name}'`,
                    trigger:`.floor-selector.button-floor.active:contains("${name}")`,
                    run:()=>{},
                },
            ];
        }
        selectedTableIs(name){
            return[
                {
                    content:`selectedtableis'${name}'`,
                    trigger:`.floor-map.table.selected.label:contains("${name}")`,
                    run:()=>{},
                },
            ];
        }
        hasTable(name){
            return[
                {
                    content:`selectedfloorhas'${name}'table`,
                    trigger:`.floor-map.tables.table.label:contains("${name}")`,
                    run:()=>{},
                },
            ];
        }
        editModeIsActive(flag){
            return[
                {
                    content:`checkifeditmodeis${flag?'active':'inactive'}`,
                    trigger:`.floor-map.edit-button${flag?'.active':':not(:has(.active))'}`,
                    run:()=>{},
                },
            ];
        }
        tableSeatIs(table,val){
            return[
                {
                    content:`numberofseatsintable'${table}'is'${val}'`,
                    trigger:`.floor-map.tables.table.label:contains("${table}")~.table-seats:contains("${val}")`,
                    run:function(){},
                },
            ];
        }
        orderCountSyncedInTableIs(table,count){
            return[
                {
                    trigger:`.floor-map.table.order-count:contains("${count}")~.label:contains("${table}")`,
                    run:function(){},
                },
            ];
        }
        isShown(){
            return[
                {
                    trigger:'.floor-map',
                    run:function(){},
                },
            ];
        }
        tableIsNotSelected(name){
            return[
                {
                    content:`table'${name}'isnotselected`,
                    trigger:`.floor-map.table:not(.selected).label:contains("${name}")`,
                    run:function(){},
                },
            ];
        }
    }

    classExecute{}

    returncreateTourMethods('FloorScreen',Do,Check,Execute);
});
