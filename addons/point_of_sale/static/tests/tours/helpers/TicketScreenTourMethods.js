flectra.define('point_of_sale.tour.TicketScreenTourMethods',function(require){
    'usestrict';

    const{createTourMethods}=require('point_of_sale.tour.utils');

    classDo{
        clickNewTicket(){
            return[{trigger:'.ticket-screen.highlight'}];
        }
        clickDiscard(){
            return[{trigger:'.ticket-screenbutton.discard'}];
        }
        selectOrder(orderName){
            return[
                {
                    trigger:`.ticket-screen.order-row>.col:nth-child(2):contains("${orderName}")`,
                },
            ];
        }
        deleteOrder(orderName){
            return[
                {
                    trigger:`.ticket-screen.orders>.order-row>.col:contains("${orderName}")~.col[name="delete"]`,
                },
            ];
        }
        selectFilter(name){
            return[
                {
                    trigger:`.pos-search-bar.filter`,
                },
                {
                    trigger:`.pos-search-bar.filterul`,
                    run:()=>{},
                },
                {
                    trigger:`.pos-search-bar.filterulli:contains("${name}")`,
                },
            ];
        }
        search(field,searchWord){
            return[
                {
                    trigger:'.pos-search-barinput',
                    run:`text${searchWord}`,
                },
                {
                    /**
                     *Manuallytriggerkeydowneventtoshowthesearchfieldlist
                     *becausethepreviousstepdonottriggerkeydownevent.
                     */
                    trigger:'.pos-search-barinput',
                    run:function(){
                        document
                            .querySelector('.pos-search-barinput')
                            .dispatchEvent(newKeyboardEvent('keydown',{key:''}));
                    },
                },
                {
                    trigger:`.pos-search-bar.searchulli:contains("${field}")`,
                },
            ];
        }
        settleTips(){
            return[
                {
                    trigger:'.ticket-screen.buttons.settle-tips',
                },
            ];
        }
    }

    classCheck{
        checkStatus(orderName,status){
            return[
                {
                    trigger:`.ticket-screen.order-row>.col:nth-child(2):contains("${orderName}")~.col:nth-child(6):contains(${status})`,
                    run:()=>{},
                },
            ];
        }
        /**
         *Checkifthenthrowcontainsthegivenstring.
         *Notethat1strowistheheader-row.
         */
        nthRowContains(n,string){
            return[
                {
                    trigger:`.ticket-screen.orders>.order-row:nth-child(${n}):contains("${string}")`,
                    run:()=>{},
                },
            ];
        }
        noNewTicketButton(){
            return[
                {
                    trigger:'.ticket-screen.controls.buttons:nth-child(1):has(.discard)',
                    run:()=>{},
                },
            ];
        }
    }

    classExecute{}

    returncreateTourMethods('TicketScreen',Do,Check,Execute);
});
