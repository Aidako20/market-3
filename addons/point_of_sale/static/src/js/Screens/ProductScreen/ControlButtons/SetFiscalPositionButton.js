flectra.define('point_of_sale.SetFiscalPositionButton',function(require){
    'usestrict';

    constPosComponent=require('point_of_sale.PosComponent');
    constProductScreen=require('point_of_sale.ProductScreen');
    const{useListener}=require('web.custom_hooks');
    constRegistries=require('point_of_sale.Registries');

    classSetFiscalPositionButtonextendsPosComponent{
        constructor(){
            super(...arguments);
            useListener('click',this.onClick);
        }
        mounted(){
            this.env.pos.get('orders').on('addremovechange',()=>this.render(),this);
            this.env.pos.on('change:selectedOrder',()=>this.render(),this);
        }
        willUnmount(){
            this.env.pos.get('orders').off('addremovechange',null,this);
            this.env.pos.off('change:selectedOrder',null,this);
        }
        getcurrentOrder(){
            returnthis.env.pos.get_order();
        }
        getcurrentFiscalPositionName(){
            returnthis.currentOrder&&this.currentOrder.fiscal_position
                ?this.currentOrder.fiscal_position.display_name
                :this.env._t('Tax');
        }
        asynconClick(){
            constcurrentFiscalPosition=this.currentOrder.fiscal_position;
            constfiscalPosList=[
                {
                    id:-1,
                    label:this.env._t('None'),
                    isSelected:!currentFiscalPosition,
                },
            ];
            for(letfiscalPosofthis.env.pos.fiscal_positions){
                fiscalPosList.push({
                    id:fiscalPos.id,
                    label:fiscalPos.name,
                    isSelected:currentFiscalPosition
                        ?fiscalPos.id===currentFiscalPosition.id
                        :false,
                    item:fiscalPos,
                });
            }
            const{confirmed,payload:selectedFiscalPosition}=awaitthis.showPopup(
                'SelectionPopup',
                {
                    title:this.env._t('SelectFiscalPosition'),
                    list:fiscalPosList,
                }
            );
            if(confirmed){
                this.currentOrder.fiscal_position=selectedFiscalPosition;
                //IMPROVEMENT:ThefollowingistheoldimplementationandIbelieve
                //therecouldbeabetterwayofdoingit.
                for(letlineofthis.currentOrder.orderlines.models){
                    line.set_quantity(line.quantity);
                }
                this.currentOrder.trigger('change');
            }
        }
    }
    SetFiscalPositionButton.template='SetFiscalPositionButton';

    ProductScreen.addControlButton({
        component:SetFiscalPositionButton,
        condition:function(){
            returnthis.env.pos.fiscal_positions.length>0;
        },
        position:['before','SetPricelistButton'],
    });

    Registries.Component.add(SetFiscalPositionButton);

    returnSetFiscalPositionButton;
});
