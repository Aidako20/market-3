flectra.define('point_of_sale.ProductsWidget',function(require){
    'usestrict';

    const{useState}=owl.hooks;
    constPosComponent=require('point_of_sale.PosComponent');
    const{useListener}=require('web.custom_hooks');
    constRegistries=require('point_of_sale.Registries');

    classProductsWidgetextendsPosComponent{
        /**
         *@param{Object}props
         *@param{number?}props.startCategoryId
         */
        constructor(){
            super(...arguments);
            useListener('switch-category',this._switchCategory);
            useListener('update-search',this._updateSearch);
            useListener('try-add-product',this._tryAddProduct);
            useListener('clear-search',this._clearSearch);
            this.state=useState({searchWord:''});
        }
        mounted(){
            this.env.pos.on('change:selectedCategoryId',this.render,this);
        }
        willUnmount(){
            this.env.pos.off('change:selectedCategoryId',null,this);
        }
        getselectedCategoryId(){
            returnthis.env.pos.get('selectedCategoryId');
        }
        getsearchWord(){
            returnthis.state.searchWord.trim();
        }
        getproductsToDisplay(){
            if(this.searchWord!==''){
                returnthis.env.pos.db.search_product_in_category(
                    this.selectedCategoryId,
                    this.searchWord
                );
            }else{
                returnthis.env.pos.db.get_product_by_category(this.selectedCategoryId);
            }
        }
        getsubcategories(){
            returnthis.env.pos.db
                .get_category_childs_ids(this.selectedCategoryId)
                .map(id=>this.env.pos.db.get_category_by_id(id));
        }
        getbreadcrumbs(){
            if(this.selectedCategoryId===this.env.pos.db.root_category_id)return[];
            return[
                ...this.env.pos.db
                    .get_category_ancestors_ids(this.selectedCategoryId)
                    .slice(1),
                this.selectedCategoryId,
            ].map(id=>this.env.pos.db.get_category_by_id(id));
        }
        gethasNoCategories(){
            returnthis.env.pos.db.get_category_childs_ids(0).length===0;
        }
        _switchCategory(event){
            this.env.pos.set('selectedCategoryId',event.detail);
        }
        _updateSearch(event){
            this.state.searchWord=event.detail;
        }
        _tryAddProduct(event){
            constsearchResults=this.productsToDisplay;
            //Ifthesearchresultcontainsoneitem,addtheproductandclearthesearch.
            if(searchResults.length===1){
                const{searchWordInput}=event.detail;
                this.trigger('click-product',searchResults[0]);
                //thevalueoftheinputelementisnotlinkedtothesearchWordstate,
                //soweclearboththestateandtheelement'svalue.
                searchWordInput.el.value='';
                this._clearSearch();
            }
        }
        _clearSearch(){
            this.state.searchWord='';
        }
    }
    ProductsWidget.template='ProductsWidget';

    Registries.Component.add(ProductsWidget);

    returnProductsWidget;
});
