flectra.define('point_of_sale.ClientScreenButton',function(require){
    'usestrict';

    const{useState}=owl;
    constPosComponent=require('point_of_sale.PosComponent');
    constRegistries=require('point_of_sale.Registries');

    //FormerlyClientScreenWidget
    classClientScreenButtonextendsPosComponent{
        constructor(){
            super(...arguments);
            this.state=useState({status:'failure'});
            this._start();
        }
        getmessage(){
            return{
                success:'',
                warning:this.env._t('Connected,NotOwned'),
                failure:this.env._t('Disconnected'),
                not_found:this.env._t('ClientScreenUnsupported.PleaseupgradetheIoTBox'),
            }[this.state.status];
        }
        asynconClick(){
            try{
                constrenderedHtml=awaitthis.env.pos.render_html_for_customer_facing_display();
                constownership=awaitthis.env.pos.proxy.take_ownership_over_client_screen(
                    renderedHtml
                );
                if(typeofownership==='string'){
                    ownership=JSON.parse(ownership);
                }
                if(ownership.status==='success'){
                    this.state.status='success';
                }else{
                    this.state.status='warning';
                }
                if(!this.env.pos.proxy.posbox_supports_display){
                    this.env.pos.proxy.posbox_supports_display=true;
                    this._start();
                }
            }catch(error){
                if(typeoferror=='undefined'){
                    this.state.status='failure';
                }else{
                    this.state.status='not_found';
                }
            }
        }
        _start(){
            constself=this;
            asyncfunctionloop(){
                if(self.env.pos.proxy.posbox_supports_display){
                    try{
                        constownership=awaitself.env.pos.proxy.test_ownership_of_client_screen();
                        if(typeofownership==='string'){
                            ownership=JSON.parse(ownership);
                        }
                        if(ownership.status==='OWNER'){
                            self.state.status='success';
                        }else{
                            self.state.status='warning';
                        }
                        setTimeout(loop,3000);
                    }catch(error){
                        if(error.abort){
                            //Stoptheloop
                            return;
                        }
                        if(typeoferror=='undefined'){
                            self.state.status='failure';
                        }else{
                            self.state.status='not_found';
                            self.env.pos.proxy.posbox_supports_display=false;
                        }
                        setTimeout(loop,3000);
                    }
                }
            }
            loop();
        }
    }
    ClientScreenButton.template='ClientScreenButton';

    Registries.Component.add(ClientScreenButton);

    returnClientScreenButton;
});
