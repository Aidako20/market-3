<?xmlversion="1.0"encoding="utf-8"?>
<flectra>

    <templateid="ubl_20_AddressType">
        <txmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
           xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
           xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2">
            <cbc:StreetNamet-esc="vals.get('street_name')"/>
            <cbc:AdditionalStreetNamet-esc="vals.get('additional_street_name')"/>
            <cbc:CityNamet-esc="vals.get('city_name')"/>
            <cbc:PostalZonet-esc="vals.get('postal_zone')"/>
            <cbc:CountrySubentityt-esc="vals.get('country_subentity')"/>
            <cbc:CountrySubentityCodet-esc="vals.get('country_subentity_code')"/>
            <cac:Country>
                <tt-set="country_vals"t-value="vals.get('country_vals',{})"/>
                <cbc:IdentificationCode
                    t-att="country_vals.get('identification_code_attrs',{})"
                    t-esc="country_vals.get('identification_code')"/>
                <cbc:Namet-esc="country_vals.get('name')"/>
            </cac:Country>
        </t>
    </template>

    <templateid="ubl_20_PartyType">
        <txmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
           xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
           xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2">
            <tt-set="partner"t-value="vals.get('partner')orbuilder.env['res.partner']"/>
            <cbc:EndpointID
                    t-att="vals.get('endpoint_id_attrs',{})"
                    t-esc="vals.get('endpoint_id')"/>
            <tt-foreach="vals.get('party_identification_vals',[])"t-as="party_vals">
                <cac:PartyIdentification>
                    <cbc:ID
                        t-att="party_vals.get('id_attrs',{})"
                        t-esc="party_vals.get('id')"/>
                </cac:PartyIdentification>
            </t>
            <tt-foreach="vals.get('party_name_vals',[])"t-as="party_vals">
                <cac:PartyName>
                    <cbc:Namet-esc="party_vals.get('name')"/>
                </cac:PartyName>
            </t>
            <cac:PostalAddress>
                <tt-call="{{AddressType_template}}">
                    <tt-set="vals"t-value="vals.get('postal_address_vals',{})"/>
                </t>
            </cac:PostalAddress>
            <tt-foreach="vals.get('party_tax_scheme_vals',[])"t-as="foreach_vals">
                <cac:PartyTaxScheme>
                    <cbc:RegistrationNamet-esc="foreach_vals.get('registration_name')"/>
                    <cbc:CompanyID
                            t-att="foreach_vals.get('company_id_attrs',{})"
                            t-esc="foreach_vals.get('company_id')"/>
                    <cac:RegistrationAddress>
                        <tt-call="{{AddressType_template}}">
                            <tt-set="vals"t-value="foreach_vals.get('registration_address_vals',{})"/>
                        </t>
                    </cac:RegistrationAddress>
                    <cac:TaxScheme>
                        <cbc:IDt-esc="foreach_vals.get('tax_scheme_id')"/>
                    </cac:TaxScheme>
                </cac:PartyTaxScheme>
            </t>

            <tt-foreach="vals.get('party_legal_entity_vals',[])"t-as="foreach_vals">
                <cac:PartyLegalEntity>
                    <cbc:RegistrationNamet-esc="foreach_vals.get('registration_name')"/>
                    <cbc:CompanyID
                            t-att="foreach_vals.get('company_id_attrs',{})"
                            t-esc="foreach_vals.get('company_id')"/>
                    <cac:RegistrationAddress>
                        <tt-call="{{AddressType_template}}">
                            <tt-set="vals"t-value="foreach_vals.get('registration_address_vals',{})"/>
                        </t>
                    </cac:RegistrationAddress>
                </cac:PartyLegalEntity>
            </t>
            <cac:Contact>
                <tt-set="contact_vals"t-value="vals.get('contact_vals',{})"/>
                <cbc:IDt-esc="contact_vals.get('id')"/>
                <cbc:Namet-esc="contact_vals.get('name')"/>
                <cbc:Telephonet-esc="contact_vals.get('telephone')"/>
                <cbc:ElectronicMailt-esc="contact_vals.get('electronic_mail')"/>
            </cac:Contact>
        </t>
    </template>

    <templateid="ubl_20_PaymentMeansType">
        <txmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
           xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
           xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2">
            <cbc:PaymentMeansCode
                    t-att="vals.get('payment_means_code_attrs',{})"
                    t-esc="vals.get('payment_means_code')"/>
            <cbc:PaymentDueDatet-esc="vals.get('payment_due_date')"/>
            <cbc:InstructionIDt-esc="vals.get('instruction_id')"/>
            <tt-foreach="vals.get('payment_id_vals',[])"t-as="payment_id">
                <cbc:PaymentIDt-esc="payment_id"/>
            </t>
            <cac:PayeeFinancialAccount>
                <tt-set="payee_financial_account_vals"t-value="vals.get('payee_financial_account_vals',{})"/>
                <cbc:ID
                    t-att="payee_financial_account_vals.get('id_attrs',{})"
                    t-esc="payee_financial_account_vals.get('id')"/>
                <cac:FinancialInstitutionBranch>
                    <tt-set="financial_institution_branch_vals"t-value="payee_financial_account_vals.get('financial_institution_branch_vals',{})"/>
                    <cbc:ID
                        t-att="financial_institution_branch_vals.get('id_attrs',{})"
                        t-esc="financial_institution_branch_vals.get('id')"/>
                    <cac:FinancialInstitution>
                        <tt-set="financial_institution_vals"t-value="financial_institution_branch_vals.get('financial_institution_vals',{})"/>
                        <cbc:ID
                            t-att="financial_institution_vals.get('id_attrs',{})"
                            t-esc="financial_institution_vals.get('id')"/>
                        <cbc:Namet-esc="financial_institution_vals.get('name')"/>
                        <cac:Address>
                            <tt-call="{{AddressType_template}}">
                                <tt-set="vals"t-value="financial_institution_vals.get('address_vals',{})"/>
                            </t>
                        </cac:Address>
                    </cac:FinancialInstitution>
                </cac:FinancialInstitutionBranch>
            </cac:PayeeFinancialAccount>
        </t>
    </template>

    <templateid="ubl_20_TaxCategoryType">
        <txmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
           xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
           xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2">
            <cbc:ID
                t-att="vals.get('id_attrs',{})"
                t-esc="vals.get('id')"/>
            <cbc:Namet-esc="vals.get('name')"/>
            <cbc:Percentt-esc="vals.get('percent')"/>
            <cbc:TaxExemptionReasonCode
                    t-esc="vals.get('tax_exemption_reason_code')"/>
            <cbc:TaxExemptionReason
                    t-esc="vals.get('tax_exemption_reason')"/>
            <cac:TaxScheme>
                <cbc:ID>VAT</cbc:ID>
            </cac:TaxScheme>
        </t>
    </template>

    <templateid="ubl_20_TaxTotalType">
        <txmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
           xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
           xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2">
            <cbc:TaxAmount
                    t-att-currencyID="vals['currency'].name"
                    t-esc="format_float(vals.get('tax_amount'),vals.get('currency_dp'))"/>
            <tt-foreach="vals.get('tax_subtotal_vals',[])"t-as="foreach_vals">
                <cac:TaxSubtotal>
                    <cbc:TaxableAmount
                        t-att-currencyID="foreach_vals['currency'].name"
                        t-esc="format_float(foreach_vals.get('taxable_amount'),foreach_vals.get('currency_dp'))"/>
                    <cbc:TaxAmount
                        t-att-currencyID="foreach_vals['currency'].name"
                        t-esc="format_float(foreach_vals.get('tax_amount'),foreach_vals.get('currency_dp'))"/>
                    <cbc:Percentt-esc="foreach_vals.get('percent')"/>
                    <cac:TaxCategory>
                        <tt-call="{{TaxCategoryType_template}}">
                            <tt-set="vals"t-value="foreach_vals.get('tax_category_vals',{})"/>
                        </t>
                    </cac:TaxCategory>
                </cac:TaxSubtotal>
            </t>
        </t>
    </template>

    <templateid="ubl_20_AllowanceChargeType">
        <txmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
           xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
           xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2">
            <cbc:ChargeIndicatort-esc="vals.get('charge_indicator')"/>
            <cbc:AllowanceChargeReasonCodet-esc="vals.get('allowance_charge_reason_code')"/>
            <cbc:AllowanceChargeReasont-esc="vals.get('allowance_charge_reason')"/>
            <cbc:MultiplierFactorNumerict-esc="vals.get('multiplier_factor')"/>
            <cbc:Amount
                    t-att-currencyID="vals.get('currency_name')"
                    t-esc="format_float(vals.get('amount'),vals.get('currency_dp'))"/>
            <tt-foreach="vals.get('tax_category_vals',[])"t-as="foreach_vals">
                <cac:TaxCategory>
                    <tt-call="{{TaxCategoryType_template}}">
                        <tt-set="vals"t-value="foreach_vals"/>
                    </t>
                </cac:TaxCategory>
            </t>
        </t>
    </template>

    <templateid="ubl_20_InvoiceLineType">
        <txmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
           xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
           xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2">
            <cbc:IDt-esc="vals.get('id')"/>
            <cbc:Notet-esc="vals.get('note')"/>
            <cbc:InvoicedQuantity
                    t-if="invoice.move_type=='out_invoice'"
                    t-att="vals.get('invoiced_quantity_attrs',{})"
                    t-esc="vals.get('invoiced_quantity')"/>
            <cbc:CreditedQuantity
                    t-if="invoice.move_type=='out_refund'"
                    t-att="vals.get('invoiced_quantity_attrs',{})"
                    t-esc="vals.get('invoiced_quantity')"/>
            <cbc:LineExtensionAmount
                    t-att-currencyID="vals['currency'].name"
                    t-esc="format_float(vals.get('line_extension_amount'),vals.get('currency_dp'))"/>
            <!--AllowanceChargeisonlypresentforInvoiceLine,notforCreditNoteLineinUBL2.0
            (theyarebothpresentinUBL2.1andnext)
             http://www.datypic.com/sc/ubl20/e-cac_CreditNoteLine.html
             http://www.datypic.com/sc/ubl20/e-cac_InvoiceLine.html
             -->
            <tt-if="invoice.move_type=='out_invoice'">
                <tt-foreach="vals.get('allowance_charge_vals',[])"t-as="foreach_vals">
                    <cac:AllowanceCharge>
                        <tt-call="{{AllowanceChargeType_template}}">
                            <tt-set="vals"t-value="foreach_vals"/>
                        </t>
                    </cac:AllowanceCharge>
                </t>
            </t>
            <tt-foreach="vals.get('tax_total_vals',[])"t-as="foreach_vals">
                <cac:TaxTotal>
                    <tt-call="{{TaxTotalType_template}}">
                        <tt-set="vals"t-value="foreach_vals"/>
                    </t>
                </cac:TaxTotal>
            </t>
            <cac:Item>
                <tt-set="item_vals"t-value="vals.get('item_vals',{})"/>
                <cbc:Descriptiont-esc="item_vals.get('description')"/>
                <cbc:Namet-esc="item_vals.get('name')"/>
                <cac:SellersItemIdentification>
                    <cbc:IDt-esc="item_vals.get('sellers_item_identification_vals',{}).get('id')"/>
                </cac:SellersItemIdentification>
                <tt-foreach="item_vals.get('classified_tax_category_vals',[])"t-as="foreach_vals">
                    <cac:ClassifiedTaxCategory>
                        <tt-call="{{TaxCategoryType_template}}">
                            <tt-set="vals"t-value="foreach_vals"/>
                        </t>
                    </cac:ClassifiedTaxCategory>
                </t>
            </cac:Item>
            <cac:Price>
                <tt-set="vals"t-value="vals.get('price_vals',{})"/>
                <cbc:PriceAmount
                        t-att-currencyID="vals['currency'].name"
                        t-esc="format_float(vals.get('price_amount'),vals.get('product_price_dp'))"/>
                <!--nbrofitemunitstowhichthepriceapplies),i.e.:1Dozen=12units,notmandatory-->
                <cbc:BaseQuantity
                        t-att="vals.get('base_quantity_attrs',{})"
                        t-esc="vals.get('base_quantity')"/>
            </cac:Price>
        </t>
    </template>

    <templateid="ubl_20_InvoiceType">
        <txmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
           xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
           xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2">
            <cbc:UBLVersionIDt-esc="vals.get('ubl_version_id')"/>
            <cbc:CustomizationIDt-esc="vals.get('customization_id')"/>
            <cbc:ProfileIDt-esc="vals.get('profile_id')"/>
            <cbc:IDt-esc="vals.get('id')"/>
            <cbc:IssueDatet-esc="vals.get('issue_date')"/>
            <cbc:InvoiceTypeCode
                    t-if="invoice.move_type=='out_invoice'"
                    t-att="vals.get('invoice_type_code_attrs',{})"
                    t-esc="vals.get('invoice_type_code')"
            />
            <tt-foreach="vals.get('note_vals',[])"t-as="note">
                <cbc:Notet-esc="note"/>
            </t>
            <cbc:DocumentCurrencyCode
                    t-att="vals.get('document_currency_code_attrs',{})"
                    t-esc="invoice.currency_id.name.upper()"/>
            <tt-foreach="vals.get('invoice_period_vals_list',[])"t-as="foreach_vals">
                <cac:InvoicePeriod>
                    <cbc:StartDatet-esc="foreach_vals.get('start_date')"/>
                    <cbc:EndDatet-esc="foreach_vals.get('end_date')"/>
                </cac:InvoicePeriod>
            </t>
            <cac:OrderReference>
                <cbc:IDt-esc="vals.get('order_reference')"/>
                <cbc:SalesOrderIDt-esc="vals.get('sales_order_id')"/>
            </cac:OrderReference>
            <cac:BillingReferencet-if="vals.get('billing_reference_vals')">
                <cac:InvoiceDocumentReference>
                    <cbc:IDt-esc="vals['billing_reference_vals'].get('id')"/>
                    <cbc:IssueDatet-esc="vals['billing_reference_vals'].get('issue_date')"/>
                </cac:InvoiceDocumentReference>
            </cac:BillingReference>
            <cac:AccountingSupplierParty>
                <tt-set="accounting_supplier_vals"t-value="vals.get('accounting_supplier_party_vals',{})"/>
                <cac:Party>
                    <tt-call="{{PartyType_template}}">
                        <tt-set="vals"t-value="accounting_supplier_vals.get('party_vals',{})"/>
                    </t>
                </cac:Party>
            </cac:AccountingSupplierParty>
            <cac:AccountingCustomerParty>
                <tt-set="accounting_customer_vals"t-value="vals.get('accounting_customer_party_vals',{})"/>
                <cac:Party>
                    <tt-call="{{PartyType_template}}">
                        <tt-set="vals"t-value="accounting_customer_vals.get('party_vals',{})"/>
                    </t>
                </cac:Party>
            </cac:AccountingCustomerParty>
            <tid="delivery_foreach"t-foreach="vals.get('delivery_vals_list',[])"t-as="foreach_vals">
                <cac:Delivery>
                    <cbc:ActualDeliveryDatet-esc="foreach_vals.get('actual_delivery_date')"/>
                    <cac:DeliveryLocation>
                        <cac:Address>
                            <tt-call="{{AddressType_template}}">
                                <tt-set="vals"
                                   t-value="foreach_vals.get('delivery_location_vals',{}).get('delivery_address_vals',{})"/>
                            </t>
                        </cac:Address>
                    </cac:DeliveryLocation>
                </cac:Delivery>
            </t>
            <!--InUBL2.0PaymentMeansisonlypresentforInvoice
            whileinUBL2.1,itispresentforInvoiceandCreditNote
            http://www.datypic.com/sc/ubl20/e-ns19_Invoice.html
            http://www.datypic.com/sc/ubl20/e-ns14_CreditNote.html-->
            <tt-if="invoice.move_type=='out_invoice'">
                <tt-foreach="vals.get('payment_means_vals_list',[])"t-as="foreach_vals">
                    <cac:PaymentMeans>
                        <tt-call="{{PaymentMeansType_template}}">
                            <tt-set="vals"t-value="foreach_vals"/>
                        </t>
                    </cac:PaymentMeans>
                </t>
            </t>
            <tt-foreach="vals.get('payment_terms_vals',[])"t-as="foreach_vals">
                <cac:PaymentTerms>
                    <tt-foreach="foreach_vals.get('note_vals',[])"t-as="note">
                        <cbc:Notet-esc="note"/>
                    </t>
                </cac:PaymentTerms>
            </t>
            <tt-foreach="vals.get('allowance_charge_vals',[])"t-as="foreach_vals">
                <cac:AllowanceCharge>
                    <tt-call="{{AllowanceChargeType_template}}">
                        <tt-set="vals"t-value="foreach_vals"/>
                    </t>
                </cac:AllowanceCharge>
            </t>
            <tt-foreach="vals.get('tax_total_vals',[])"t-as="foreach_vals">
                <cac:TaxTotal>
                    <tt-call="{{TaxTotalType_template}}">
                        <tt-set="vals"t-value="foreach_vals"/>
                    </t>
                </cac:TaxTotal>
            </t>
            <cac:LegalMonetaryTotal>
                <tt-set="monetary_tot_vals"t-value="vals.get('legal_monetary_total_vals',{})"/>
                <cbc:LineExtensionAmount
                    t-att-currencyID="monetary_tot_vals['currency'].name"
                    t-esc="format_float(monetary_tot_vals.get('line_extension_amount'),monetary_tot_vals.get('currency_dp'))"/>
                <cbc:TaxExclusiveAmount
                    t-att-currencyID="monetary_tot_vals['currency'].name"
                    t-esc="format_float(monetary_tot_vals.get('tax_exclusive_amount'),monetary_tot_vals.get('currency_dp'))"/>
                <cbc:TaxInclusiveAmount
                    t-att-currencyID="monetary_tot_vals['currency'].name"
                    t-esc="format_float(monetary_tot_vals.get('tax_inclusive_amount'),monetary_tot_vals.get('currency_dp'))"/>
                <cbc:AllowanceTotalAmount
                    t-att-currencyID="monetary_tot_vals['currency'].name"
                    t-esc="format_float(monetary_tot_vals.get('allowance_total_amount'),monetary_tot_vals.get('currency_dp'))"/>
                <cbc:PrepaidAmount
                    t-att-currencyID="monetary_tot_vals['currency'].name"
                    t-esc="format_float(monetary_tot_vals.get('prepaid_amount'),monetary_tot_vals.get('currency_dp'))"/>
                <cbc:PayableAmount
                    t-att-currencyID="monetary_tot_vals['currency'].name"
                    t-esc="format_float(monetary_tot_vals.get('payable_amount'),monetary_tot_vals.get('currency_dp'))"/>
            </cac:LegalMonetaryTotal>
            <tt-foreach="vals.get('invoice_line_vals',[])"t-as="foreach_vals">
                <cac:InvoiceLinet-if="invoice.move_type=='out_invoice'">
                    <tt-call="{{InvoiceLineType_template}}">
                        <tt-set="vals"t-value="foreach_vals"/>
                    </t>
                </cac:InvoiceLine>
                <cac:CreditNoteLinet-if="invoice.move_type=='out_refund'">
                    <tt-call="{{InvoiceLineType_template}}">
                        <tt-set="vals"t-value="foreach_vals"/>
                    </t>
                </cac:CreditNoteLine>
            </t>
        </t>
    </template>

    <templateid="ubl_20_Invoice">
        <Invoicexmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
                 xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
                 xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2">
            <tt-call="{{InvoiceType_template}}"/>
        </Invoice>
    </template>

    <templateid="ubl_20_CreditNote">
        <CreditNotexmlns="urn:oasis:names:specification:ubl:schema:xsd:CreditNote-2"
                    xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
                    xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2">
            <tt-call="{{InvoiceType_template}}"/>
        </CreditNote>
    </template>

</flectra>
