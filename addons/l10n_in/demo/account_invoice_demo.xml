<?xmlversion="1.0"encoding="utf-8"?>
<flectranoupdate="1">

    <!--DemoofB2B(business-to-business)Taxablesuppliesmadetootherregisteredperson.-->
    <recordid="demo_invoice_b2b"model="account.move">
        <fieldname="move_type">out_invoice</field>
        <fieldname="partner_id"ref="l10n_in.res_partner_registered_customer"/>
        <fieldname="l10n_in_reseller_partner_id"ref="l10n_in.res_partner_reseller"/>
        <fieldname="invoice_user_id"ref="base.user_demo"/>
        <fieldname="invoice_payment_term_id"ref="account.account_payment_term_end_following_month"/>
        <fieldname="invoice_date"eval="time.strftime('%Y-%m')+'-01'"/>
        <fieldname="l10n_in_gst_treatment">regular</field>
        <fieldname="journal_id"model="account.journal"
            eval="obj().search([
                ('type','=','sale'),
                ('company_id','=',ref('l10n_in.demo_company_in'))],limit=1).id"/>
        <fieldname="invoice_line_ids"model="account.move.line"eval="[
            (0,0,{
                'product_id':ref('product.product_product_8'),
                'quantity':2,
                'price_unit':40000.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                    ('company_id','=',ref('l10n_in.demo_company_in')),
                    ('type_tax_use','=','sale'),
                    ('amount','=',28),
                    ('tax_group_id','=',ref('l10n_in.gst_group'))],limit=1).ids)]
            }),
            (0,0,{
                'product_id':ref('product.product_product_9'),
                'quantity':3,
                'price_unit':400.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                    ('company_id','=',ref('l10n_in.demo_company_in')),
                    ('type_tax_use','=','sale'),
                    ('amount','=',18),
                    ('tax_group_id','=',ref('l10n_in.gst_group'))],limit=1).ids)]
            }),
            (0,0,{
                'product_id':ref('product.product_product_10'),
                'quantity':4,
                'price_unit':300.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                        ('company_id','=',ref('l10n_in.demo_company_in')),
                        ('type_tax_use','=','sale'),
                    '|',
                        '&amp;',
                        ('amount','=',18),
                        ('tax_group_id','=',ref('l10n_in.gst_group')),
                        '&amp;',
                        ('tax_group_id','=',ref('l10n_in.cess_group')),
                        ('children_tax_ids.amount','=',5)
                    ],limit=2).ids)]
            }),
        ]"/>
    </record>

    <!--DemoofB2CS(businesstoconsumersmall)TaxablesuppliesmadetootherunregisteredPersonandbelowINR2.5lakhsinvoicevalue.-->
    <recordid="demo_invoice_b2cs"model="account.move">
        <fieldname="move_type">out_invoice</field>
        <fieldname="partner_id"ref="l10n_in.res_partner_unregistered_customer"/>
        <fieldname="invoice_user_id"ref="base.user_demo"/>
        <fieldname="invoice_payment_term_id"ref="account.account_payment_term_end_following_month"/>
        <fieldname="invoice_date"eval="time.strftime('%Y-%m')+'-01'"/>
        <fieldname="l10n_in_gst_treatment">consumer</field>
        <fieldname="journal_id"model="account.journal"
            eval="obj().search([
                ('type','=','sale'),
                ('company_id','=',ref('l10n_in.demo_company_in'))],limit=1).id"/>
        <fieldname="invoice_line_ids"model="account.move.line"eval="[
            (0,0,{
                'product_id':ref('product.product_product_16'),
                'quantity':1,
                'price_unit':1500.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                    ('company_id','=',ref('l10n_in.demo_company_in')),
                    ('type_tax_use','=','sale'),
                    ('amount','=',18),
                    ('tax_group_id','=',obj().env.ref('l10n_in.gst_group').id)],limit=1).ids)]
            }),
            (0,0,{
                'product_id':ref('product.product_product_20'),
                'quantity':1,
                'price_unit':2300.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                    ('company_id','=',ref('l10n_in.demo_company_in')),
                    ('type_tax_use','=','sale'),
                    ('amount','=',18),
                    ('tax_group_id','=',obj().env.ref('l10n_in.gst_group').id)],limit=1).ids)]
            }),
            (0,0,{
                'product_id':ref('product.product_product_22'),
                'quantity':1,
                'price_unit':2600.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                    ('company_id','=',ref('l10n_in.demo_company_in')),
                    ('type_tax_use','=','sale'),
                    ('amount','=',5),
                    ('tax_group_id','=',obj().env.ref('l10n_in.gst_group').id)],limit=1).ids)]
            }),
            (0,0,{
                'product_id':ref('product.product_product_24'),
                'quantity':2,
                'price_unit':1655.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                    ('company_id','=',ref('l10n_in.demo_company_in')),
                    ('type_tax_use','=','sale'),
                    ('amount','=',5),
                    ('tax_group_id','=',obj().env.ref('l10n_in.gst_group').id)],limit=1).ids)]
            }),
        ]"/>
    </record>

    <!--DemoofB2CL(businesstoconsumer-Large)TaxablesuppliesmadetootherunregisteredPersonandinvoicevalueismorethanINR2.5lakhs.-->
    <recordid="demo_invoice_b2cl"model="account.move">
        <fieldname="move_type">out_invoice</field>
        <fieldname="partner_id"ref="l10n_in.res_partner_unregistered_customer_out_state"/>
        <fieldname="invoice_user_id"ref="base.user_demo"/>
        <fieldname="invoice_payment_term_id"ref="account.account_payment_term_end_following_month"/>
        <fieldname="invoice_date"eval="time.strftime('%Y-%m')+'-01'"/>
        <fieldname="l10n_in_gst_treatment">consumer</field>
        <fieldname="journal_id"model="account.journal"
            eval="obj().search([
                ('type','=','sale'),
                ('company_id','=',ref('l10n_in.demo_company_in'))],limit=1).id"/>
        <fieldname="invoice_line_ids"model="account.move.line"eval="[
            (0,0,{
                'product_id':ref('product.consu_delivery_01'),
                'quantity':3,
                'price_unit':90000.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                    ('company_id','=',ref('l10n_in.demo_company_in')),
                    ('type_tax_use','=','sale'),
                    ('amount','=',18),
                    ('tax_group_id','=',obj().env.ref('l10n_in.igst_group').id)],limit=1).ids)]
            }),
        ]"/>
    </record>

    <!--DemoofEXP(Export)suppliesincludingsuppliestoSEZ/SEZDeveloperordeemedexports.-->
    <recordid="demo_invoice_exp"model="account.move">
        <fieldname="move_type">out_invoice</field>
        <fieldname="partner_id"ref="base.res_partner_3"/>
        <fieldname="invoice_user_id"ref="base.user_demo"/>
        <fieldname="invoice_payment_term_id"ref="account.account_payment_term_end_following_month"/>
        <fieldname="invoice_date"eval="time.strftime('%Y-%m')+'-01'"/>
        <fieldname="l10n_in_gst_treatment">overseas</field>
        <fieldname="l10n_in_shipping_bill_number">999704</field>
        <fieldname="l10n_in_shipping_bill_date"eval="time.strftime('%Y-%m')+'-02'"/>
        <fieldname="l10n_in_shipping_port_code_id"ref="l10n_in.port_code_inixy1"/>
        <fieldname="journal_id"model="account.journal"
            eval="obj().search([
                ('type','=','sale'),
                ('company_id','=',ref('l10n_in.demo_company_in'))],limit=1).id"/>
        <fieldname="invoice_line_ids"model="account.move.line"eval="[
            (0,0,{
                'product_id':ref('product.product_product_4'),
                'quantity':30,
                'price_unit':8000.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                    ('company_id','=',ref('l10n_in.demo_company_in')),
                    ('type_tax_use','=','sale'),
                    ('amount','=',18),
                    ('tax_group_id','=',obj().env.ref('l10n_in.igst_group').id)],limit=1).ids)]
            }),
        ]"/>
    </record>

    <!--Demoofexemp(NilRated,ExemptedandNonGSTsupplies).SetNillratedandExemptedtaxinline.-->
    <recordid="demo_invoice_nill"model="account.move">
        <fieldname="move_type">out_invoice</field>
        <fieldname="partner_id"ref="l10n_in.res_partner_registered_customer"/>
        <fieldname="invoice_user_id"ref="base.user_demo"/>
        <fieldname="invoice_payment_term_id"ref="account.account_payment_term_end_following_month"/>
        <fieldname="invoice_date"eval="time.strftime('%Y-%m')+'-01'"/>
        <fieldname="l10n_in_gst_treatment">regular</field>
        <fieldname="journal_id"model="account.journal"
            eval="obj().search([
                ('type','=','sale'),
                ('company_id','=',ref('l10n_in.demo_company_in'))],limit=1).id"/>
        <fieldname="invoice_line_ids"model="account.move.line"eval="[
            (0,0,{
                'product_id':ref('product.product_product_1'),
                'quantity':2,
                'price_unit':25000.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                    ('company_id','=',ref('l10n_in.demo_company_in')),
                    ('type_tax_use','=','sale'),
                    ('tax_group_id','=',obj().env.ref('l10n_in.exempt_group').id)],limit=1).ids)]
            }),
            (0,0,{
                'product_id':ref('product.product_product_5'),
                'quantity':1,
                'price_unit':400.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                    ('company_id','=',ref('l10n_in.demo_company_in')),
                    ('type_tax_use','=','sale'),
                    ('tax_group_id','=',obj().env.ref('l10n_in.nil_rated_group').id)],limit=1).ids)]
            }),
        ]"/>
    </record>

    <!--Demoofcdnr(Credit/DebitNoteforregisteredperson).Createcreditnotefordemob2binvoice.-->
    <recordid="demo_invoice_cdnr"model="account.move">
        <fieldname="move_type">out_refund</field>
        <fieldname="partner_id"ref="l10n_in.res_partner_registered_customer"/>
        <fieldname="l10n_in_reseller_partner_id"ref="l10n_in.res_partner_reseller"/>
        <fieldname="invoice_user_id"ref="base.user_demo"/>
        <fieldname="invoice_payment_term_id"ref="account.account_payment_term_end_following_month"/>
        <fieldname="invoice_date"eval="time.strftime('%Y-%m')+'-02'"/>
        <fieldname="reversed_entry_id"ref="l10n_in.demo_invoice_b2b"/>
        <fieldname="l10n_in_gst_treatment">regular</field>
        <fieldname="journal_id"model="account.journal"
            eval="obj().search([
                ('type','=','sale'),
                ('company_id','=',ref('l10n_in.demo_company_in'))],limit=1).id"/>
        <fieldname="invoice_line_ids"model="account.move.line"eval="[
            (0,0,{
                'product_id':ref('product.product_product_8'),
                'quantity':2,
                'price_unit':40000.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                    ('company_id','=',ref('l10n_in.demo_company_in')),
                    ('type_tax_use','=','sale'),
                    ('amount','=',28),
                    ('tax_group_id','=',obj().env.ref('l10n_in.gst_group').id)],limit=1).ids)]
            }),
            (0,0,{
                'product_id':ref('product.product_product_9'),
                'quantity':3,
                'price_unit':400.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                    ('company_id','=',ref('l10n_in.demo_company_in')),
                    ('type_tax_use','=','sale'),
                    ('amount','=',18),
                    ('tax_group_id','=',obj().env.ref('l10n_in.gst_group').id)],limit=1).ids)]
            }),
            (0,0,{
                'product_id':ref('product.product_product_10'),
                'quantity':3,
                'price_unit':400.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                        ('company_id','=',ref('l10n_in.demo_company_in')),
                        ('type_tax_use','=','sale'),
                    '|',
                        '&amp;',
                        ('amount','=',18),
                        ('tax_group_id','=',ref('l10n_in.gst_group')),
                        '&amp;',
                        ('tax_group_id','=',ref('l10n_in.cess_group')),
                        ('children_tax_ids.amount','=',5)
                    ],limit=2).ids)]
            }),
        ]"/>
    </record>

    <!--Demoofcdnr(Credit/DebitNoteforunregisteredperson).Createcreditnotefordemob2clinvoice.-->
    <recordid="demo_invoice_cdnur"model="account.move">
        <fieldname="move_type">out_refund</field>
        <fieldname="partner_id"ref="l10n_in.res_partner_unregistered_customer_out_state"/>
        <fieldname="invoice_user_id"ref="base.user_demo"/>
        <fieldname="invoice_payment_term_id"ref="account.account_payment_term_end_following_month"/>
        <fieldname="invoice_date"eval="time.strftime('%Y-%m')+'-02'"/>
        <fieldname="reversed_entry_id"ref="l10n_in.demo_invoice_b2cl"/>
        <fieldname="l10n_in_gst_treatment">consumer</field>
        <fieldname="journal_id"model="account.journal"
            eval="obj().search([
                ('type','=','sale'),
                ('company_id','=',ref('l10n_in.demo_company_in'))],limit=1).id"/>
        <fieldname="invoice_line_ids"model="account.move.line"eval="[
            (0,0,{
                'product_id':ref('product.consu_delivery_01'),
                'quantity':3,
                'price_unit':90000.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                    ('company_id','=',ref('l10n_in.demo_company_in')),
                    ('type_tax_use','=','sale'),
                    ('amount','=',18),
                    ('tax_group_id','=',obj().env.ref('l10n_in.igst_group').id)],limit=1).ids)]
            }),
        ]"/>
    </record>

    <!--Demoofatadj(Advanceadjustments).WheninvoiceisreconcileagainstAdvancepayment.
    Reconciledinvoiceconsiderationforwhichpaymenthavebeenreceivedinthepastmonths.-->
    <recordid="demo_invoice_atadj"model="account.move">
        <fieldname="move_type">out_invoice</field>
        <fieldname="partner_id"ref="l10n_in.res_partner_registered_customer"/>
        <fieldname="invoice_user_id"ref="base.user_demo"/>
        <fieldname="invoice_payment_term_id"ref="account.account_payment_term_end_following_month"/>
        <fieldname="invoice_date"eval="(datetime.now()+relativedelta(months=1)).strftime('%Y-%m-01')"/>
        <fieldname="l10n_in_gst_treatment">regular</field>
        <fieldname="journal_id"model="account.journal"
            eval="obj().search([
                ('type','=','sale'),
                ('company_id','=',ref('l10n_in.demo_company_in'))],limit=1).id"/>
        <fieldname="invoice_line_ids"model="account.move.line"eval="[
            (0,0,{
                'product_id':ref('product.consu_delivery_01'),
                'quantity':3,
                'price_unit':2000.0,
                'tax_ids':[(6,0,obj().tax_ids.search([
                    ('company_id','=',ref('l10n_in.demo_company_in')),
                    ('type_tax_use','=','sale'),
                    ('amount','=',18),
                    ('tax_group_id','=',obj().env.ref('l10n_in.gst_group').id)],limit=1).ids)]
            }),
        ]"/>
    </record>

    <functionmodel="account.move"name="action_post">
        <valueeval="[
            ref('demo_invoice_b2b'),ref('demo_invoice_b2cs'),ref('demo_invoice_b2cl'),
            ref('demo_invoice_exp'),ref('demo_invoice_nill'),ref('demo_invoice_cdnr'),
            ref('demo_invoice_cdnur'),ref('demo_invoice_atadj')]"/>
    </function>

    <!--Reconcileddemopaymentwithdemoinvoiceofatadj(Advanceadjustments)-->
    <functionmodel="account.move"name="js_assign_outstanding_line">
        <valueeval="[ref('demo_invoice_atadj')]"/>
        <valuemodel="account.move.line"eval="obj().search([
            ('credit','>',0),
            ('debit','=',0),
            ('payment_id','=',obj().env.ref('l10n_in.demo_payment_at').id)
            ],limit=1).id"/>
    </function>

</flectra>
