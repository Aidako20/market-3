flectra.define('payment.payment_form',function(require){
"usestrict";

varcore=require('web.core');
varDialog=require('web.Dialog');
varpublicWidget=require('web.public.widget');

var_t=core._t;

publicWidget.registry.PaymentForm=publicWidget.Widget.extend({
    selector:'.o_payment_form',
    events:{
        'submit':'onSubmit',
        'click#o_payment_form_pay':'payEvent',
        'click#o_payment_form_add_pm':'addPmEvent',
        'clickbutton[name="delete_pm"]':'deletePmEvent',
        'click.o_payment_form_pay_icon_more':'onClickMorePaymentIcon',
        'click.o_payment_acquirer_select':'radioClickEvent',
    },

    /**
     *@override
     */
    start:function(){
        this._adaptPayButton();
        window.addEventListener('pageshow',function(event){
            if(event.persisted){
                window.location.reload();
            }
        });
        varself=this;
        returnthis._super.apply(this,arguments).then(function(){
            self.options=_.extend(self.$el.data(),self.options);
            self.updateNewPaymentDisplayStatus();
            $('[data-toggle="tooltip"]').tooltip();
        });
    },

    //--------------------------------------------------------------------------
    //Private
    //--------------------------------------------------------------------------

    /**
     *@private
     *@param{string}title
     *@param{string}message
     */
    displayError:function(title,message){
        var$checkedRadio=this.$('input[type="radio"]:checked'),
            acquirerID=this.getAcquirerIdFromRadio($checkedRadio[0]);
        var$acquirerForm;
        if(this.isNewPaymentRadio($checkedRadio[0])){
            $acquirerForm=this.$('#o_payment_add_token_acq_'+acquirerID);
        }
        elseif(this.isFormPaymentRadio($checkedRadio[0])){
            $acquirerForm=this.$('#o_payment_form_acq_'+acquirerID);
        }

        if($checkedRadio.length===0){
            returnnewDialog(null,{
                title:_t('Error:')+_.str.escapeHTML(title),
                size:'medium',
                $content:"<p>"+(_.str.escapeHTML(message)||"")+"</p>",
                buttons:[
                {text:_t('Ok'),close:true}]}).open();
        }else{
            //removedifexisterrormessage
            this.$('#payment_error').remove();
            varmessageResult='<divclass="alertalert-dangermb4"id="payment_error">';
            if(title!=''){
                messageResult=messageResult+'<b>'+_.str.escapeHTML(title)+':</b><br/>';
            }
            messageResult=messageResult+_.str.escapeHTML(message)+'</div>';
            $acquirerForm.append(messageResult);
        }
    },
    hideError:function(){
        this.$('#payment_error').remove();
    },
    /**
     *@private
     *@param{DOMElement}element
     */
    getAcquirerIdFromRadio:function(element){
        return$(element).data('acquirer-id');
    },
    /**
     *@private
     *@param{jQuery}$form
     */
    getFormData:function($form){
        varunindexed_array=$form.serializeArray();
        varindexed_array={};

        $.map(unindexed_array,function(n,i){
            indexed_array[n.name]=n.value;
        });
        returnindexed_array;
    },
    /**
     *@private
     *@param{DOMElement}element
     */
    isFormPaymentRadio:function(element){
        return$(element).data('form-payment')==='True';
    },
    /**
     *@private
     *@param{DOMElement}element
     */
    isNewPaymentRadio:function(element){
        return$(element).data('s2s-payment')==='True';
    },
    /**
     *@private
     */
    updateNewPaymentDisplayStatus:function(){
        varchecked_radio=this.$('input[type="radio"]:checked');
        //wehidealltheacquirersform
        this.$('[id*="o_payment_add_token_acq_"]').addClass('d-none');
        this.$('[id*="o_payment_form_acq_"]').addClass('d-none');
        if(checked_radio.length!==1){
            return;
        }
        checked_radio=checked_radio[0];
        varacquirer_id=this.getAcquirerIdFromRadio(checked_radio);

        //ifweclickedonanaddnewpaymentradio,displayitsform
        if(this.isNewPaymentRadio(checked_radio)){
            this.$('#o_payment_add_token_acq_'+acquirer_id).removeClass('d-none');
        }
        elseif(this.isFormPaymentRadio(checked_radio)){
            this.$('#o_payment_form_acq_'+acquirer_id).removeClass('d-none');
        }
    },

    disableButton:function(button){
        $("body").block({overlayCSS:{backgroundColor:"#000",opacity:0,zIndex:1050},message:false});
        $(button).attr('disabled',true);
        $(button).children('.fa-lock').removeClass('fa-lock');
        $(button).prepend('<spanclass="o_loader"><iclass="fafa-refreshfa-spin"></i>&nbsp;</span>');
    },

    enableButton:function(button){
        $('body').unblock();
        $(button).attr('disabled',false);
        $(button).children('.fa').addClass('fa-lock');
        $(button).find('span.o_loader').remove();
    },
    _parseError:function(e){
        if(e.message.data.arguments[1]){
            returne.message.data.arguments[0]+e.message.data.arguments[1];
        }
        returne.message.data.arguments[0];
    },
    _adaptPayButton:function(){
        var$payButton=$("#o_payment_form_pay");
        vardisabledReasons=$payButton.data('disabled_reasons')||{};
        $payButton.prop('disabled',_.contains(disabledReasons,true));
    },

    //--------------------------------------------------------------------------
    //Handlers
    //--------------------------------------------------------------------------

    /**
     *@private
     *@param{Event}ev
     */
    payEvent:function(ev){
        ev.preventDefault();
        varform=this.el;
        varchecked_radio=this.$('input[type="radio"]:checked');
        varself=this;
        if(ev.type==='submit'){
            varbutton=$(ev.target).find('*[type="submit"]')[0]
        }else{
            varbutton=ev.target;
        }

        //firstwecheckthattheuserhasselectedapaymentmethod
        if(checked_radio.length===1){
            checked_radio=checked_radio[0];

            //weretrievealltheinputinsidetheacquirerformand'serialize'themtoanindexedarray
            varacquirer_id=this.getAcquirerIdFromRadio(checked_radio);
            varacquirer_form=false;
            if(this.isNewPaymentRadio(checked_radio)){
                acquirer_form=this.$('#o_payment_add_token_acq_'+acquirer_id);
            }else{
                acquirer_form=this.$('#o_payment_form_acq_'+acquirer_id);
            }
            varinputs_form=$('input',acquirer_form);
            vards=$('input[name="data_set"]',acquirer_form)[0];

            //iftheuserisaddinganewpayment
            if(this.isNewPaymentRadio(checked_radio)){
                if(this.options.partnerId===undefined){
                    console.warn('payment_form:unsetpartner_idwhenaddingnewtoken;thingscouldgowrong');
                }
                varform_data=this.getFormData(inputs_form);
                varwrong_input=false;

                inputs_form.toArray().forEach(function(element){
                    //skipthecheckofnonvisibleinputs
                    if($(element).attr('type')=='hidden'){
                        returntrue;
                    }
                    $(element).closest('div.form-group').removeClass('o_has_error').find('.form-control,.custom-select').removeClass('is-invalid');
                    $(element).siblings(".o_invalid_field").remove();
                    //forcecheckofformsvalidity(usefulforFirefoxthatrefillformsautomaticallyonf5)
                    $(element).trigger("focusout");
                    if(element.dataset.isRequired&&element.value.length===0){
                            $(element).closest('div.form-group').addClass('o_has_error').find('.form-control,.custom-select').addClass('is-invalid');
                            $(element).closest('div.form-group').append('<divstyle="color:red"class="o_invalid_field"aria-invalid="true">'+_.str.escapeHTML("Thevalueisinvalid.")+'</div>');
                            wrong_input=true;
                    }
                    elseif($(element).closest('div.form-group').hasClass('o_has_error')){
                        wrong_input=true;
                        $(element).closest('div.form-group').append('<divstyle="color:red"class="o_invalid_field"aria-invalid="true">'+_.str.escapeHTML("Thevalueisinvalid.")+'</div>');
                    }
                });

                if(wrong_input){
                    return;
                }

                this.disableButton(button);
                //dothecalltotheroutestoredinthe'data_set'inputoftheacquirerform,thedatamustbecalled'create-route'
                returnthis._rpc({
                    route:ds.dataset.createRoute,
                    params:form_data,
                }).then(function(data){
                    //iftheserverhasreturnedtrue
                    if(data.result){
                        //anditneeda3DSauthentication
                        if(data['3d_secure']!==false){
                            //thenwedisplaythe3DSpagetotheuser
                            $("body").html(data['3d_secure']);
                        }
                        else{
                            checked_radio.value=data.id;//settheradiovaluetothenewcardid
                            form.submit();
                            returnnewPromise(function(){});
                        }
                    }
                    //iftheserverhasreturnedfalse,wedisplayanerror
                    else{
                        if(data.error){
                            self.displayError(
                                '',
                                data.error);
                        }else{//iftheserverdoesn'tprovideanerrormessage
                            self.displayError(
                                _t('ServerError'),
                                _t('e.g.Yourcreditcarddetailsarewrong.Pleaseverify.'));
                        }
                    }
                    //hereweremovethe'processing'iconfromthe'addanewpayment'button
                    self.enableButton(button);
                }).guardedCatch(function(error){
                    error.event.preventDefault();
                    //iftherpcfails,prettyobvious
                    self.enableButton(button);

                    self.displayError(
                        _t('ServerError'),
                        _t("Wearenotabletoaddyourpaymentmethodatthemoment.")+
                            self._parseError(error)
                    );
                });
            }
            //iftheuserisgoingtopaywithaformpayment,then
            elseif(this.isFormPaymentRadio(checked_radio)){
                this.disableButton(button);
                var$tx_url=this.$el.find('input[name="prepare_tx_url"]');
                //ifthere'sapreparetxurlset
                if($tx_url.length===1){
                    //iftheuserwantstosavehiscreditcardinfo
                    varform_save_token=acquirer_form.find('input[name="o_payment_form_save_token"]').prop('checked');
                    //thenwecalltheroutetopreparethetransaction
                    returnthis._rpc({
                        route:$tx_url[0].value,
                        params:{
                            'acquirer_id':parseInt(acquirer_id),
                            'save_token':form_save_token,
                            'access_token':self.options.accessToken,
                            'success_url':self.options.successUrl,
                            'error_url':self.options.errorUrl,
                            'callback_method':self.options.callbackMethod,
                            'order_id':self.options.orderId,
                            'invoice_id':self.options.invoiceId,
                        },
                    }).then(function(result){
                        if(result){
                            //iftheserversentusthehtmlform,wecreateaformelement
                            varnewForm=document.createElement('form');
                            newForm.setAttribute("method",self._get_redirect_form_method());
                            newForm.setAttribute("provider",checked_radio.dataset.provider);
                            newForm.hidden=true;//hideit
                            newForm.innerHTML=result;//putthehtmlsentbytheserverinsidetheform
                            varaction_url=$(newForm).find('input[name="data_set"]').data('actionUrl');
                            newForm.setAttribute("action",action_url);//settheactionurl
                            $(document.getElementsByTagName('body')[0]).append(newForm);//appendtheformtothebody
                            $(newForm).find('input[data-remove-me]').remove();//removealltheinputthatshouldberemoved
                            if(action_url){
                                newForm.submit();//andfinallysubmittheform
                                returnnewPromise(function(){});
                            }
                        }
                        else{
                            self.displayError(
                                _t('ServerError'),
                                _t("Wearenotabletoredirectyoutothepaymentform.")
                            );
                            self.enableButton(button);
                        }
                    }).guardedCatch(function(error){
                        error.event.preventDefault();
                        self.displayError(
                            _t('ServerError'),
                            _t("Wearenotabletoredirectyoutothepaymentform.")+""+
                                self._parseError(error)
                        );
                        self.enableButton(button);
                    });
                }
                else{
                    //weappendtheformtothebodyandsendit.
                    this.displayError(
                        _t("Cannotsetupthepayment"),
                        _t("We'reunabletoprocessyourpayment.")
                    );
                    self.enableButton(button);
                }
            }
            else{ //iftheuserisusinganoldpaymentthenwejustsubmittheform
                this.disableButton(button);
                form.submit();
                returnnewPromise(function(){});
            }
        }
        else{
            this.displayError(
                _t('Nopaymentmethodselected'),
                _t('Pleaseselectapaymentmethod.')
            );
            this.enableButton(button);
        }
    },
    /**
     *ReturntheHTTPmethodtobeusedbytheredirectform.
     *
     *@private
     *@return{string}TheHTTPmethod,"post"bydefault
     */
    _get_redirect_form_method:function(){
        return"post";
    },
    /**
     *Calledwhenclickingonthebuttontoaddanewpaymentmethod.
     *
     *@private
     *@param{Event}ev
     */
    addPmEvent:function(ev){
        ev.stopPropagation();
        ev.preventDefault();
        varchecked_radio=this.$('input[type="radio"]:checked');
        varself=this;
        if(ev.type==='submit'){
            varbutton=$(ev.target).find('*[type="submit"]')[0]
        }else{
            varbutton=ev.target;
        }

        //wecheckiftheuserhasselecteda'addanewpayment'option
        if(checked_radio.length===1&&this.isNewPaymentRadio(checked_radio[0])){
            //weretrievewhichacquirerisused
            checked_radio=checked_radio[0];
            varacquirer_id=this.getAcquirerIdFromRadio(checked_radio);
            varacquirer_form=this.$('#o_payment_add_token_acq_'+acquirer_id);
            //weretrievealltheinputinsidetheacquirerformand'serialize'themtoanindexedarray
            varinputs_form=$('input',acquirer_form);
            varform_data=this.getFormData(inputs_form);
            vards=$('input[name="data_set"]',acquirer_form)[0];
            varwrong_input=false;

            inputs_form.toArray().forEach(function(element){
                //skipthecheckofnonvisibleinputs
                if($(element).attr('type')=='hidden'){
                    returntrue;
                }
                $(element).closest('div.form-group').removeClass('o_has_error').find('.form-control,.custom-select').removeClass('is-invalid');
                $(element).siblings(".o_invalid_field").remove();
                //forcecheckofformsvalidity(usefulforFirefoxthatrefillformsautomaticallyonf5)
                $(element).trigger("focusout");
                if(element.dataset.isRequired&&element.value.length===0){
                        $(element).closest('div.form-group').addClass('o_has_error').find('.form-control,.custom-select').addClass('is-invalid');
                        varmessage='<divstyle="color:red"class="o_invalid_field"aria-invalid="true">'+_.str.escapeHTML("Thevalueisinvalid.")+'</div>';
                        $(element).closest('div.form-group').append(message);
                        wrong_input=true;
                }
                elseif($(element).closest('div.form-group').hasClass('o_has_error')){
                    wrong_input=true;
                    varmessage='<divstyle="color:red"class="o_invalid_field"aria-invalid="true">'+_.str.escapeHTML("Thevalueisinvalid.")+'</div>';
                    $(element).closest('div.form-group').append(message);
                }
            });

            if(wrong_input){
                return;
            }
            //Weadda'processing'iconintothe'addanewpayment'button
            $(button).attr('disabled',true);
            $(button).children('.fa-plus-circle').removeClass('fa-plus-circle');
            $(button).prepend('<spanclass="o_loader"><iclass="fafa-refreshfa-spin"></i>&nbsp;</span>');

            //dothecalltotheroutestoredinthe'data_set'inputoftheacquirerform,thedatamustbecalled'create-route'
            this._rpc({
                route:ds.dataset.createRoute,
                params:form_data,
            }).then(function(data){
                //iftheserverhasreturnedtrue
                if(data.result){
                    //anditneeda3DSauthentication
                    if(data['3d_secure']!==false){
                        //thenwedisplaythe3DSpagetotheuser
                        $("body").html(data['3d_secure']);
                    }
                    //ifitdoesn'trequire3DS
                    else{
                        //wejustgotothereturn_urlorreloadthepage
                        if(form_data.return_url){
                            window.location=form_data.return_url;
                        }
                        else{
                            window.location.reload();
                        }
                    }
                }
                //iftheserverhasreturnedfalse,wedisplayanerror
                else{
                    if(data.error){
                        self.displayError(
                            '',
                            data.error);
                    }else{//iftheserverdoesn'tprovideanerrormessage
                        self.displayError(
                            _t('ServerError'),
                            _t('e.g.Yourcreditcarddetailsarewrong.Pleaseverify.'));
                    }
                }
                //hereweremovethe'processing'iconfromthe'addanewpayment'button
                $(button).attr('disabled',false);
                $(button).children('.fa').addClass('fa-plus-circle');
                $(button).find('span.o_loader').remove();
            }).guardedCatch(function(error){
                error.event.preventDefault();
                //iftherpcfails,prettyobvious
                $(button).attr('disabled',false);
                $(button).children('.fa').addClass('fa-plus-circle');
                $(button).find('span.o_loader').remove();

                self.displayError(
                    _t('Servererror'),
                    _t("Wearenotabletoaddyourpaymentmethodatthemoment.")+
                        self._parseError(error)
                );
            });
        }
        else{
            this.displayError(
                _t('Nopaymentmethodselected'),
                _t('Pleaseselecttheoptiontoaddanewpaymentmethod.')
            );
        }
    },
    /**
     *Calledwhensubmittingtheform(e.g.throughtheReturnkey).
     *Weneedtocheckwhetherwearepayingoraddinganewpmanddispatch
     *tothecorrectmethod.
     *
     *@private
     *@param{Event}ev
     */
    onSubmit:function(ev){
        ev.stopPropagation();
        ev.preventDefault();
        varbutton=$(ev.target).find('*[type="submit"]')[0]
        if(button.id==='o_payment_form_pay'){
            returnthis.payEvent(ev);
        }elseif(button.id==='o_payment_form_add_pm'){
            returnthis.addPmEvent(ev);
        }
        return;
    },
    /**
     *Calledwhenclickingonabuttontodeleteapaymentmethod.
     *
     *@private
     *@param{Event}ev
     */
    deletePmEvent:function(ev){
        ev.stopPropagation();
        ev.preventDefault();
        varself=this;
        varpm_id=parseInt(ev.currentTarget.value);

        vartokenDelete=function(){
            self._rpc({
                model:'payment.token',
                method:'unlink',
                args:[pm_id],
            }).then(function(result){
                if(result===true){
                    ev.target.closest('div').remove();
                }
            },function(){
                self.displayError(
                    _t('ServerError'),
                    _t("Wearenotabletodeleteyourpaymentmethodatthemoment.")
                );
            });
        };

        this._rpc({
            model:'payment.token',
            method:'get_linked_records',
            args:[pm_id],
        }).then(function(result){
            if(result[pm_id].length>0){
                //ifthere'srecordslinkedtothispaymentmethod
                varcontent='';
                result[pm_id].forEach(function(sub){
                    content+='<p><ahref="'+sub.url+'"title="'+sub.description+'">'+sub.name+'</a></p>';
                });

                content=$('<div>').html('<p>'+_t('Thiscardiscurrentlylinkedtothefollowingrecords:')+'</p>'+content);
                //Thenwedisplaythelistoftherecordsandasktheuserifhereallywanttoremovethepaymentmethod.
                newDialog(self,{
                    title:_t('Warning!'),
                    size:'medium',
                    $content:content,
                    buttons:[
                    {text:_t('ConfirmDeletion'),classes:'btn-primary',close:true,click:tokenDelete},
                    {text:_t('Cancel'),close:true}]
                }).open();
            }
            else{
                //ifthere'snorecordslinkedtothispaymentmethod,thenwedeleteit
                tokenDelete();
            }
        },function(err,event){
            self.displayError(
                _t('ServerError'),
                _t("Wearenotabletodeleteyourpaymentmethodatthemoment.")+err.data.message
            );
        });
    },
    /**
     *Calledwhenclickingon'andmore'toshowmorepaymenticon.
     *
     *@private
     *@param{Event}ev
     */
    onClickMorePaymentIcon:function(ev){
        ev.preventDefault();
        ev.stopPropagation();
        var$listItems=$(ev.currentTarget).parents('ul').children('li');
        var$moreItem=$(ev.currentTarget).parents('li');
        $listItems.removeClass('d-none');
        $moreItem.addClass('d-none');
    },
    /**
     *Calledwhenclickingonaradiobutton.
     *
     *@private
     *@param{Event}ev
     */
    radioClickEvent:function(ev){
        //radiobuttoncheckedwhenweclickonentirezone(body)ofthepaymentacquirer
        $(ev.currentTarget).find('input[type="radio"]').prop("checked",true);
        this.updateNewPaymentDisplayStatus();
    },
});
returnpublicWidget.registry.PaymentForm;
});
