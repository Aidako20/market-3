flectra.define('purchase.product_matrix_configurator',function(require){

varrelationalFields=require('web.relational_fields');
varFieldsRegistry=require('web.field_registry');
varcore=require('web.core');
var_t=core._t;

/**
 *Thepurchase.product_matrix_configuratorwidgetisawidgetextendingFieldMany2One
 *Ittriggerstheopeningofthematrixeditionwhentheproducthasmultiplevariants.
 *
 *
 *!!!WARNING!!!
 *
 *ThiswidgetisonlydesignedforPurchaseOrderLines.
 *!!!Itshouldonlybeusedonaproduct_templatefield!!!
 */
varMatrixConfiguratorWidget=relationalFields.FieldMany2One.extend({
    events:_.extend({},relationalFields.FieldMany2One.prototype.events,{
        'click.o_edit_product_configuration':'_onEditProductConfiguration'
    }),

    /**
     *@override
     */
    _render:function(){
       this._super.apply(this,arguments);
       if(this.mode==='edit'&&this.value&&
       (this._isConfigurableProduct())){
           this._addProductLinkButton();
           this._addConfigurationEditButton();
       }elseif(this.mode==='edit'&&this.value){
           this._addProductLinkButton();
       }else{
           this.$('.o_edit_product_configuration').hide();
       }
    },

    /**
    *Addbuttonlinkingtoproduct_id/product_template_idform.
    */
    _addProductLinkButton:function(){
       if(this.$('.o_external_button').length===0){
           var$productLinkButton=$('<button>',{
               type:'button',
               class:'fafa-external-linkbtnbtn-secondaryo_external_button',
               tabindex:'-1',
               draggable:false,
               'aria-label':_t('ExternalLink'),
               title:_t('ExternalLink')
           });

           var$inputDropdown=this.$('.o_input_dropdown');
           $inputDropdown.after($productLinkButton);
       }
    },

    /**
    *Ifcurrentproductisconfigurable,
    *Showeditbutton(inEditMode)aftertheproduct/product_template
    */
    _addConfigurationEditButton:function(){
       var$inputDropdown=this.$('.o_input_dropdown');

       if($inputDropdown.length!==0&&
           this.$('.o_edit_product_configuration').length===0){
           var$editConfigurationButton=$('<button>',{
               type:'button',
               class:'fafa-pencilbtnbtn-secondaryo_edit_product_configuration',
               tabindex:'-1',
               draggable:false,
               'aria-label':_t('EditConfiguration'),
               title:_t('EditConfiguration')
           });

           $inputDropdown.after($editConfigurationButton);
       }
    },

    /**
     *Hooktooverridewith_onEditProductConfiguration
     *toknowifeditpencilbuttonhastobeputnexttothefield
     *
     *@private
     */
    _isConfigurableProduct:function(){
        returnthis.recordData.is_configurable_product;
    },

    /**
     *Overridecatchingchangesonproduct_idorproduct_template_id.
     *Calls_onTemplateChangeincaseofproduct_templatechange.
     *Calls_onProductChangeincaseofproductchange.
     *Shouldn'tbeoverriddenbyproductconfigurators
     *oronlytosetupsomedataforfurthercomputation
     *beforecallingsuper.
     *
     *@override
     */
    reset:asyncfunction(record,ev){
        awaitthis._super(...arguments);
        if(ev&&ev.target===this&&ev.data.changes&&ev.data.changes.product_template_id&&record.data.product_template_id.data.id){
            this._onTemplateChange(record.data.product_template_id.data.id,ev.data.dataPointID);
        }
    },

    /**
     *Hookforproduct_templatebasedconfigurators
     *(productconfigurator,matrix,...).
     *
     *@param{integer}productTemplateId
     *@param{String}dataPointID
     *
     *@private
     */
    _onTemplateChange:function(productTemplateId,dataPointId){
        varself=this;
        this._rpc({
            model:'product.template',
            method:'get_single_product_variant',
            args:[
                productTemplateId
            ]
        }).then(function(result){
            if(result.product_id){
                self.trigger_up('field_changed',{
                    dataPointID:dataPointId,
                    changes:{
                        product_id:{id:result.product_id},
                    },
                });
            }else{
                self._openMatrix(productTemplateId,dataPointId,false);
            }
        });
    },

    /**
     *Hookforeditingaconfiguredline.
     *ThebuttontriggeringthisfunctionisonlyshowninEditmode,
     *when_isConfigurableProductisTrue.
     *
     *@private
     */
    _onEditProductConfiguration:function(){
        if(this.recordData.is_configurable_product){
            this._openMatrix(this.recordData.product_template_id.data.id,this.dataPointID,true);
        }
    },

    _openMatrix:function(productTemplateId,dataPointId,edit){
        varattribs=edit?this._getPTAVS():[];
        this.trigger_up('open_matrix',{
            product_template_id:productTemplateId,
            model:'purchase.order',
            dataPointId:dataPointId,
            edit:edit,
            editedCellAttributes:attribs,
            //usedtofocusthecellrepresentingthelineonwhichthepencilwasclicked.
        });
    },

    /**
     *Returnsthelistofattributeids(product.template.attribute.value)
     *fromthecurrentPOLine.
    */
    _getPTAVS:function(){
        varPTAVSIDS=[];
        _.each(this.recordData.product_no_variant_attribute_value_ids.res_ids,function(id){
            PTAVSIDS.push(id);
        });
        _.each(this.recordData.product_template_attribute_value_ids.res_ids,function(id){
            PTAVSIDS.push(id);
        });
        returnPTAVSIDS.sort(function(a,b){returna-b;});
    }
});

FieldsRegistry.add('matrix_configurator',MatrixConfiguratorWidget);

returnMatrixConfiguratorWidget;

});
